/*
Package gostruct is a generated package which contains definitions
of structs which represent a YANG schema. The generated schema can be
compressed by a series of transformations (compression was true
in this case).

This package was generated by /Users/cmo/.gvm/pkgsets/go1.10.2/global/src/github.com/openconfig/ygot/ygen/commongen.go
using the following YANG input files:
	- github.com/openconfig/public/release/models/interfaces/openconfig-if-aggregate.yang
	- github.com/openconfig/public/release/models/interfaces/openconfig-if-ethernet.yang
	- github.com/openconfig/public/release/models/interfaces/openconfig-interfaces.yang
	- github.com/openconfig/public/release/models/lldp/openconfig-lldp.yang
	- github.com/openconfig/public/release/models/network-instance/openconfig-network-instance.yang
	- github.com/openconfig/public/release/models/platform/openconfig-platform.yang
	- github.com/openconfig/public/release/models/system/openconfig-system.yang
	- github.com/openconfig/public/release/models/vlan/openconfig-vlan.yang
Imported modules were sourced from:
	- github.com/openconfig/public/...
	- github.com/YangModels/yang/...
*/
package gostruct


// Bgp represents the /openconfig-bgp/bgp YANG schema element.
type Bgp struct {
	Global	*Bgp_Global	`path:"global" module:"openconfig-bgp"`
	Neighbor	map[string]*Bgp_Neighbor	`path:"neighbors/neighbor" module:"openconfig-bgp"`
	PeerGroup	map[string]*Bgp_PeerGroup	`path:"peer-groups/peer-group" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp) IsYANGGoStruct() {}


// Bgp_Global represents the /openconfig-bgp/bgp/global YANG schema element.
type Bgp_Global struct {
	AfiSafi	map[E_OpenconfigBgpTypes_AFI_SAFI_TYPE]*Bgp_Global_AfiSafi	`path:"afi-safis/afi-safi" module:"openconfig-bgp"`
	As	*uint32	`path:"config/as" module:"openconfig-bgp"`
	Confederation	*Bgp_Global_Confederation	`path:"confederation" module:"openconfig-bgp"`
	DefaultRouteDistance	*Bgp_Global_DefaultRouteDistance	`path:"default-route-distance" module:"openconfig-bgp"`
	DynamicNeighborPrefix	map[string]*Bgp_Global_DynamicNeighborPrefix	`path:"dynamic-neighbor-prefixes/dynamic-neighbor-prefix" module:"openconfig-bgp"`
	GracefulRestart	*Bgp_Global_GracefulRestart	`path:"graceful-restart" module:"openconfig-bgp"`
	RouteSelectionOptions	*Bgp_Global_RouteSelectionOptions	`path:"route-selection-options" module:"openconfig-bgp"`
	RouterId	*string	`path:"config/router-id" module:"openconfig-bgp"`
	TotalPaths	*uint32	`path:"state/total-paths" module:"openconfig-bgp"`
	TotalPrefixes	*uint32	`path:"state/total-prefixes" module:"openconfig-bgp"`
	UseMultiplePaths	*Bgp_Global_UseMultiplePaths	`path:"use-multiple-paths" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Global implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Global) IsYANGGoStruct() {}


// Bgp_Global_AfiSafi represents the /openconfig-bgp/bgp/global/afi-safis/afi-safi YANG schema element.
type Bgp_Global_AfiSafi struct {
	AddPaths	*Bgp_Global_AfiSafi_AddPaths	`path:"add-paths" module:"openconfig-bgp"`
	AfiSafiName	E_OpenconfigBgpTypes_AFI_SAFI_TYPE	`path:"config/afi-safi-name|afi-safi-name" module:"openconfig-bgp"`
	Enabled	*bool	`path:"config/enabled" module:"openconfig-bgp"`
	GracefulRestart	*Bgp_Global_AfiSafi_GracefulRestart	`path:"graceful-restart" module:"openconfig-bgp"`
	Ipv4LabeledUnicast	*Bgp_Global_AfiSafi_Ipv4LabeledUnicast	`path:"ipv4-labeled-unicast" module:"openconfig-bgp"`
	Ipv4Unicast	*Bgp_Global_AfiSafi_Ipv4Unicast	`path:"ipv4-unicast" module:"openconfig-bgp"`
	Ipv6LabeledUnicast	*Bgp_Global_AfiSafi_Ipv6LabeledUnicast	`path:"ipv6-labeled-unicast" module:"openconfig-bgp"`
	Ipv6Unicast	*Bgp_Global_AfiSafi_Ipv6Unicast	`path:"ipv6-unicast" module:"openconfig-bgp"`
	L2VpnEvpn	*Bgp_Global_AfiSafi_L2VpnEvpn	`path:"l2vpn-evpn" module:"openconfig-bgp"`
	L2VpnVpls	*Bgp_Global_AfiSafi_L2VpnVpls	`path:"l2vpn-vpls" module:"openconfig-bgp"`
	L3VpnIpv4Multicast	*Bgp_Global_AfiSafi_L3VpnIpv4Multicast	`path:"l3vpn-ipv4-multicast" module:"openconfig-bgp"`
	L3VpnIpv4Unicast	*Bgp_Global_AfiSafi_L3VpnIpv4Unicast	`path:"l3vpn-ipv4-unicast" module:"openconfig-bgp"`
	L3VpnIpv6Multicast	*Bgp_Global_AfiSafi_L3VpnIpv6Multicast	`path:"l3vpn-ipv6-multicast" module:"openconfig-bgp"`
	L3VpnIpv6Unicast	*Bgp_Global_AfiSafi_L3VpnIpv6Unicast	`path:"l3vpn-ipv6-unicast" module:"openconfig-bgp"`
	RouteSelectionOptions	*Bgp_Global_AfiSafi_RouteSelectionOptions	`path:"route-selection-options" module:"openconfig-bgp"`
	SrtePolicyIpv4	*Bgp_Global_AfiSafi_SrtePolicyIpv4	`path:"srte-policy-ipv4" module:"openconfig-bgp"`
	SrtePolicyIpv6	*Bgp_Global_AfiSafi_SrtePolicyIpv6	`path:"srte-policy-ipv6" module:"openconfig-bgp"`
	TotalPaths	*uint32	`path:"state/total-paths" module:"openconfig-bgp"`
	TotalPrefixes	*uint32	`path:"state/total-prefixes" module:"openconfig-bgp"`
	UseMultiplePaths	*Bgp_Global_AfiSafi_UseMultiplePaths	`path:"use-multiple-paths" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Global_AfiSafi implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Global_AfiSafi) IsYANGGoStruct() {}


// Bgp_Global_AfiSafi_AddPaths represents the /openconfig-bgp/bgp/global/afi-safis/afi-safi/add-paths YANG schema element.
type Bgp_Global_AfiSafi_AddPaths struct {
	EligiblePrefixPolicy	*string	`path:"config/eligible-prefix-policy" module:"openconfig-bgp"`
	Receive	*bool	`path:"config/receive" module:"openconfig-bgp"`
	Send	*bool	`path:"config/send" module:"openconfig-bgp"`
	SendMax	*uint8	`path:"config/send-max" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Global_AfiSafi_AddPaths implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Global_AfiSafi_AddPaths) IsYANGGoStruct() {}


// Bgp_Global_AfiSafi_GracefulRestart represents the /openconfig-bgp/bgp/global/afi-safis/afi-safi/graceful-restart YANG schema element.
type Bgp_Global_AfiSafi_GracefulRestart struct {
	Enabled	*bool	`path:"config/enabled" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Global_AfiSafi_GracefulRestart implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Global_AfiSafi_GracefulRestart) IsYANGGoStruct() {}


// Bgp_Global_AfiSafi_Ipv4LabeledUnicast represents the /openconfig-bgp/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast YANG schema element.
type Bgp_Global_AfiSafi_Ipv4LabeledUnicast struct {
	PrefixLimit	*Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimit	`path:"prefix-limit" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Global_AfiSafi_Ipv4LabeledUnicast implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Global_AfiSafi_Ipv4LabeledUnicast) IsYANGGoStruct() {}


// Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimit represents the /openconfig-bgp/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit YANG schema element.
type Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimit struct {
	MaxPrefixes	*uint32	`path:"config/max-prefixes" module:"openconfig-bgp"`
	PreventTeardown	*bool	`path:"config/prevent-teardown" module:"openconfig-bgp"`
	RestartTimer	*float64	`path:"config/restart-timer" module:"openconfig-bgp"`
	WarningThresholdPct	*uint8	`path:"config/warning-threshold-pct" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimit implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimit) IsYANGGoStruct() {}


// Bgp_Global_AfiSafi_Ipv4Unicast represents the /openconfig-bgp/bgp/global/afi-safis/afi-safi/ipv4-unicast YANG schema element.
type Bgp_Global_AfiSafi_Ipv4Unicast struct {
	PrefixLimit	*Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimit	`path:"prefix-limit" module:"openconfig-bgp"`
	SendDefaultRoute	*bool	`path:"config/send-default-route" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Global_AfiSafi_Ipv4Unicast implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Global_AfiSafi_Ipv4Unicast) IsYANGGoStruct() {}


// Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimit represents the /openconfig-bgp/bgp/global/afi-safis/afi-safi/ipv4-unicast/prefix-limit YANG schema element.
type Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimit struct {
	MaxPrefixes	*uint32	`path:"config/max-prefixes" module:"openconfig-bgp"`
	PreventTeardown	*bool	`path:"config/prevent-teardown" module:"openconfig-bgp"`
	RestartTimer	*float64	`path:"config/restart-timer" module:"openconfig-bgp"`
	WarningThresholdPct	*uint8	`path:"config/warning-threshold-pct" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimit implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimit) IsYANGGoStruct() {}


// Bgp_Global_AfiSafi_Ipv6LabeledUnicast represents the /openconfig-bgp/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast YANG schema element.
type Bgp_Global_AfiSafi_Ipv6LabeledUnicast struct {
	PrefixLimit	*Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimit	`path:"prefix-limit" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Global_AfiSafi_Ipv6LabeledUnicast implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Global_AfiSafi_Ipv6LabeledUnicast) IsYANGGoStruct() {}


// Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimit represents the /openconfig-bgp/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit YANG schema element.
type Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimit struct {
	MaxPrefixes	*uint32	`path:"config/max-prefixes" module:"openconfig-bgp"`
	PreventTeardown	*bool	`path:"config/prevent-teardown" module:"openconfig-bgp"`
	RestartTimer	*float64	`path:"config/restart-timer" module:"openconfig-bgp"`
	WarningThresholdPct	*uint8	`path:"config/warning-threshold-pct" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimit implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimit) IsYANGGoStruct() {}


// Bgp_Global_AfiSafi_Ipv6Unicast represents the /openconfig-bgp/bgp/global/afi-safis/afi-safi/ipv6-unicast YANG schema element.
type Bgp_Global_AfiSafi_Ipv6Unicast struct {
	PrefixLimit	*Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimit	`path:"prefix-limit" module:"openconfig-bgp"`
	SendDefaultRoute	*bool	`path:"config/send-default-route" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Global_AfiSafi_Ipv6Unicast implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Global_AfiSafi_Ipv6Unicast) IsYANGGoStruct() {}


// Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimit represents the /openconfig-bgp/bgp/global/afi-safis/afi-safi/ipv6-unicast/prefix-limit YANG schema element.
type Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimit struct {
	MaxPrefixes	*uint32	`path:"config/max-prefixes" module:"openconfig-bgp"`
	PreventTeardown	*bool	`path:"config/prevent-teardown" module:"openconfig-bgp"`
	RestartTimer	*float64	`path:"config/restart-timer" module:"openconfig-bgp"`
	WarningThresholdPct	*uint8	`path:"config/warning-threshold-pct" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimit implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimit) IsYANGGoStruct() {}


// Bgp_Global_AfiSafi_L2VpnEvpn represents the /openconfig-bgp/bgp/global/afi-safis/afi-safi/l2vpn-evpn YANG schema element.
type Bgp_Global_AfiSafi_L2VpnEvpn struct {
	PrefixLimit	*Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimit	`path:"prefix-limit" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Global_AfiSafi_L2VpnEvpn implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Global_AfiSafi_L2VpnEvpn) IsYANGGoStruct() {}


// Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimit represents the /openconfig-bgp/bgp/global/afi-safis/afi-safi/l2vpn-evpn/prefix-limit YANG schema element.
type Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimit struct {
	MaxPrefixes	*uint32	`path:"config/max-prefixes" module:"openconfig-bgp"`
	PreventTeardown	*bool	`path:"config/prevent-teardown" module:"openconfig-bgp"`
	RestartTimer	*float64	`path:"config/restart-timer" module:"openconfig-bgp"`
	WarningThresholdPct	*uint8	`path:"config/warning-threshold-pct" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimit implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimit) IsYANGGoStruct() {}


// Bgp_Global_AfiSafi_L2VpnVpls represents the /openconfig-bgp/bgp/global/afi-safis/afi-safi/l2vpn-vpls YANG schema element.
type Bgp_Global_AfiSafi_L2VpnVpls struct {
	PrefixLimit	*Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimit	`path:"prefix-limit" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Global_AfiSafi_L2VpnVpls implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Global_AfiSafi_L2VpnVpls) IsYANGGoStruct() {}


// Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimit represents the /openconfig-bgp/bgp/global/afi-safis/afi-safi/l2vpn-vpls/prefix-limit YANG schema element.
type Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimit struct {
	MaxPrefixes	*uint32	`path:"config/max-prefixes" module:"openconfig-bgp"`
	PreventTeardown	*bool	`path:"config/prevent-teardown" module:"openconfig-bgp"`
	RestartTimer	*float64	`path:"config/restart-timer" module:"openconfig-bgp"`
	WarningThresholdPct	*uint8	`path:"config/warning-threshold-pct" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimit implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimit) IsYANGGoStruct() {}


// Bgp_Global_AfiSafi_L3VpnIpv4Multicast represents the /openconfig-bgp/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast YANG schema element.
type Bgp_Global_AfiSafi_L3VpnIpv4Multicast struct {
	PrefixLimit	*Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimit	`path:"prefix-limit" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Global_AfiSafi_L3VpnIpv4Multicast implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Global_AfiSafi_L3VpnIpv4Multicast) IsYANGGoStruct() {}


// Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimit represents the /openconfig-bgp/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit YANG schema element.
type Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimit struct {
	MaxPrefixes	*uint32	`path:"config/max-prefixes" module:"openconfig-bgp"`
	PreventTeardown	*bool	`path:"config/prevent-teardown" module:"openconfig-bgp"`
	RestartTimer	*float64	`path:"config/restart-timer" module:"openconfig-bgp"`
	WarningThresholdPct	*uint8	`path:"config/warning-threshold-pct" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimit implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimit) IsYANGGoStruct() {}


// Bgp_Global_AfiSafi_L3VpnIpv4Unicast represents the /openconfig-bgp/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-unicast YANG schema element.
type Bgp_Global_AfiSafi_L3VpnIpv4Unicast struct {
	PrefixLimit	*Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimit	`path:"prefix-limit" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Global_AfiSafi_L3VpnIpv4Unicast implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Global_AfiSafi_L3VpnIpv4Unicast) IsYANGGoStruct() {}


// Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimit represents the /openconfig-bgp/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit YANG schema element.
type Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimit struct {
	MaxPrefixes	*uint32	`path:"config/max-prefixes" module:"openconfig-bgp"`
	PreventTeardown	*bool	`path:"config/prevent-teardown" module:"openconfig-bgp"`
	RestartTimer	*float64	`path:"config/restart-timer" module:"openconfig-bgp"`
	WarningThresholdPct	*uint8	`path:"config/warning-threshold-pct" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimit implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimit) IsYANGGoStruct() {}


// Bgp_Global_AfiSafi_L3VpnIpv6Multicast represents the /openconfig-bgp/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-multicast YANG schema element.
type Bgp_Global_AfiSafi_L3VpnIpv6Multicast struct {
	PrefixLimit	*Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimit	`path:"prefix-limit" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Global_AfiSafi_L3VpnIpv6Multicast implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Global_AfiSafi_L3VpnIpv6Multicast) IsYANGGoStruct() {}


// Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimit represents the /openconfig-bgp/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit YANG schema element.
type Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimit struct {
	MaxPrefixes	*uint32	`path:"config/max-prefixes" module:"openconfig-bgp"`
	PreventTeardown	*bool	`path:"config/prevent-teardown" module:"openconfig-bgp"`
	RestartTimer	*float64	`path:"config/restart-timer" module:"openconfig-bgp"`
	WarningThresholdPct	*uint8	`path:"config/warning-threshold-pct" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimit implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Global_AfiSafi_L3VpnIpv6Multicast_PrefixLimit) IsYANGGoStruct() {}


// Bgp_Global_AfiSafi_L3VpnIpv6Unicast represents the /openconfig-bgp/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-unicast YANG schema element.
type Bgp_Global_AfiSafi_L3VpnIpv6Unicast struct {
	PrefixLimit	*Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimit	`path:"prefix-limit" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Global_AfiSafi_L3VpnIpv6Unicast implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Global_AfiSafi_L3VpnIpv6Unicast) IsYANGGoStruct() {}


// Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimit represents the /openconfig-bgp/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit YANG schema element.
type Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimit struct {
	MaxPrefixes	*uint32	`path:"config/max-prefixes" module:"openconfig-bgp"`
	PreventTeardown	*bool	`path:"config/prevent-teardown" module:"openconfig-bgp"`
	RestartTimer	*float64	`path:"config/restart-timer" module:"openconfig-bgp"`
	WarningThresholdPct	*uint8	`path:"config/warning-threshold-pct" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimit implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Global_AfiSafi_L3VpnIpv6Unicast_PrefixLimit) IsYANGGoStruct() {}


// Bgp_Global_AfiSafi_RouteSelectionOptions represents the /openconfig-bgp/bgp/global/afi-safis/afi-safi/route-selection-options YANG schema element.
type Bgp_Global_AfiSafi_RouteSelectionOptions struct {
	AdvertiseInactiveRoutes	*bool	`path:"config/advertise-inactive-routes" module:"openconfig-bgp"`
	AlwaysCompareMed	*bool	`path:"config/always-compare-med" module:"openconfig-bgp"`
	EnableAigp	*bool	`path:"config/enable-aigp" module:"openconfig-bgp"`
	ExternalCompareRouterId	*bool	`path:"config/external-compare-router-id" module:"openconfig-bgp"`
	IgnoreAsPathLength	*bool	`path:"config/ignore-as-path-length" module:"openconfig-bgp"`
	IgnoreNextHopIgpMetric	*bool	`path:"config/ignore-next-hop-igp-metric" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Global_AfiSafi_RouteSelectionOptions implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Global_AfiSafi_RouteSelectionOptions) IsYANGGoStruct() {}


// Bgp_Global_AfiSafi_SrtePolicyIpv4 represents the /openconfig-bgp/bgp/global/afi-safis/afi-safi/srte-policy-ipv4 YANG schema element.
type Bgp_Global_AfiSafi_SrtePolicyIpv4 struct {
	PrefixLimit	*Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimit	`path:"prefix-limit" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Global_AfiSafi_SrtePolicyIpv4 implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Global_AfiSafi_SrtePolicyIpv4) IsYANGGoStruct() {}


// Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimit represents the /openconfig-bgp/bgp/global/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit YANG schema element.
type Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimit struct {
	MaxPrefixes	*uint32	`path:"config/max-prefixes" module:"openconfig-bgp"`
	PreventTeardown	*bool	`path:"config/prevent-teardown" module:"openconfig-bgp"`
	RestartTimer	*float64	`path:"config/restart-timer" module:"openconfig-bgp"`
	WarningThresholdPct	*uint8	`path:"config/warning-threshold-pct" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimit implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Global_AfiSafi_SrtePolicyIpv4_PrefixLimit) IsYANGGoStruct() {}


// Bgp_Global_AfiSafi_SrtePolicyIpv6 represents the /openconfig-bgp/bgp/global/afi-safis/afi-safi/srte-policy-ipv6 YANG schema element.
type Bgp_Global_AfiSafi_SrtePolicyIpv6 struct {
	PrefixLimit	*Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimit	`path:"prefix-limit" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Global_AfiSafi_SrtePolicyIpv6 implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Global_AfiSafi_SrtePolicyIpv6) IsYANGGoStruct() {}


// Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimit represents the /openconfig-bgp/bgp/global/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit YANG schema element.
type Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimit struct {
	MaxPrefixes	*uint32	`path:"config/max-prefixes" module:"openconfig-bgp"`
	PreventTeardown	*bool	`path:"config/prevent-teardown" module:"openconfig-bgp"`
	RestartTimer	*float64	`path:"config/restart-timer" module:"openconfig-bgp"`
	WarningThresholdPct	*uint8	`path:"config/warning-threshold-pct" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimit implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Global_AfiSafi_SrtePolicyIpv6_PrefixLimit) IsYANGGoStruct() {}


// Bgp_Global_AfiSafi_UseMultiplePaths represents the /openconfig-bgp/bgp/global/afi-safis/afi-safi/use-multiple-paths YANG schema element.
type Bgp_Global_AfiSafi_UseMultiplePaths struct {
	Ebgp	*Bgp_Global_AfiSafi_UseMultiplePaths_Ebgp	`path:"ebgp" module:"openconfig-bgp"`
	Enabled	*bool	`path:"config/enabled" module:"openconfig-bgp"`
	Ibgp	*Bgp_Global_AfiSafi_UseMultiplePaths_Ibgp	`path:"ibgp" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Global_AfiSafi_UseMultiplePaths implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Global_AfiSafi_UseMultiplePaths) IsYANGGoStruct() {}


// Bgp_Global_AfiSafi_UseMultiplePaths_Ebgp represents the /openconfig-bgp/bgp/global/afi-safis/afi-safi/use-multiple-paths/ebgp YANG schema element.
type Bgp_Global_AfiSafi_UseMultiplePaths_Ebgp struct {
	AllowMultipleAs	*bool	`path:"config/allow-multiple-as" module:"openconfig-bgp"`
	MaximumPaths	*uint32	`path:"config/maximum-paths" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Global_AfiSafi_UseMultiplePaths_Ebgp implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Global_AfiSafi_UseMultiplePaths_Ebgp) IsYANGGoStruct() {}


// Bgp_Global_AfiSafi_UseMultiplePaths_Ibgp represents the /openconfig-bgp/bgp/global/afi-safis/afi-safi/use-multiple-paths/ibgp YANG schema element.
type Bgp_Global_AfiSafi_UseMultiplePaths_Ibgp struct {
	MaximumPaths	*uint32	`path:"config/maximum-paths" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Global_AfiSafi_UseMultiplePaths_Ibgp implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Global_AfiSafi_UseMultiplePaths_Ibgp) IsYANGGoStruct() {}


// Bgp_Global_Confederation represents the /openconfig-bgp/bgp/global/confederation YANG schema element.
type Bgp_Global_Confederation struct {
	Identifier	*uint32	`path:"config/identifier" module:"openconfig-bgp"`
	MemberAs	[]uint32	`path:"config/member-as" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Global_Confederation implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Global_Confederation) IsYANGGoStruct() {}


// Bgp_Global_DefaultRouteDistance represents the /openconfig-bgp/bgp/global/default-route-distance YANG schema element.
type Bgp_Global_DefaultRouteDistance struct {
	ExternalRouteDistance	*uint8	`path:"config/external-route-distance" module:"openconfig-bgp"`
	InternalRouteDistance	*uint8	`path:"config/internal-route-distance" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Global_DefaultRouteDistance implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Global_DefaultRouteDistance) IsYANGGoStruct() {}


// Bgp_Global_DynamicNeighborPrefix represents the /openconfig-bgp/bgp/global/dynamic-neighbor-prefixes/dynamic-neighbor-prefix YANG schema element.
type Bgp_Global_DynamicNeighborPrefix struct {
	PeerGroup	*string	`path:"config/peer-group" module:"openconfig-bgp"`
	Prefix	*string	`path:"config/prefix|prefix" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Global_DynamicNeighborPrefix implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Global_DynamicNeighborPrefix) IsYANGGoStruct() {}


// Bgp_Global_GracefulRestart represents the /openconfig-bgp/bgp/global/graceful-restart YANG schema element.
type Bgp_Global_GracefulRestart struct {
	Enabled	*bool	`path:"config/enabled" module:"openconfig-bgp"`
	HelperOnly	*bool	`path:"config/helper-only" module:"openconfig-bgp"`
	RestartTime	*uint16	`path:"config/restart-time" module:"openconfig-bgp"`
	StaleRoutesTime	*float64	`path:"config/stale-routes-time" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Global_GracefulRestart implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Global_GracefulRestart) IsYANGGoStruct() {}


// Bgp_Global_RouteSelectionOptions represents the /openconfig-bgp/bgp/global/route-selection-options YANG schema element.
type Bgp_Global_RouteSelectionOptions struct {
	AdvertiseInactiveRoutes	*bool	`path:"config/advertise-inactive-routes" module:"openconfig-bgp"`
	AlwaysCompareMed	*bool	`path:"config/always-compare-med" module:"openconfig-bgp"`
	EnableAigp	*bool	`path:"config/enable-aigp" module:"openconfig-bgp"`
	ExternalCompareRouterId	*bool	`path:"config/external-compare-router-id" module:"openconfig-bgp"`
	IgnoreAsPathLength	*bool	`path:"config/ignore-as-path-length" module:"openconfig-bgp"`
	IgnoreNextHopIgpMetric	*bool	`path:"config/ignore-next-hop-igp-metric" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Global_RouteSelectionOptions implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Global_RouteSelectionOptions) IsYANGGoStruct() {}


// Bgp_Global_UseMultiplePaths represents the /openconfig-bgp/bgp/global/use-multiple-paths YANG schema element.
type Bgp_Global_UseMultiplePaths struct {
	Ebgp	*Bgp_Global_UseMultiplePaths_Ebgp	`path:"ebgp" module:"openconfig-bgp"`
	Enabled	*bool	`path:"config/enabled" module:"openconfig-bgp"`
	Ibgp	*Bgp_Global_UseMultiplePaths_Ibgp	`path:"ibgp" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Global_UseMultiplePaths implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Global_UseMultiplePaths) IsYANGGoStruct() {}


// Bgp_Global_UseMultiplePaths_Ebgp represents the /openconfig-bgp/bgp/global/use-multiple-paths/ebgp YANG schema element.
type Bgp_Global_UseMultiplePaths_Ebgp struct {
	AllowMultipleAs	*bool	`path:"config/allow-multiple-as" module:"openconfig-bgp"`
	MaximumPaths	*uint32	`path:"config/maximum-paths" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Global_UseMultiplePaths_Ebgp implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Global_UseMultiplePaths_Ebgp) IsYANGGoStruct() {}


// Bgp_Global_UseMultiplePaths_Ibgp represents the /openconfig-bgp/bgp/global/use-multiple-paths/ibgp YANG schema element.
type Bgp_Global_UseMultiplePaths_Ibgp struct {
	MaximumPaths	*uint32	`path:"config/maximum-paths" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Global_UseMultiplePaths_Ibgp implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Global_UseMultiplePaths_Ibgp) IsYANGGoStruct() {}


// Bgp_Neighbor represents the /openconfig-bgp/bgp/neighbors/neighbor YANG schema element.
type Bgp_Neighbor struct {
	AfiSafi	map[E_OpenconfigBgpTypes_AFI_SAFI_TYPE]*Bgp_Neighbor_AfiSafi	`path:"afi-safis/afi-safi" module:"openconfig-bgp"`
	ApplyPolicy	*Bgp_Neighbor_ApplyPolicy	`path:"apply-policy" module:"openconfig-bgp"`
	AsPathOptions	*Bgp_Neighbor_AsPathOptions	`path:"as-path-options" module:"openconfig-bgp"`
	AuthPassword	*string	`path:"config/auth-password" module:"openconfig-bgp"`
	Description	*string	`path:"config/description" module:"openconfig-bgp"`
	DynamicallyConfigured	*bool	`path:"state/dynamically-configured" module:"openconfig-bgp"`
	EbgpMultihop	*Bgp_Neighbor_EbgpMultihop	`path:"ebgp-multihop" module:"openconfig-bgp"`
	Enabled	*bool	`path:"config/enabled" module:"openconfig-bgp"`
	ErrorHandling	*Bgp_Neighbor_ErrorHandling	`path:"error-handling" module:"openconfig-bgp"`
	EstablishedTransitions	*uint64	`path:"state/established-transitions" module:"openconfig-bgp"`
	GracefulRestart	*Bgp_Neighbor_GracefulRestart	`path:"graceful-restart" module:"openconfig-bgp"`
	LastEstablished	*uint64	`path:"state/last-established" module:"openconfig-bgp"`
	LocalAs	*uint32	`path:"config/local-as" module:"openconfig-bgp"`
	LoggingOptions	*Bgp_Neighbor_LoggingOptions	`path:"logging-options" module:"openconfig-bgp"`
	Messages	*Bgp_Neighbor_Messages	`path:"state/messages" module:"openconfig-bgp"`
	NeighborAddress	*string	`path:"config/neighbor-address|neighbor-address" module:"openconfig-bgp"`
	PeerAs	*uint32	`path:"config/peer-as" module:"openconfig-bgp"`
	PeerGroup	*string	`path:"config/peer-group" module:"openconfig-bgp"`
	PeerType	E_OpenconfigBgp_PeerType	`path:"config/peer-type" module:"openconfig-bgp"`
	Queues	*Bgp_Neighbor_Queues	`path:"state/queues" module:"openconfig-bgp"`
	RemovePrivateAs	E_OpenconfigBgp_RemovePrivateAsOption	`path:"config/remove-private-as" module:"openconfig-bgp"`
	RouteFlapDamping	*bool	`path:"config/route-flap-damping" module:"openconfig-bgp"`
	RouteReflector	*Bgp_Neighbor_RouteReflector	`path:"route-reflector" module:"openconfig-bgp"`
	SendCommunity	E_OpenconfigBgp_CommunityType	`path:"config/send-community" module:"openconfig-bgp"`
	SessionState	E_OpenconfigBgp_Neighbor_SessionState	`path:"state/session-state" module:"openconfig-bgp"`
	SupportedCapabilities	[]E_OpenconfigBgpTypes_BGP_CAPABILITY	`path:"state/supported-capabilities" module:"openconfig-bgp"`
	Timers	*Bgp_Neighbor_Timers	`path:"timers" module:"openconfig-bgp"`
	Transport	*Bgp_Neighbor_Transport	`path:"transport" module:"openconfig-bgp"`
	UseMultiplePaths	*Bgp_Neighbor_UseMultiplePaths	`path:"use-multiple-paths" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Neighbor implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Neighbor) IsYANGGoStruct() {}


// Bgp_Neighbor_AfiSafi represents the /openconfig-bgp/bgp/neighbors/neighbor/afi-safis/afi-safi YANG schema element.
type Bgp_Neighbor_AfiSafi struct {
	Active	*bool	`path:"state/active" module:"openconfig-bgp"`
	AddPaths	*Bgp_Neighbor_AfiSafi_AddPaths	`path:"add-paths" module:"openconfig-bgp"`
	AfiSafiName	E_OpenconfigBgpTypes_AFI_SAFI_TYPE	`path:"config/afi-safi-name|afi-safi-name" module:"openconfig-bgp"`
	ApplyPolicy	*Bgp_Neighbor_AfiSafi_ApplyPolicy	`path:"apply-policy" module:"openconfig-bgp"`
	Enabled	*bool	`path:"config/enabled" module:"openconfig-bgp"`
	GracefulRestart	*Bgp_Neighbor_AfiSafi_GracefulRestart	`path:"graceful-restart" module:"openconfig-bgp"`
	Ipv4LabeledUnicast	*Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast	`path:"ipv4-labeled-unicast" module:"openconfig-bgp"`
	Ipv4Unicast	*Bgp_Neighbor_AfiSafi_Ipv4Unicast	`path:"ipv4-unicast" module:"openconfig-bgp"`
	Ipv6LabeledUnicast	*Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast	`path:"ipv6-labeled-unicast" module:"openconfig-bgp"`
	Ipv6Unicast	*Bgp_Neighbor_AfiSafi_Ipv6Unicast	`path:"ipv6-unicast" module:"openconfig-bgp"`
	L2VpnEvpn	*Bgp_Neighbor_AfiSafi_L2VpnEvpn	`path:"l2vpn-evpn" module:"openconfig-bgp"`
	L2VpnVpls	*Bgp_Neighbor_AfiSafi_L2VpnVpls	`path:"l2vpn-vpls" module:"openconfig-bgp"`
	L3VpnIpv4Multicast	*Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast	`path:"l3vpn-ipv4-multicast" module:"openconfig-bgp"`
	L3VpnIpv4Unicast	*Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast	`path:"l3vpn-ipv4-unicast" module:"openconfig-bgp"`
	L3VpnIpv6Multicast	*Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast	`path:"l3vpn-ipv6-multicast" module:"openconfig-bgp"`
	L3VpnIpv6Unicast	*Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast	`path:"l3vpn-ipv6-unicast" module:"openconfig-bgp"`
	Prefixes	*Bgp_Neighbor_AfiSafi_Prefixes	`path:"state/prefixes" module:"openconfig-bgp"`
	SrtePolicyIpv4	*Bgp_Neighbor_AfiSafi_SrtePolicyIpv4	`path:"srte-policy-ipv4" module:"openconfig-bgp"`
	SrtePolicyIpv6	*Bgp_Neighbor_AfiSafi_SrtePolicyIpv6	`path:"srte-policy-ipv6" module:"openconfig-bgp"`
	UseMultiplePaths	*Bgp_Neighbor_AfiSafi_UseMultiplePaths	`path:"use-multiple-paths" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Neighbor_AfiSafi implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Neighbor_AfiSafi) IsYANGGoStruct() {}


// Bgp_Neighbor_AfiSafi_AddPaths represents the /openconfig-bgp/bgp/neighbors/neighbor/afi-safis/afi-safi/add-paths YANG schema element.
type Bgp_Neighbor_AfiSafi_AddPaths struct {
	EligiblePrefixPolicy	*string	`path:"config/eligible-prefix-policy" module:"openconfig-bgp"`
	Receive	*bool	`path:"config/receive" module:"openconfig-bgp"`
	Send	*bool	`path:"config/send" module:"openconfig-bgp"`
	SendMax	*uint8	`path:"config/send-max" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Neighbor_AfiSafi_AddPaths implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Neighbor_AfiSafi_AddPaths) IsYANGGoStruct() {}


// Bgp_Neighbor_AfiSafi_ApplyPolicy represents the /openconfig-bgp/bgp/neighbors/neighbor/afi-safis/afi-safi/apply-policy YANG schema element.
type Bgp_Neighbor_AfiSafi_ApplyPolicy struct {
	DefaultExportPolicy	E_OpenconfigRoutingPolicy_DefaultPolicyType	`path:"config/default-export-policy" module:"openconfig-bgp"`
	DefaultImportPolicy	E_OpenconfigRoutingPolicy_DefaultPolicyType	`path:"config/default-import-policy" module:"openconfig-bgp"`
	ExportPolicy	[]string	`path:"config/export-policy" module:"openconfig-bgp"`
	ImportPolicy	[]string	`path:"config/import-policy" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Neighbor_AfiSafi_ApplyPolicy implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Neighbor_AfiSafi_ApplyPolicy) IsYANGGoStruct() {}


// Bgp_Neighbor_AfiSafi_GracefulRestart represents the /openconfig-bgp/bgp/neighbors/neighbor/afi-safis/afi-safi/graceful-restart YANG schema element.
type Bgp_Neighbor_AfiSafi_GracefulRestart struct {
	Advertised	*bool	`path:"state/advertised" module:"openconfig-bgp"`
	Enabled	*bool	`path:"config/enabled" module:"openconfig-bgp"`
	Received	*bool	`path:"state/received" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Neighbor_AfiSafi_GracefulRestart implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Neighbor_AfiSafi_GracefulRestart) IsYANGGoStruct() {}


// Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast represents the /openconfig-bgp/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-labeled-unicast YANG schema element.
type Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast struct {
	PrefixLimit	*Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimit	`path:"prefix-limit" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast) IsYANGGoStruct() {}


// Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimit represents the /openconfig-bgp/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit YANG schema element.
type Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimit struct {
	MaxPrefixes	*uint32	`path:"config/max-prefixes" module:"openconfig-bgp"`
	PreventTeardown	*bool	`path:"config/prevent-teardown" module:"openconfig-bgp"`
	RestartTimer	*float64	`path:"config/restart-timer" module:"openconfig-bgp"`
	WarningThresholdPct	*uint8	`path:"config/warning-threshold-pct" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimit implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Neighbor_AfiSafi_Ipv4LabeledUnicast_PrefixLimit) IsYANGGoStruct() {}


// Bgp_Neighbor_AfiSafi_Ipv4Unicast represents the /openconfig-bgp/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-unicast YANG schema element.
type Bgp_Neighbor_AfiSafi_Ipv4Unicast struct {
	PrefixLimit	*Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimit	`path:"prefix-limit" module:"openconfig-bgp"`
	SendDefaultRoute	*bool	`path:"config/send-default-route" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Neighbor_AfiSafi_Ipv4Unicast implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Neighbor_AfiSafi_Ipv4Unicast) IsYANGGoStruct() {}


// Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimit represents the /openconfig-bgp/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv4-unicast/prefix-limit YANG schema element.
type Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimit struct {
	MaxPrefixes	*uint32	`path:"config/max-prefixes" module:"openconfig-bgp"`
	PreventTeardown	*bool	`path:"config/prevent-teardown" module:"openconfig-bgp"`
	RestartTimer	*float64	`path:"config/restart-timer" module:"openconfig-bgp"`
	WarningThresholdPct	*uint8	`path:"config/warning-threshold-pct" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimit implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Neighbor_AfiSafi_Ipv4Unicast_PrefixLimit) IsYANGGoStruct() {}


// Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast represents the /openconfig-bgp/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-labeled-unicast YANG schema element.
type Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast struct {
	PrefixLimit	*Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimit	`path:"prefix-limit" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast) IsYANGGoStruct() {}


// Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimit represents the /openconfig-bgp/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit YANG schema element.
type Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimit struct {
	MaxPrefixes	*uint32	`path:"config/max-prefixes" module:"openconfig-bgp"`
	PreventTeardown	*bool	`path:"config/prevent-teardown" module:"openconfig-bgp"`
	RestartTimer	*float64	`path:"config/restart-timer" module:"openconfig-bgp"`
	WarningThresholdPct	*uint8	`path:"config/warning-threshold-pct" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimit implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Neighbor_AfiSafi_Ipv6LabeledUnicast_PrefixLimit) IsYANGGoStruct() {}


// Bgp_Neighbor_AfiSafi_Ipv6Unicast represents the /openconfig-bgp/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-unicast YANG schema element.
type Bgp_Neighbor_AfiSafi_Ipv6Unicast struct {
	PrefixLimit	*Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimit	`path:"prefix-limit" module:"openconfig-bgp"`
	SendDefaultRoute	*bool	`path:"config/send-default-route" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Neighbor_AfiSafi_Ipv6Unicast implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Neighbor_AfiSafi_Ipv6Unicast) IsYANGGoStruct() {}


// Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimit represents the /openconfig-bgp/bgp/neighbors/neighbor/afi-safis/afi-safi/ipv6-unicast/prefix-limit YANG schema element.
type Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimit struct {
	MaxPrefixes	*uint32	`path:"config/max-prefixes" module:"openconfig-bgp"`
	PreventTeardown	*bool	`path:"config/prevent-teardown" module:"openconfig-bgp"`
	RestartTimer	*float64	`path:"config/restart-timer" module:"openconfig-bgp"`
	WarningThresholdPct	*uint8	`path:"config/warning-threshold-pct" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimit implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Neighbor_AfiSafi_Ipv6Unicast_PrefixLimit) IsYANGGoStruct() {}


// Bgp_Neighbor_AfiSafi_L2VpnEvpn represents the /openconfig-bgp/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-evpn YANG schema element.
type Bgp_Neighbor_AfiSafi_L2VpnEvpn struct {
	PrefixLimit	*Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimit	`path:"prefix-limit" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Neighbor_AfiSafi_L2VpnEvpn implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Neighbor_AfiSafi_L2VpnEvpn) IsYANGGoStruct() {}


// Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimit represents the /openconfig-bgp/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-evpn/prefix-limit YANG schema element.
type Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimit struct {
	MaxPrefixes	*uint32	`path:"config/max-prefixes" module:"openconfig-bgp"`
	PreventTeardown	*bool	`path:"config/prevent-teardown" module:"openconfig-bgp"`
	RestartTimer	*float64	`path:"config/restart-timer" module:"openconfig-bgp"`
	WarningThresholdPct	*uint8	`path:"config/warning-threshold-pct" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimit implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Neighbor_AfiSafi_L2VpnEvpn_PrefixLimit) IsYANGGoStruct() {}


// Bgp_Neighbor_AfiSafi_L2VpnVpls represents the /openconfig-bgp/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-vpls YANG schema element.
type Bgp_Neighbor_AfiSafi_L2VpnVpls struct {
	PrefixLimit	*Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimit	`path:"prefix-limit" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Neighbor_AfiSafi_L2VpnVpls implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Neighbor_AfiSafi_L2VpnVpls) IsYANGGoStruct() {}


// Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimit represents the /openconfig-bgp/bgp/neighbors/neighbor/afi-safis/afi-safi/l2vpn-vpls/prefix-limit YANG schema element.
type Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimit struct {
	MaxPrefixes	*uint32	`path:"config/max-prefixes" module:"openconfig-bgp"`
	PreventTeardown	*bool	`path:"config/prevent-teardown" module:"openconfig-bgp"`
	RestartTimer	*float64	`path:"config/restart-timer" module:"openconfig-bgp"`
	WarningThresholdPct	*uint8	`path:"config/warning-threshold-pct" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimit implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Neighbor_AfiSafi_L2VpnVpls_PrefixLimit) IsYANGGoStruct() {}


// Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast represents the /openconfig-bgp/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-multicast YANG schema element.
type Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast struct {
	PrefixLimit	*Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimit	`path:"prefix-limit" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast) IsYANGGoStruct() {}


// Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimit represents the /openconfig-bgp/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit YANG schema element.
type Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimit struct {
	MaxPrefixes	*uint32	`path:"config/max-prefixes" module:"openconfig-bgp"`
	PreventTeardown	*bool	`path:"config/prevent-teardown" module:"openconfig-bgp"`
	RestartTimer	*float64	`path:"config/restart-timer" module:"openconfig-bgp"`
	WarningThresholdPct	*uint8	`path:"config/warning-threshold-pct" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimit implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Neighbor_AfiSafi_L3VpnIpv4Multicast_PrefixLimit) IsYANGGoStruct() {}


// Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast represents the /openconfig-bgp/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-unicast YANG schema element.
type Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast struct {
	PrefixLimit	*Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimit	`path:"prefix-limit" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast) IsYANGGoStruct() {}


// Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimit represents the /openconfig-bgp/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit YANG schema element.
type Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimit struct {
	MaxPrefixes	*uint32	`path:"config/max-prefixes" module:"openconfig-bgp"`
	PreventTeardown	*bool	`path:"config/prevent-teardown" module:"openconfig-bgp"`
	RestartTimer	*float64	`path:"config/restart-timer" module:"openconfig-bgp"`
	WarningThresholdPct	*uint8	`path:"config/warning-threshold-pct" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimit implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Neighbor_AfiSafi_L3VpnIpv4Unicast_PrefixLimit) IsYANGGoStruct() {}


// Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast represents the /openconfig-bgp/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-multicast YANG schema element.
type Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast struct {
	PrefixLimit	*Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimit	`path:"prefix-limit" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast) IsYANGGoStruct() {}


// Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimit represents the /openconfig-bgp/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit YANG schema element.
type Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimit struct {
	MaxPrefixes	*uint32	`path:"config/max-prefixes" module:"openconfig-bgp"`
	PreventTeardown	*bool	`path:"config/prevent-teardown" module:"openconfig-bgp"`
	RestartTimer	*float64	`path:"config/restart-timer" module:"openconfig-bgp"`
	WarningThresholdPct	*uint8	`path:"config/warning-threshold-pct" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimit implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimit) IsYANGGoStruct() {}


// Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast represents the /openconfig-bgp/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-unicast YANG schema element.
type Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast struct {
	PrefixLimit	*Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimit	`path:"prefix-limit" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast) IsYANGGoStruct() {}


// Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimit represents the /openconfig-bgp/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit YANG schema element.
type Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimit struct {
	MaxPrefixes	*uint32	`path:"config/max-prefixes" module:"openconfig-bgp"`
	PreventTeardown	*bool	`path:"config/prevent-teardown" module:"openconfig-bgp"`
	RestartTimer	*float64	`path:"config/restart-timer" module:"openconfig-bgp"`
	WarningThresholdPct	*uint8	`path:"config/warning-threshold-pct" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimit implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimit) IsYANGGoStruct() {}


// Bgp_Neighbor_AfiSafi_Prefixes represents the /openconfig-bgp/bgp/neighbors/neighbor/afi-safis/afi-safi/state/prefixes YANG schema element.
type Bgp_Neighbor_AfiSafi_Prefixes struct {
	Installed	*uint32	`path:"installed" module:"openconfig-bgp"`
	Received	*uint32	`path:"received" module:"openconfig-bgp"`
	Sent	*uint32	`path:"sent" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Neighbor_AfiSafi_Prefixes implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Neighbor_AfiSafi_Prefixes) IsYANGGoStruct() {}


// Bgp_Neighbor_AfiSafi_SrtePolicyIpv4 represents the /openconfig-bgp/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv4 YANG schema element.
type Bgp_Neighbor_AfiSafi_SrtePolicyIpv4 struct {
	PrefixLimit	*Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimit	`path:"prefix-limit" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Neighbor_AfiSafi_SrtePolicyIpv4 implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Neighbor_AfiSafi_SrtePolicyIpv4) IsYANGGoStruct() {}


// Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimit represents the /openconfig-bgp/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit YANG schema element.
type Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimit struct {
	MaxPrefixes	*uint32	`path:"config/max-prefixes" module:"openconfig-bgp"`
	PreventTeardown	*bool	`path:"config/prevent-teardown" module:"openconfig-bgp"`
	RestartTimer	*float64	`path:"config/restart-timer" module:"openconfig-bgp"`
	WarningThresholdPct	*uint8	`path:"config/warning-threshold-pct" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimit implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimit) IsYANGGoStruct() {}


// Bgp_Neighbor_AfiSafi_SrtePolicyIpv6 represents the /openconfig-bgp/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv6 YANG schema element.
type Bgp_Neighbor_AfiSafi_SrtePolicyIpv6 struct {
	PrefixLimit	*Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimit	`path:"prefix-limit" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Neighbor_AfiSafi_SrtePolicyIpv6 implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Neighbor_AfiSafi_SrtePolicyIpv6) IsYANGGoStruct() {}


// Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimit represents the /openconfig-bgp/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit YANG schema element.
type Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimit struct {
	MaxPrefixes	*uint32	`path:"config/max-prefixes" module:"openconfig-bgp"`
	PreventTeardown	*bool	`path:"config/prevent-teardown" module:"openconfig-bgp"`
	RestartTimer	*float64	`path:"config/restart-timer" module:"openconfig-bgp"`
	WarningThresholdPct	*uint8	`path:"config/warning-threshold-pct" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimit implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimit) IsYANGGoStruct() {}


// Bgp_Neighbor_AfiSafi_UseMultiplePaths represents the /openconfig-bgp/bgp/neighbors/neighbor/afi-safis/afi-safi/use-multiple-paths YANG schema element.
type Bgp_Neighbor_AfiSafi_UseMultiplePaths struct {
	Ebgp	*Bgp_Neighbor_AfiSafi_UseMultiplePaths_Ebgp	`path:"ebgp" module:"openconfig-bgp"`
	Enabled	*bool	`path:"config/enabled" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Neighbor_AfiSafi_UseMultiplePaths implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Neighbor_AfiSafi_UseMultiplePaths) IsYANGGoStruct() {}


// Bgp_Neighbor_AfiSafi_UseMultiplePaths_Ebgp represents the /openconfig-bgp/bgp/neighbors/neighbor/afi-safis/afi-safi/use-multiple-paths/ebgp YANG schema element.
type Bgp_Neighbor_AfiSafi_UseMultiplePaths_Ebgp struct {
	AllowMultipleAs	*bool	`path:"config/allow-multiple-as" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Neighbor_AfiSafi_UseMultiplePaths_Ebgp implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Neighbor_AfiSafi_UseMultiplePaths_Ebgp) IsYANGGoStruct() {}


// Bgp_Neighbor_ApplyPolicy represents the /openconfig-bgp/bgp/neighbors/neighbor/apply-policy YANG schema element.
type Bgp_Neighbor_ApplyPolicy struct {
	DefaultExportPolicy	E_OpenconfigRoutingPolicy_DefaultPolicyType	`path:"config/default-export-policy" module:"openconfig-bgp"`
	DefaultImportPolicy	E_OpenconfigRoutingPolicy_DefaultPolicyType	`path:"config/default-import-policy" module:"openconfig-bgp"`
	ExportPolicy	[]string	`path:"config/export-policy" module:"openconfig-bgp"`
	ImportPolicy	[]string	`path:"config/import-policy" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Neighbor_ApplyPolicy implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Neighbor_ApplyPolicy) IsYANGGoStruct() {}


// Bgp_Neighbor_AsPathOptions represents the /openconfig-bgp/bgp/neighbors/neighbor/as-path-options YANG schema element.
type Bgp_Neighbor_AsPathOptions struct {
	AllowOwnAs	*uint8	`path:"config/allow-own-as" module:"openconfig-bgp"`
	DisablePeerAsFilter	*bool	`path:"config/disable-peer-as-filter" module:"openconfig-bgp"`
	ReplacePeerAs	*bool	`path:"config/replace-peer-as" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Neighbor_AsPathOptions implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Neighbor_AsPathOptions) IsYANGGoStruct() {}


// Bgp_Neighbor_EbgpMultihop represents the /openconfig-bgp/bgp/neighbors/neighbor/ebgp-multihop YANG schema element.
type Bgp_Neighbor_EbgpMultihop struct {
	Enabled	*bool	`path:"config/enabled" module:"openconfig-bgp"`
	MultihopTtl	*uint8	`path:"config/multihop-ttl" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Neighbor_EbgpMultihop implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Neighbor_EbgpMultihop) IsYANGGoStruct() {}


// Bgp_Neighbor_ErrorHandling represents the /openconfig-bgp/bgp/neighbors/neighbor/error-handling YANG schema element.
type Bgp_Neighbor_ErrorHandling struct {
	ErroneousUpdateMessages	*uint32	`path:"state/erroneous-update-messages" module:"openconfig-bgp"`
	TreatAsWithdraw	*bool	`path:"config/treat-as-withdraw" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Neighbor_ErrorHandling implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Neighbor_ErrorHandling) IsYANGGoStruct() {}


// Bgp_Neighbor_GracefulRestart represents the /openconfig-bgp/bgp/neighbors/neighbor/graceful-restart YANG schema element.
type Bgp_Neighbor_GracefulRestart struct {
	Enabled	*bool	`path:"config/enabled" module:"openconfig-bgp"`
	HelperOnly	*bool	`path:"config/helper-only" module:"openconfig-bgp"`
	LocalRestarting	*bool	`path:"state/local-restarting" module:"openconfig-bgp"`
	Mode	E_OpenconfigBgp_GracefulRestart_Mode	`path:"state/mode" module:"openconfig-bgp"`
	PeerRestartTime	*uint16	`path:"state/peer-restart-time" module:"openconfig-bgp"`
	PeerRestarting	*bool	`path:"state/peer-restarting" module:"openconfig-bgp"`
	RestartTime	*uint16	`path:"config/restart-time" module:"openconfig-bgp"`
	StaleRoutesTime	*float64	`path:"config/stale-routes-time" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Neighbor_GracefulRestart implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Neighbor_GracefulRestart) IsYANGGoStruct() {}


// Bgp_Neighbor_LoggingOptions represents the /openconfig-bgp/bgp/neighbors/neighbor/logging-options YANG schema element.
type Bgp_Neighbor_LoggingOptions struct {
	LogNeighborStateChanges	*bool	`path:"config/log-neighbor-state-changes" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Neighbor_LoggingOptions implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Neighbor_LoggingOptions) IsYANGGoStruct() {}


// Bgp_Neighbor_Messages represents the /openconfig-bgp/bgp/neighbors/neighbor/state/messages YANG schema element.
type Bgp_Neighbor_Messages struct {
	Received	*Bgp_Neighbor_Messages_Received	`path:"received" module:"openconfig-bgp"`
	Sent	*Bgp_Neighbor_Messages_Sent	`path:"sent" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Neighbor_Messages implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Neighbor_Messages) IsYANGGoStruct() {}


// Bgp_Neighbor_Messages_Received represents the /openconfig-bgp/bgp/neighbors/neighbor/state/messages/received YANG schema element.
type Bgp_Neighbor_Messages_Received struct {
	NOTIFICATION	*uint64	`path:"NOTIFICATION" module:"openconfig-bgp"`
	UPDATE	*uint64	`path:"UPDATE" module:"openconfig-bgp"`
	LastNotificationErrorCode	E_OpenconfigBgpTypes_BGP_ERROR_CODE	`path:"last-notification-error-code" module:"openconfig-bgp"`
	LastNotificationErrorSubcode	E_OpenconfigBgpTypes_BGP_ERROR_SUBCODE	`path:"last-notification-error-subcode" module:"openconfig-bgp"`
	LastNotificationTime	*uint64	`path:"last-notification-time" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Neighbor_Messages_Received implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Neighbor_Messages_Received) IsYANGGoStruct() {}


// Bgp_Neighbor_Messages_Sent represents the /openconfig-bgp/bgp/neighbors/neighbor/state/messages/sent YANG schema element.
type Bgp_Neighbor_Messages_Sent struct {
	NOTIFICATION	*uint64	`path:"NOTIFICATION" module:"openconfig-bgp"`
	UPDATE	*uint64	`path:"UPDATE" module:"openconfig-bgp"`
	LastNotificationErrorCode	E_OpenconfigBgpTypes_BGP_ERROR_CODE	`path:"last-notification-error-code" module:"openconfig-bgp"`
	LastNotificationErrorSubcode	E_OpenconfigBgpTypes_BGP_ERROR_SUBCODE	`path:"last-notification-error-subcode" module:"openconfig-bgp"`
	LastNotificationTime	*uint64	`path:"last-notification-time" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Neighbor_Messages_Sent implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Neighbor_Messages_Sent) IsYANGGoStruct() {}


// Bgp_Neighbor_Queues represents the /openconfig-bgp/bgp/neighbors/neighbor/state/queues YANG schema element.
type Bgp_Neighbor_Queues struct {
	Input	*uint32	`path:"input" module:"openconfig-bgp"`
	Output	*uint32	`path:"output" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Neighbor_Queues implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Neighbor_Queues) IsYANGGoStruct() {}


// Bgp_Neighbor_RouteReflector represents the /openconfig-bgp/bgp/neighbors/neighbor/route-reflector YANG schema element.
type Bgp_Neighbor_RouteReflector struct {
	RouteReflectorClient	*bool	`path:"config/route-reflector-client" module:"openconfig-bgp"`
	RouteReflectorClusterId	Bgp_Neighbor_RouteReflector_RouteReflectorClusterId_Union	`path:"config/route-reflector-cluster-id" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Neighbor_RouteReflector implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Neighbor_RouteReflector) IsYANGGoStruct() {}


// Bgp_Neighbor_Timers represents the /openconfig-bgp/bgp/neighbors/neighbor/timers YANG schema element.
type Bgp_Neighbor_Timers struct {
	ConnectRetry	*float64	`path:"config/connect-retry" module:"openconfig-bgp"`
	HoldTime	*float64	`path:"config/hold-time" module:"openconfig-bgp"`
	KeepaliveInterval	*float64	`path:"config/keepalive-interval" module:"openconfig-bgp"`
	MinimumAdvertisementInterval	*float64	`path:"config/minimum-advertisement-interval" module:"openconfig-bgp"`
	NegotiatedHoldTime	*float64	`path:"state/negotiated-hold-time" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Neighbor_Timers implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Neighbor_Timers) IsYANGGoStruct() {}


// Bgp_Neighbor_Transport represents the /openconfig-bgp/bgp/neighbors/neighbor/transport YANG schema element.
type Bgp_Neighbor_Transport struct {
	LocalAddress	*string	`path:"config/local-address" module:"openconfig-bgp"`
	LocalPort	*uint16	`path:"state/local-port" module:"openconfig-bgp"`
	MtuDiscovery	*bool	`path:"config/mtu-discovery" module:"openconfig-bgp"`
	PassiveMode	*bool	`path:"config/passive-mode" module:"openconfig-bgp"`
	RemoteAddress	*string	`path:"state/remote-address" module:"openconfig-bgp"`
	RemotePort	*uint16	`path:"state/remote-port" module:"openconfig-bgp"`
	TcpMss	*uint16	`path:"config/tcp-mss" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Neighbor_Transport implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Neighbor_Transport) IsYANGGoStruct() {}


// Bgp_Neighbor_UseMultiplePaths represents the /openconfig-bgp/bgp/neighbors/neighbor/use-multiple-paths YANG schema element.
type Bgp_Neighbor_UseMultiplePaths struct {
	Ebgp	*Bgp_Neighbor_UseMultiplePaths_Ebgp	`path:"ebgp" module:"openconfig-bgp"`
	Enabled	*bool	`path:"config/enabled" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Neighbor_UseMultiplePaths implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Neighbor_UseMultiplePaths) IsYANGGoStruct() {}


// Bgp_Neighbor_UseMultiplePaths_Ebgp represents the /openconfig-bgp/bgp/neighbors/neighbor/use-multiple-paths/ebgp YANG schema element.
type Bgp_Neighbor_UseMultiplePaths_Ebgp struct {
	AllowMultipleAs	*bool	`path:"config/allow-multiple-as" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_Neighbor_UseMultiplePaths_Ebgp implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_Neighbor_UseMultiplePaths_Ebgp) IsYANGGoStruct() {}


// Bgp_PeerGroup represents the /openconfig-bgp/bgp/peer-groups/peer-group YANG schema element.
type Bgp_PeerGroup struct {
	AfiSafi	map[E_OpenconfigBgpTypes_AFI_SAFI_TYPE]*Bgp_PeerGroup_AfiSafi	`path:"afi-safis/afi-safi" module:"openconfig-bgp"`
	ApplyPolicy	*Bgp_PeerGroup_ApplyPolicy	`path:"apply-policy" module:"openconfig-bgp"`
	AsPathOptions	*Bgp_PeerGroup_AsPathOptions	`path:"as-path-options" module:"openconfig-bgp"`
	AuthPassword	*string	`path:"config/auth-password" module:"openconfig-bgp"`
	Description	*string	`path:"config/description" module:"openconfig-bgp"`
	EbgpMultihop	*Bgp_PeerGroup_EbgpMultihop	`path:"ebgp-multihop" module:"openconfig-bgp"`
	ErrorHandling	*Bgp_PeerGroup_ErrorHandling	`path:"error-handling" module:"openconfig-bgp"`
	GracefulRestart	*Bgp_PeerGroup_GracefulRestart	`path:"graceful-restart" module:"openconfig-bgp"`
	LocalAs	*uint32	`path:"config/local-as" module:"openconfig-bgp"`
	LoggingOptions	*Bgp_PeerGroup_LoggingOptions	`path:"logging-options" module:"openconfig-bgp"`
	PeerAs	*uint32	`path:"config/peer-as" module:"openconfig-bgp"`
	PeerGroupName	*string	`path:"config/peer-group-name|peer-group-name" module:"openconfig-bgp"`
	PeerType	E_OpenconfigBgp_PeerType	`path:"config/peer-type" module:"openconfig-bgp"`
	RemovePrivateAs	E_OpenconfigBgp_RemovePrivateAsOption	`path:"config/remove-private-as" module:"openconfig-bgp"`
	RouteFlapDamping	*bool	`path:"config/route-flap-damping" module:"openconfig-bgp"`
	RouteReflector	*Bgp_PeerGroup_RouteReflector	`path:"route-reflector" module:"openconfig-bgp"`
	SendCommunity	E_OpenconfigBgp_CommunityType	`path:"config/send-community" module:"openconfig-bgp"`
	Timers	*Bgp_PeerGroup_Timers	`path:"timers" module:"openconfig-bgp"`
	TotalPaths	*uint32	`path:"state/total-paths" module:"openconfig-bgp"`
	TotalPrefixes	*uint32	`path:"state/total-prefixes" module:"openconfig-bgp"`
	Transport	*Bgp_PeerGroup_Transport	`path:"transport" module:"openconfig-bgp"`
	UseMultiplePaths	*Bgp_PeerGroup_UseMultiplePaths	`path:"use-multiple-paths" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_PeerGroup implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_PeerGroup) IsYANGGoStruct() {}


// Bgp_PeerGroup_AfiSafi represents the /openconfig-bgp/bgp/peer-groups/peer-group/afi-safis/afi-safi YANG schema element.
type Bgp_PeerGroup_AfiSafi struct {
	AddPaths	*Bgp_PeerGroup_AfiSafi_AddPaths	`path:"add-paths" module:"openconfig-bgp"`
	AfiSafiName	E_OpenconfigBgpTypes_AFI_SAFI_TYPE	`path:"config/afi-safi-name|afi-safi-name" module:"openconfig-bgp"`
	ApplyPolicy	*Bgp_PeerGroup_AfiSafi_ApplyPolicy	`path:"apply-policy" module:"openconfig-bgp"`
	Enabled	*bool	`path:"config/enabled" module:"openconfig-bgp"`
	GracefulRestart	*Bgp_PeerGroup_AfiSafi_GracefulRestart	`path:"graceful-restart" module:"openconfig-bgp"`
	Ipv4LabeledUnicast	*Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast	`path:"ipv4-labeled-unicast" module:"openconfig-bgp"`
	Ipv4Unicast	*Bgp_PeerGroup_AfiSafi_Ipv4Unicast	`path:"ipv4-unicast" module:"openconfig-bgp"`
	Ipv6LabeledUnicast	*Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast	`path:"ipv6-labeled-unicast" module:"openconfig-bgp"`
	Ipv6Unicast	*Bgp_PeerGroup_AfiSafi_Ipv6Unicast	`path:"ipv6-unicast" module:"openconfig-bgp"`
	L2VpnEvpn	*Bgp_PeerGroup_AfiSafi_L2VpnEvpn	`path:"l2vpn-evpn" module:"openconfig-bgp"`
	L2VpnVpls	*Bgp_PeerGroup_AfiSafi_L2VpnVpls	`path:"l2vpn-vpls" module:"openconfig-bgp"`
	L3VpnIpv4Multicast	*Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast	`path:"l3vpn-ipv4-multicast" module:"openconfig-bgp"`
	L3VpnIpv4Unicast	*Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast	`path:"l3vpn-ipv4-unicast" module:"openconfig-bgp"`
	L3VpnIpv6Multicast	*Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast	`path:"l3vpn-ipv6-multicast" module:"openconfig-bgp"`
	L3VpnIpv6Unicast	*Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast	`path:"l3vpn-ipv6-unicast" module:"openconfig-bgp"`
	SrtePolicyIpv4	*Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4	`path:"srte-policy-ipv4" module:"openconfig-bgp"`
	SrtePolicyIpv6	*Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6	`path:"srte-policy-ipv6" module:"openconfig-bgp"`
	UseMultiplePaths	*Bgp_PeerGroup_AfiSafi_UseMultiplePaths	`path:"use-multiple-paths" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_PeerGroup_AfiSafi implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_PeerGroup_AfiSafi) IsYANGGoStruct() {}


// Bgp_PeerGroup_AfiSafi_AddPaths represents the /openconfig-bgp/bgp/peer-groups/peer-group/afi-safis/afi-safi/add-paths YANG schema element.
type Bgp_PeerGroup_AfiSafi_AddPaths struct {
	EligiblePrefixPolicy	*string	`path:"config/eligible-prefix-policy" module:"openconfig-bgp"`
	Receive	*bool	`path:"config/receive" module:"openconfig-bgp"`
	Send	*bool	`path:"config/send" module:"openconfig-bgp"`
	SendMax	*uint8	`path:"config/send-max" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_PeerGroup_AfiSafi_AddPaths implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_PeerGroup_AfiSafi_AddPaths) IsYANGGoStruct() {}


// Bgp_PeerGroup_AfiSafi_ApplyPolicy represents the /openconfig-bgp/bgp/peer-groups/peer-group/afi-safis/afi-safi/apply-policy YANG schema element.
type Bgp_PeerGroup_AfiSafi_ApplyPolicy struct {
	DefaultExportPolicy	E_OpenconfigRoutingPolicy_DefaultPolicyType	`path:"config/default-export-policy" module:"openconfig-bgp"`
	DefaultImportPolicy	E_OpenconfigRoutingPolicy_DefaultPolicyType	`path:"config/default-import-policy" module:"openconfig-bgp"`
	ExportPolicy	[]string	`path:"config/export-policy" module:"openconfig-bgp"`
	ImportPolicy	[]string	`path:"config/import-policy" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_PeerGroup_AfiSafi_ApplyPolicy implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_PeerGroup_AfiSafi_ApplyPolicy) IsYANGGoStruct() {}


// Bgp_PeerGroup_AfiSafi_GracefulRestart represents the /openconfig-bgp/bgp/peer-groups/peer-group/afi-safis/afi-safi/graceful-restart YANG schema element.
type Bgp_PeerGroup_AfiSafi_GracefulRestart struct {
	Enabled	*bool	`path:"config/enabled" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_PeerGroup_AfiSafi_GracefulRestart implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_PeerGroup_AfiSafi_GracefulRestart) IsYANGGoStruct() {}


// Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast represents the /openconfig-bgp/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-labeled-unicast YANG schema element.
type Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast struct {
	PrefixLimit	*Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimit	`path:"prefix-limit" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast) IsYANGGoStruct() {}


// Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimit represents the /openconfig-bgp/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit YANG schema element.
type Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimit struct {
	MaxPrefixes	*uint32	`path:"config/max-prefixes" module:"openconfig-bgp"`
	PreventTeardown	*bool	`path:"config/prevent-teardown" module:"openconfig-bgp"`
	RestartTimer	*float64	`path:"config/restart-timer" module:"openconfig-bgp"`
	WarningThresholdPct	*uint8	`path:"config/warning-threshold-pct" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimit implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimit) IsYANGGoStruct() {}


// Bgp_PeerGroup_AfiSafi_Ipv4Unicast represents the /openconfig-bgp/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast YANG schema element.
type Bgp_PeerGroup_AfiSafi_Ipv4Unicast struct {
	PrefixLimit	*Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimit	`path:"prefix-limit" module:"openconfig-bgp"`
	SendDefaultRoute	*bool	`path:"config/send-default-route" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_PeerGroup_AfiSafi_Ipv4Unicast implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_PeerGroup_AfiSafi_Ipv4Unicast) IsYANGGoStruct() {}


// Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimit represents the /openconfig-bgp/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/prefix-limit YANG schema element.
type Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimit struct {
	MaxPrefixes	*uint32	`path:"config/max-prefixes" module:"openconfig-bgp"`
	PreventTeardown	*bool	`path:"config/prevent-teardown" module:"openconfig-bgp"`
	RestartTimer	*float64	`path:"config/restart-timer" module:"openconfig-bgp"`
	WarningThresholdPct	*uint8	`path:"config/warning-threshold-pct" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimit implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimit) IsYANGGoStruct() {}


// Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast represents the /openconfig-bgp/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-labeled-unicast YANG schema element.
type Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast struct {
	PrefixLimit	*Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimit	`path:"prefix-limit" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast) IsYANGGoStruct() {}


// Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimit represents the /openconfig-bgp/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit YANG schema element.
type Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimit struct {
	MaxPrefixes	*uint32	`path:"config/max-prefixes" module:"openconfig-bgp"`
	PreventTeardown	*bool	`path:"config/prevent-teardown" module:"openconfig-bgp"`
	RestartTimer	*float64	`path:"config/restart-timer" module:"openconfig-bgp"`
	WarningThresholdPct	*uint8	`path:"config/warning-threshold-pct" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimit implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimit) IsYANGGoStruct() {}


// Bgp_PeerGroup_AfiSafi_Ipv6Unicast represents the /openconfig-bgp/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast YANG schema element.
type Bgp_PeerGroup_AfiSafi_Ipv6Unicast struct {
	PrefixLimit	*Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimit	`path:"prefix-limit" module:"openconfig-bgp"`
	SendDefaultRoute	*bool	`path:"config/send-default-route" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_PeerGroup_AfiSafi_Ipv6Unicast implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_PeerGroup_AfiSafi_Ipv6Unicast) IsYANGGoStruct() {}


// Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimit represents the /openconfig-bgp/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast/prefix-limit YANG schema element.
type Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimit struct {
	MaxPrefixes	*uint32	`path:"config/max-prefixes" module:"openconfig-bgp"`
	PreventTeardown	*bool	`path:"config/prevent-teardown" module:"openconfig-bgp"`
	RestartTimer	*float64	`path:"config/restart-timer" module:"openconfig-bgp"`
	WarningThresholdPct	*uint8	`path:"config/warning-threshold-pct" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimit implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimit) IsYANGGoStruct() {}


// Bgp_PeerGroup_AfiSafi_L2VpnEvpn represents the /openconfig-bgp/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-evpn YANG schema element.
type Bgp_PeerGroup_AfiSafi_L2VpnEvpn struct {
	PrefixLimit	*Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimit	`path:"prefix-limit" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_PeerGroup_AfiSafi_L2VpnEvpn implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_PeerGroup_AfiSafi_L2VpnEvpn) IsYANGGoStruct() {}


// Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimit represents the /openconfig-bgp/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-evpn/prefix-limit YANG schema element.
type Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimit struct {
	MaxPrefixes	*uint32	`path:"config/max-prefixes" module:"openconfig-bgp"`
	PreventTeardown	*bool	`path:"config/prevent-teardown" module:"openconfig-bgp"`
	RestartTimer	*float64	`path:"config/restart-timer" module:"openconfig-bgp"`
	WarningThresholdPct	*uint8	`path:"config/warning-threshold-pct" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimit implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimit) IsYANGGoStruct() {}


// Bgp_PeerGroup_AfiSafi_L2VpnVpls represents the /openconfig-bgp/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-vpls YANG schema element.
type Bgp_PeerGroup_AfiSafi_L2VpnVpls struct {
	PrefixLimit	*Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimit	`path:"prefix-limit" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_PeerGroup_AfiSafi_L2VpnVpls implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_PeerGroup_AfiSafi_L2VpnVpls) IsYANGGoStruct() {}


// Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimit represents the /openconfig-bgp/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-vpls/prefix-limit YANG schema element.
type Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimit struct {
	MaxPrefixes	*uint32	`path:"config/max-prefixes" module:"openconfig-bgp"`
	PreventTeardown	*bool	`path:"config/prevent-teardown" module:"openconfig-bgp"`
	RestartTimer	*float64	`path:"config/restart-timer" module:"openconfig-bgp"`
	WarningThresholdPct	*uint8	`path:"config/warning-threshold-pct" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimit implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimit) IsYANGGoStruct() {}


// Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast represents the /openconfig-bgp/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-multicast YANG schema element.
type Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast struct {
	PrefixLimit	*Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimit	`path:"prefix-limit" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast) IsYANGGoStruct() {}


// Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimit represents the /openconfig-bgp/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit YANG schema element.
type Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimit struct {
	MaxPrefixes	*uint32	`path:"config/max-prefixes" module:"openconfig-bgp"`
	PreventTeardown	*bool	`path:"config/prevent-teardown" module:"openconfig-bgp"`
	RestartTimer	*float64	`path:"config/restart-timer" module:"openconfig-bgp"`
	WarningThresholdPct	*uint8	`path:"config/warning-threshold-pct" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimit implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimit) IsYANGGoStruct() {}


// Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast represents the /openconfig-bgp/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-unicast YANG schema element.
type Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast struct {
	PrefixLimit	*Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimit	`path:"prefix-limit" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast) IsYANGGoStruct() {}


// Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimit represents the /openconfig-bgp/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit YANG schema element.
type Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimit struct {
	MaxPrefixes	*uint32	`path:"config/max-prefixes" module:"openconfig-bgp"`
	PreventTeardown	*bool	`path:"config/prevent-teardown" module:"openconfig-bgp"`
	RestartTimer	*float64	`path:"config/restart-timer" module:"openconfig-bgp"`
	WarningThresholdPct	*uint8	`path:"config/warning-threshold-pct" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimit implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimit) IsYANGGoStruct() {}


// Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast represents the /openconfig-bgp/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-multicast YANG schema element.
type Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast struct {
	PrefixLimit	*Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimit	`path:"prefix-limit" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast) IsYANGGoStruct() {}


// Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimit represents the /openconfig-bgp/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit YANG schema element.
type Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimit struct {
	MaxPrefixes	*uint32	`path:"config/max-prefixes" module:"openconfig-bgp"`
	PreventTeardown	*bool	`path:"config/prevent-teardown" module:"openconfig-bgp"`
	RestartTimer	*float64	`path:"config/restart-timer" module:"openconfig-bgp"`
	WarningThresholdPct	*uint8	`path:"config/warning-threshold-pct" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimit implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimit) IsYANGGoStruct() {}


// Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast represents the /openconfig-bgp/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-unicast YANG schema element.
type Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast struct {
	PrefixLimit	*Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimit	`path:"prefix-limit" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast) IsYANGGoStruct() {}


// Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimit represents the /openconfig-bgp/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit YANG schema element.
type Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimit struct {
	MaxPrefixes	*uint32	`path:"config/max-prefixes" module:"openconfig-bgp"`
	PreventTeardown	*bool	`path:"config/prevent-teardown" module:"openconfig-bgp"`
	RestartTimer	*float64	`path:"config/restart-timer" module:"openconfig-bgp"`
	WarningThresholdPct	*uint8	`path:"config/warning-threshold-pct" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimit implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimit) IsYANGGoStruct() {}


// Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4 represents the /openconfig-bgp/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv4 YANG schema element.
type Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4 struct {
	PrefixLimit	*Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimit	`path:"prefix-limit" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4 implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4) IsYANGGoStruct() {}


// Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimit represents the /openconfig-bgp/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit YANG schema element.
type Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimit struct {
	MaxPrefixes	*uint32	`path:"config/max-prefixes" module:"openconfig-bgp"`
	PreventTeardown	*bool	`path:"config/prevent-teardown" module:"openconfig-bgp"`
	RestartTimer	*float64	`path:"config/restart-timer" module:"openconfig-bgp"`
	WarningThresholdPct	*uint8	`path:"config/warning-threshold-pct" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimit implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimit) IsYANGGoStruct() {}


// Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6 represents the /openconfig-bgp/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv6 YANG schema element.
type Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6 struct {
	PrefixLimit	*Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimit	`path:"prefix-limit" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6 implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6) IsYANGGoStruct() {}


// Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimit represents the /openconfig-bgp/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit YANG schema element.
type Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimit struct {
	MaxPrefixes	*uint32	`path:"config/max-prefixes" module:"openconfig-bgp"`
	PreventTeardown	*bool	`path:"config/prevent-teardown" module:"openconfig-bgp"`
	RestartTimer	*float64	`path:"config/restart-timer" module:"openconfig-bgp"`
	WarningThresholdPct	*uint8	`path:"config/warning-threshold-pct" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimit implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimit) IsYANGGoStruct() {}


// Bgp_PeerGroup_AfiSafi_UseMultiplePaths represents the /openconfig-bgp/bgp/peer-groups/peer-group/afi-safis/afi-safi/use-multiple-paths YANG schema element.
type Bgp_PeerGroup_AfiSafi_UseMultiplePaths struct {
	Ebgp	*Bgp_PeerGroup_AfiSafi_UseMultiplePaths_Ebgp	`path:"ebgp" module:"openconfig-bgp"`
	Enabled	*bool	`path:"config/enabled" module:"openconfig-bgp"`
	Ibgp	*Bgp_PeerGroup_AfiSafi_UseMultiplePaths_Ibgp	`path:"ibgp" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_PeerGroup_AfiSafi_UseMultiplePaths implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_PeerGroup_AfiSafi_UseMultiplePaths) IsYANGGoStruct() {}


// Bgp_PeerGroup_AfiSafi_UseMultiplePaths_Ebgp represents the /openconfig-bgp/bgp/peer-groups/peer-group/afi-safis/afi-safi/use-multiple-paths/ebgp YANG schema element.
type Bgp_PeerGroup_AfiSafi_UseMultiplePaths_Ebgp struct {
	AllowMultipleAs	*bool	`path:"config/allow-multiple-as" module:"openconfig-bgp"`
	MaximumPaths	*uint32	`path:"config/maximum-paths" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_PeerGroup_AfiSafi_UseMultiplePaths_Ebgp implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_PeerGroup_AfiSafi_UseMultiplePaths_Ebgp) IsYANGGoStruct() {}


// Bgp_PeerGroup_AfiSafi_UseMultiplePaths_Ibgp represents the /openconfig-bgp/bgp/peer-groups/peer-group/afi-safis/afi-safi/use-multiple-paths/ibgp YANG schema element.
type Bgp_PeerGroup_AfiSafi_UseMultiplePaths_Ibgp struct {
	MaximumPaths	*uint32	`path:"config/maximum-paths" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_PeerGroup_AfiSafi_UseMultiplePaths_Ibgp implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_PeerGroup_AfiSafi_UseMultiplePaths_Ibgp) IsYANGGoStruct() {}


// Bgp_PeerGroup_ApplyPolicy represents the /openconfig-bgp/bgp/peer-groups/peer-group/apply-policy YANG schema element.
type Bgp_PeerGroup_ApplyPolicy struct {
	DefaultExportPolicy	E_OpenconfigRoutingPolicy_DefaultPolicyType	`path:"config/default-export-policy" module:"openconfig-bgp"`
	DefaultImportPolicy	E_OpenconfigRoutingPolicy_DefaultPolicyType	`path:"config/default-import-policy" module:"openconfig-bgp"`
	ExportPolicy	[]string	`path:"config/export-policy" module:"openconfig-bgp"`
	ImportPolicy	[]string	`path:"config/import-policy" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_PeerGroup_ApplyPolicy implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_PeerGroup_ApplyPolicy) IsYANGGoStruct() {}


// Bgp_PeerGroup_AsPathOptions represents the /openconfig-bgp/bgp/peer-groups/peer-group/as-path-options YANG schema element.
type Bgp_PeerGroup_AsPathOptions struct {
	AllowOwnAs	*uint8	`path:"config/allow-own-as" module:"openconfig-bgp"`
	DisablePeerAsFilter	*bool	`path:"config/disable-peer-as-filter" module:"openconfig-bgp"`
	ReplacePeerAs	*bool	`path:"config/replace-peer-as" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_PeerGroup_AsPathOptions implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_PeerGroup_AsPathOptions) IsYANGGoStruct() {}


// Bgp_PeerGroup_EbgpMultihop represents the /openconfig-bgp/bgp/peer-groups/peer-group/ebgp-multihop YANG schema element.
type Bgp_PeerGroup_EbgpMultihop struct {
	Enabled	*bool	`path:"config/enabled" module:"openconfig-bgp"`
	MultihopTtl	*uint8	`path:"config/multihop-ttl" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_PeerGroup_EbgpMultihop implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_PeerGroup_EbgpMultihop) IsYANGGoStruct() {}


// Bgp_PeerGroup_ErrorHandling represents the /openconfig-bgp/bgp/peer-groups/peer-group/error-handling YANG schema element.
type Bgp_PeerGroup_ErrorHandling struct {
	TreatAsWithdraw	*bool	`path:"config/treat-as-withdraw" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_PeerGroup_ErrorHandling implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_PeerGroup_ErrorHandling) IsYANGGoStruct() {}


// Bgp_PeerGroup_GracefulRestart represents the /openconfig-bgp/bgp/peer-groups/peer-group/graceful-restart YANG schema element.
type Bgp_PeerGroup_GracefulRestart struct {
	Enabled	*bool	`path:"config/enabled" module:"openconfig-bgp"`
	HelperOnly	*bool	`path:"config/helper-only" module:"openconfig-bgp"`
	RestartTime	*uint16	`path:"config/restart-time" module:"openconfig-bgp"`
	StaleRoutesTime	*float64	`path:"config/stale-routes-time" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_PeerGroup_GracefulRestart implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_PeerGroup_GracefulRestart) IsYANGGoStruct() {}


// Bgp_PeerGroup_LoggingOptions represents the /openconfig-bgp/bgp/peer-groups/peer-group/logging-options YANG schema element.
type Bgp_PeerGroup_LoggingOptions struct {
	LogNeighborStateChanges	*bool	`path:"config/log-neighbor-state-changes" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_PeerGroup_LoggingOptions implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_PeerGroup_LoggingOptions) IsYANGGoStruct() {}


// Bgp_PeerGroup_RouteReflector represents the /openconfig-bgp/bgp/peer-groups/peer-group/route-reflector YANG schema element.
type Bgp_PeerGroup_RouteReflector struct {
	RouteReflectorClient	*bool	`path:"config/route-reflector-client" module:"openconfig-bgp"`
	RouteReflectorClusterId	Bgp_PeerGroup_RouteReflector_RouteReflectorClusterId_Union	`path:"config/route-reflector-cluster-id" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_PeerGroup_RouteReflector implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_PeerGroup_RouteReflector) IsYANGGoStruct() {}


// Bgp_PeerGroup_Timers represents the /openconfig-bgp/bgp/peer-groups/peer-group/timers YANG schema element.
type Bgp_PeerGroup_Timers struct {
	ConnectRetry	*float64	`path:"config/connect-retry" module:"openconfig-bgp"`
	HoldTime	*float64	`path:"config/hold-time" module:"openconfig-bgp"`
	KeepaliveInterval	*float64	`path:"config/keepalive-interval" module:"openconfig-bgp"`
	MinimumAdvertisementInterval	*float64	`path:"config/minimum-advertisement-interval" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_PeerGroup_Timers implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_PeerGroup_Timers) IsYANGGoStruct() {}


// Bgp_PeerGroup_Transport represents the /openconfig-bgp/bgp/peer-groups/peer-group/transport YANG schema element.
type Bgp_PeerGroup_Transport struct {
	LocalAddress	*string	`path:"config/local-address" module:"openconfig-bgp"`
	MtuDiscovery	*bool	`path:"config/mtu-discovery" module:"openconfig-bgp"`
	PassiveMode	*bool	`path:"config/passive-mode" module:"openconfig-bgp"`
	TcpMss	*uint16	`path:"config/tcp-mss" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_PeerGroup_Transport implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_PeerGroup_Transport) IsYANGGoStruct() {}


// Bgp_PeerGroup_UseMultiplePaths represents the /openconfig-bgp/bgp/peer-groups/peer-group/use-multiple-paths YANG schema element.
type Bgp_PeerGroup_UseMultiplePaths struct {
	Ebgp	*Bgp_PeerGroup_UseMultiplePaths_Ebgp	`path:"ebgp" module:"openconfig-bgp"`
	Enabled	*bool	`path:"config/enabled" module:"openconfig-bgp"`
	Ibgp	*Bgp_PeerGroup_UseMultiplePaths_Ibgp	`path:"ibgp" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_PeerGroup_UseMultiplePaths implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_PeerGroup_UseMultiplePaths) IsYANGGoStruct() {}


// Bgp_PeerGroup_UseMultiplePaths_Ebgp represents the /openconfig-bgp/bgp/peer-groups/peer-group/use-multiple-paths/ebgp YANG schema element.
type Bgp_PeerGroup_UseMultiplePaths_Ebgp struct {
	AllowMultipleAs	*bool	`path:"config/allow-multiple-as" module:"openconfig-bgp"`
	MaximumPaths	*uint32	`path:"config/maximum-paths" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_PeerGroup_UseMultiplePaths_Ebgp implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_PeerGroup_UseMultiplePaths_Ebgp) IsYANGGoStruct() {}


// Bgp_PeerGroup_UseMultiplePaths_Ibgp represents the /openconfig-bgp/bgp/peer-groups/peer-group/use-multiple-paths/ibgp YANG schema element.
type Bgp_PeerGroup_UseMultiplePaths_Ibgp struct {
	MaximumPaths	*uint32	`path:"config/maximum-paths" module:"openconfig-bgp"`
}

// IsYANGGoStruct ensures that Bgp_PeerGroup_UseMultiplePaths_Ibgp implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Bgp_PeerGroup_UseMultiplePaths_Ibgp) IsYANGGoStruct() {}


