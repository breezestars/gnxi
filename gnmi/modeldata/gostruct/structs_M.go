/*
Package gostruct is a generated package which contains definitions
of structs which represent a YANG schema. The generated schema can be
compressed by a series of transformations (compression was true
in this case).

This package was generated by /Users/cmo/.gvm/pkgsets/go1.10.2/global/src/github.com/openconfig/ygot/ygen/commongen.go
using the following YANG input files:
	- github.com/openconfig/public/release/models/interfaces/openconfig-if-aggregate.yang
	- github.com/openconfig/public/release/models/interfaces/openconfig-if-ethernet.yang
	- github.com/openconfig/public/release/models/interfaces/openconfig-interfaces.yang
	- github.com/openconfig/public/release/models/lldp/openconfig-lldp.yang
	- github.com/openconfig/public/release/models/network-instance/openconfig-network-instance.yang
	- github.com/openconfig/public/release/models/platform/openconfig-platform.yang
	- github.com/openconfig/public/release/models/system/openconfig-system.yang
	- github.com/openconfig/public/release/models/vlan/openconfig-vlan.yang
Imported modules were sourced from:
	- github.com/openconfig/public/...
	- github.com/YangModels/yang/...
*/
package gostruct


// Mpls represents the /openconfig-mpls/mpls YANG schema element.
type Mpls struct {
	Global	*Mpls_Global	`path:"global" module:"openconfig-mpls"`
	Interface	map[string]*Mpls_Interface	`path:"te-interface-attributes/interface" module:"openconfig-mpls"`
	Lsps	*Mpls_Lsps	`path:"lsps" module:"openconfig-mpls"`
	SignalingProtocols	*Mpls_SignalingProtocols	`path:"signaling-protocols" module:"openconfig-mpls"`
	TeGlobalAttributes	*Mpls_TeGlobalAttributes	`path:"te-global-attributes" module:"openconfig-mpls"`
}

// IsYANGGoStruct ensures that Mpls implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Mpls) IsYANGGoStruct() {}


// Mpls_Global represents the /openconfig-mpls/mpls/global YANG schema element.
type Mpls_Global struct {
	Interface	map[string]*Mpls_Global_Interface	`path:"interface-attributes/interface" module:"openconfig-mpls"`
	NullLabel	E_OpenconfigMplsTypes_NULL_LABEL_TYPE	`path:"config/null-label" module:"openconfig-mpls"`
	ReservedLabelBlock	map[string]*Mpls_Global_ReservedLabelBlock	`path:"reserved-label-blocks/reserved-label-block" module:"openconfig-mpls"`
	TtlPropagation	*bool	`path:"config/ttl-propagation" module:"openconfig-mpls"`
}

// IsYANGGoStruct ensures that Mpls_Global implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Mpls_Global) IsYANGGoStruct() {}


// Mpls_Global_Interface represents the /openconfig-mpls/mpls/global/interface-attributes/interface YANG schema element.
type Mpls_Global_Interface struct {
	InterfaceId	*string	`path:"config/interface-id|interface-id" module:"openconfig-mpls"`
	InterfaceRef	*Mpls_Global_Interface_InterfaceRef	`path:"interface-ref" module:"openconfig-mpls"`
	MplsEnabled	*bool	`path:"config/mpls-enabled" module:"openconfig-mpls"`
}

// IsYANGGoStruct ensures that Mpls_Global_Interface implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Mpls_Global_Interface) IsYANGGoStruct() {}


// Mpls_Global_Interface_InterfaceRef represents the /openconfig-mpls/mpls/global/interface-attributes/interface/interface-ref YANG schema element.
type Mpls_Global_Interface_InterfaceRef struct {
	Interface	*string	`path:"config/interface" module:"openconfig-mpls"`
	Subinterface	*uint32	`path:"config/subinterface" module:"openconfig-mpls"`
}

// IsYANGGoStruct ensures that Mpls_Global_Interface_InterfaceRef implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Mpls_Global_Interface_InterfaceRef) IsYANGGoStruct() {}


// Mpls_Global_ReservedLabelBlock represents the /openconfig-mpls/mpls/global/reserved-label-blocks/reserved-label-block YANG schema element.
type Mpls_Global_ReservedLabelBlock struct {
	LocalId	*string	`path:"config/local-id|local-id" module:"openconfig-mpls"`
	LowerBound	Mpls_Global_ReservedLabelBlock_LowerBound_Union	`path:"config/lower-bound" module:"openconfig-mpls"`
	UpperBound	Mpls_Global_ReservedLabelBlock_UpperBound_Union	`path:"config/upper-bound" module:"openconfig-mpls"`
}

// IsYANGGoStruct ensures that Mpls_Global_ReservedLabelBlock implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Mpls_Global_ReservedLabelBlock) IsYANGGoStruct() {}


// Mpls_Interface represents the /openconfig-mpls/mpls/te-interface-attributes/interface YANG schema element.
type Mpls_Interface struct {
	AdminGroup	[]string	`path:"config/admin-group" module:"openconfig-mpls"`
	IgpFloodingBandwidth	*Mpls_Interface_IgpFloodingBandwidth	`path:"igp-flooding-bandwidth" module:"openconfig-mpls"`
	InterfaceId	*string	`path:"config/interface-id|interface-id" module:"openconfig-mpls"`
	InterfaceRef	*Mpls_Interface_InterfaceRef	`path:"interface-ref" module:"openconfig-mpls"`
	SrlgMembership	[]string	`path:"config/srlg-membership" module:"openconfig-mpls"`
	TeMetric	*uint32	`path:"config/te-metric" module:"openconfig-mpls"`
}

// IsYANGGoStruct ensures that Mpls_Interface implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Mpls_Interface) IsYANGGoStruct() {}


// Mpls_Interface_IgpFloodingBandwidth represents the /openconfig-mpls/mpls/te-interface-attributes/interface/igp-flooding-bandwidth YANG schema element.
type Mpls_Interface_IgpFloodingBandwidth struct {
	DeltaPercentage	*uint8	`path:"config/delta-percentage" module:"openconfig-mpls"`
	DownThresholds	[]uint8	`path:"config/down-thresholds" module:"openconfig-mpls"`
	ThresholdSpecification	E_OpenconfigMpls_IgpFloodingBandwidth_ThresholdSpecification	`path:"config/threshold-specification" module:"openconfig-mpls"`
	ThresholdType	E_OpenconfigMpls_IgpFloodingBandwidth_ThresholdType	`path:"config/threshold-type" module:"openconfig-mpls"`
	UpDownThresholds	[]uint8	`path:"config/up-down-thresholds" module:"openconfig-mpls"`
	UpThresholds	[]uint8	`path:"config/up-thresholds" module:"openconfig-mpls"`
}

// IsYANGGoStruct ensures that Mpls_Interface_IgpFloodingBandwidth implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Mpls_Interface_IgpFloodingBandwidth) IsYANGGoStruct() {}


// Mpls_Interface_InterfaceRef represents the /openconfig-mpls/mpls/te-interface-attributes/interface/interface-ref YANG schema element.
type Mpls_Interface_InterfaceRef struct {
	Interface	*string	`path:"config/interface" module:"openconfig-mpls"`
	Subinterface	*uint32	`path:"config/subinterface" module:"openconfig-mpls"`
}

// IsYANGGoStruct ensures that Mpls_Interface_InterfaceRef implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Mpls_Interface_InterfaceRef) IsYANGGoStruct() {}


// Mpls_Lsps represents the /openconfig-mpls/mpls/lsps YANG schema element.
type Mpls_Lsps struct {
	ConstrainedPath	*Mpls_Lsps_ConstrainedPath	`path:"constrained-path" module:"openconfig-mpls"`
	StaticLsp	map[string]*Mpls_Lsps_StaticLsp	`path:"static-lsps/static-lsp" module:"openconfig-mpls"`
	UnconstrainedPath	*Mpls_Lsps_UnconstrainedPath	`path:"unconstrained-path" module:"openconfig-mpls"`
}

// IsYANGGoStruct ensures that Mpls_Lsps implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Mpls_Lsps) IsYANGGoStruct() {}


// Mpls_Lsps_ConstrainedPath represents the /openconfig-mpls/mpls/lsps/constrained-path YANG schema element.
type Mpls_Lsps_ConstrainedPath struct {
	NamedExplicitPath	map[string]*Mpls_Lsps_ConstrainedPath_NamedExplicitPath	`path:"named-explicit-paths/named-explicit-path" module:"openconfig-mpls"`
	Tunnel	map[string]*Mpls_Lsps_ConstrainedPath_Tunnel	`path:"tunnels/tunnel" module:"openconfig-mpls"`
}

// IsYANGGoStruct ensures that Mpls_Lsps_ConstrainedPath implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Mpls_Lsps_ConstrainedPath) IsYANGGoStruct() {}


// Mpls_Lsps_ConstrainedPath_NamedExplicitPath represents the /openconfig-mpls/mpls/lsps/constrained-path/named-explicit-paths/named-explicit-path YANG schema element.
type Mpls_Lsps_ConstrainedPath_NamedExplicitPath struct {
	ExplicitRouteObject	map[uint8]*Mpls_Lsps_ConstrainedPath_NamedExplicitPath_ExplicitRouteObject	`path:"explicit-route-objects/explicit-route-object" module:"openconfig-mpls"`
	Name	*string	`path:"config/name|name" module:"openconfig-mpls"`
	SidProtectionRequired	*bool	`path:"config/sid-protection-required" module:"openconfig-mpls"`
	SidSelectionMode	E_OpenconfigMplsSr_NamedExplicitPath_SidSelectionMode	`path:"config/sid-selection-mode" module:"openconfig-mpls"`
}

// IsYANGGoStruct ensures that Mpls_Lsps_ConstrainedPath_NamedExplicitPath implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Mpls_Lsps_ConstrainedPath_NamedExplicitPath) IsYANGGoStruct() {}


// Mpls_Lsps_ConstrainedPath_NamedExplicitPath_ExplicitRouteObject represents the /openconfig-mpls/mpls/lsps/constrained-path/named-explicit-paths/named-explicit-path/explicit-route-objects/explicit-route-object YANG schema element.
type Mpls_Lsps_ConstrainedPath_NamedExplicitPath_ExplicitRouteObject struct {
	Address	*string	`path:"config/address" module:"openconfig-mpls"`
	HopType	E_OpenconfigMpls_MplsHopType	`path:"config/hop-type" module:"openconfig-mpls"`
	Index	*uint8	`path:"config/index|index" module:"openconfig-mpls"`
}

// IsYANGGoStruct ensures that Mpls_Lsps_ConstrainedPath_NamedExplicitPath_ExplicitRouteObject implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Mpls_Lsps_ConstrainedPath_NamedExplicitPath_ExplicitRouteObject) IsYANGGoStruct() {}


// Mpls_Lsps_ConstrainedPath_Tunnel represents the /openconfig-mpls/mpls/lsps/constrained-path/tunnels/tunnel YANG schema element.
type Mpls_Lsps_ConstrainedPath_Tunnel struct {
	AdminStatus	E_OpenconfigMplsTypes_TUNNEL_ADMIN_STATUS	`path:"config/admin-status" module:"openconfig-mpls"`
	Bandwidth	*Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth	`path:"bandwidth" module:"openconfig-mpls"`
	Counters	*Mpls_Lsps_ConstrainedPath_Tunnel_Counters	`path:"state/counters" module:"openconfig-mpls"`
	Description	*string	`path:"config/description" module:"openconfig-mpls"`
	HoldPriority	*uint8	`path:"config/hold-priority" module:"openconfig-mpls"`
	Metric	*int32	`path:"config/metric" module:"openconfig-mpls"`
	MetricType	E_OpenconfigMplsTypes_LSP_METRIC_TYPE	`path:"config/metric-type" module:"openconfig-mpls"`
	Name	*string	`path:"config/name|name" module:"openconfig-mpls"`
	OperStatus	E_OpenconfigMplsTypes_LSP_OPER_STATUS	`path:"state/oper-status" module:"openconfig-mpls"`
	P2PTunnelAttributes	*Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes	`path:"p2p-tunnel-attributes" module:"openconfig-mpls"`
	Preference	*uint8	`path:"config/preference" module:"openconfig-mpls"`
	ProtectionStyleRequested	E_OpenconfigMplsTypes_PROTECTION_TYPE	`path:"config/protection-style-requested" module:"openconfig-mpls"`
	ReoptimizeTimer	*uint16	`path:"config/reoptimize-timer" module:"openconfig-mpls"`
	Role	E_OpenconfigMplsTypes_LSP_ROLE	`path:"state/role" module:"openconfig-mpls"`
	SetupPriority	*uint8	`path:"config/setup-priority" module:"openconfig-mpls"`
	ShortcutEligible	*bool	`path:"config/shortcut-eligible" module:"openconfig-mpls"`
	SignalingProtocol	E_OpenconfigMplsTypes_PATH_SETUP_PROTOCOL	`path:"config/signaling-protocol" module:"openconfig-mpls"`
	SoftPreemption	*bool	`path:"config/soft-preemption" module:"openconfig-mpls"`
	Source	*string	`path:"config/source" module:"openconfig-mpls"`
	Type	E_OpenconfigMplsTypes_TUNNEL_TYPE	`path:"config/type" module:"openconfig-mpls"`
}

// IsYANGGoStruct ensures that Mpls_Lsps_ConstrainedPath_Tunnel implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Mpls_Lsps_ConstrainedPath_Tunnel) IsYANGGoStruct() {}


// Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth represents the /openconfig-mpls/mpls/lsps/constrained-path/tunnels/tunnel/bandwidth YANG schema element.
type Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth struct {
	AutoBandwidth	*Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth	`path:"auto-bandwidth" module:"openconfig-mpls"`
	SetBandwidth	*uint64	`path:"config/set-bandwidth" module:"openconfig-mpls"`
	SignaledBandwidth	*uint64	`path:"state/signaled-bandwidth" module:"openconfig-mpls"`
	SpecificationType	E_OpenconfigMpls_TeBandwidthType	`path:"config/specification-type" module:"openconfig-mpls"`
}

// IsYANGGoStruct ensures that Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth) IsYANGGoStruct() {}


// Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth represents the /openconfig-mpls/mpls/lsps/constrained-path/tunnels/tunnel/bandwidth/auto-bandwidth YANG schema element.
type Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth struct {
	AdjustInterval	*uint32	`path:"config/adjust-interval" module:"openconfig-mpls"`
	AdjustThreshold	*uint8	`path:"config/adjust-threshold" module:"openconfig-mpls"`
	Enabled	*bool	`path:"config/enabled" module:"openconfig-mpls"`
	MaxBw	*uint64	`path:"config/max-bw" module:"openconfig-mpls"`
	MinBw	*uint64	`path:"config/min-bw" module:"openconfig-mpls"`
	Overflow	*Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_Overflow	`path:"overflow" module:"openconfig-mpls"`
	Underflow	*Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_Underflow	`path:"underflow" module:"openconfig-mpls"`
}

// IsYANGGoStruct ensures that Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth) IsYANGGoStruct() {}


// Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_Overflow represents the /openconfig-mpls/mpls/lsps/constrained-path/tunnels/tunnel/bandwidth/auto-bandwidth/overflow YANG schema element.
type Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_Overflow struct {
	Enabled	*bool	`path:"config/enabled" module:"openconfig-mpls"`
	OverflowThreshold	*uint8	`path:"config/overflow-threshold" module:"openconfig-mpls"`
	TriggerEventCount	*uint16	`path:"config/trigger-event-count" module:"openconfig-mpls"`
}

// IsYANGGoStruct ensures that Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_Overflow implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_Overflow) IsYANGGoStruct() {}


// Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_Underflow represents the /openconfig-mpls/mpls/lsps/constrained-path/tunnels/tunnel/bandwidth/auto-bandwidth/underflow YANG schema element.
type Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_Underflow struct {
	Enabled	*bool	`path:"config/enabled" module:"openconfig-mpls"`
	TriggerEventCount	*uint16	`path:"config/trigger-event-count" module:"openconfig-mpls"`
	UnderflowThreshold	*uint8	`path:"config/underflow-threshold" module:"openconfig-mpls"`
}

// IsYANGGoStruct ensures that Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_Underflow implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Mpls_Lsps_ConstrainedPath_Tunnel_Bandwidth_AutoBandwidth_Underflow) IsYANGGoStruct() {}


// Mpls_Lsps_ConstrainedPath_Tunnel_Counters represents the /openconfig-mpls/mpls/lsps/constrained-path/tunnels/tunnel/state/counters YANG schema element.
type Mpls_Lsps_ConstrainedPath_Tunnel_Counters struct {
	Bytes	*uint64	`path:"bytes" module:"openconfig-mpls"`
	CurrentPathTime	*string	`path:"current-path-time" module:"openconfig-mpls"`
	NextReoptimizationTime	*string	`path:"next-reoptimization-time" module:"openconfig-mpls"`
	OnlineTime	*string	`path:"online-time" module:"openconfig-mpls"`
	Packets	*uint64	`path:"packets" module:"openconfig-mpls"`
	PathChanges	*uint64	`path:"path-changes" module:"openconfig-mpls"`
	StateChanges	*uint64	`path:"state-changes" module:"openconfig-mpls"`
}

// IsYANGGoStruct ensures that Mpls_Lsps_ConstrainedPath_Tunnel_Counters implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Mpls_Lsps_ConstrainedPath_Tunnel_Counters) IsYANGGoStruct() {}


// Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes represents the /openconfig-mpls/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes YANG schema element.
type Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes struct {
	Destination	*string	`path:"config/destination" module:"openconfig-mpls"`
	P2PPrimaryPath	map[string]*Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath	`path:"p2p-primary-path/p2p-primary-path" module:"openconfig-mpls"`
	P2PSecondaryPath	map[string]*Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath	`path:"p2p-secondary-paths/p2p-secondary-path" module:"openconfig-mpls"`
}

// IsYANGGoStruct ensures that Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes) IsYANGGoStruct() {}


// Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath represents the /openconfig-mpls/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path YANG schema element.
type Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath struct {
	AdminGroups	*Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroups	`path:"admin-groups" module:"openconfig-mpls"`
	AssociatedRsvpSession	*uint64	`path:"state/associated-rsvp-session" module:"openconfig-mpls"`
	CandidateSecondaryPath	map[string]*Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CandidateSecondaryPath	`path:"candidate-secondary-paths/candidate-secondary-path" module:"openconfig-mpls"`
	CspfTiebreaker	E_OpenconfigMpls_CspfTieBreaking	`path:"config/cspf-tiebreaker" module:"openconfig-mpls"`
	ExplicitPathName	*string	`path:"config/explicit-path-name" module:"openconfig-mpls"`
	HoldPriority	*uint8	`path:"config/hold-priority" module:"openconfig-mpls"`
	Name	*string	`path:"config/name|name" module:"openconfig-mpls"`
	PathComputationMethod	E_OpenconfigMplsTypes_PATH_COMPUTATION_METHOD	`path:"config/path-computation-method" module:"openconfig-mpls"`
	PathComputationServer	*string	`path:"config/path-computation-server" module:"openconfig-mpls"`
	Preference	*uint8	`path:"config/preference" module:"openconfig-mpls"`
	RetryTimer	*uint16	`path:"config/retry-timer" module:"openconfig-mpls"`
	SetupPriority	*uint8	`path:"config/setup-priority" module:"openconfig-mpls"`
	UseCspf	*bool	`path:"config/use-cspf" module:"openconfig-mpls"`
}

// IsYANGGoStruct ensures that Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath) IsYANGGoStruct() {}


// Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroups represents the /openconfig-mpls/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/admin-groups YANG schema element.
type Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroups struct {
	ExcludeGroup	[]string	`path:"config/exclude-group" module:"openconfig-mpls"`
	IncludeAllGroup	[]string	`path:"config/include-all-group" module:"openconfig-mpls"`
	IncludeAnyGroup	[]string	`path:"config/include-any-group" module:"openconfig-mpls"`
}

// IsYANGGoStruct ensures that Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroups implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroups) IsYANGGoStruct() {}


// Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CandidateSecondaryPath represents the /openconfig-mpls/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/candidate-secondary-paths/candidate-secondary-path YANG schema element.
type Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CandidateSecondaryPath struct {
	Active	*bool	`path:"state/active" module:"openconfig-mpls"`
	Priority	*uint16	`path:"config/priority" module:"openconfig-mpls"`
	SecondaryPath	*string	`path:"config/secondary-path|secondary-path" module:"openconfig-mpls"`
}

// IsYANGGoStruct ensures that Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CandidateSecondaryPath implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CandidateSecondaryPath) IsYANGGoStruct() {}


// Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath represents the /openconfig-mpls/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path YANG schema element.
type Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath struct {
	AdminGroups	*Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroups	`path:"admin-groups" module:"openconfig-mpls"`
	AssociatedRsvpSession	*uint64	`path:"state/associated-rsvp-session" module:"openconfig-mpls"`
	CspfTiebreaker	E_OpenconfigMpls_CspfTieBreaking	`path:"config/cspf-tiebreaker" module:"openconfig-mpls"`
	ExplicitPathName	*string	`path:"config/explicit-path-name" module:"openconfig-mpls"`
	HoldPriority	*uint8	`path:"config/hold-priority" module:"openconfig-mpls"`
	Name	*string	`path:"config/name|name" module:"openconfig-mpls"`
	PathComputationMethod	E_OpenconfigMplsTypes_PATH_COMPUTATION_METHOD	`path:"config/path-computation-method" module:"openconfig-mpls"`
	PathComputationServer	*string	`path:"config/path-computation-server" module:"openconfig-mpls"`
	Preference	*uint8	`path:"config/preference" module:"openconfig-mpls"`
	RetryTimer	*uint16	`path:"config/retry-timer" module:"openconfig-mpls"`
	SetupPriority	*uint8	`path:"config/setup-priority" module:"openconfig-mpls"`
	UseCspf	*bool	`path:"config/use-cspf" module:"openconfig-mpls"`
}

// IsYANGGoStruct ensures that Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath) IsYANGGoStruct() {}


// Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroups represents the /openconfig-mpls/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/admin-groups YANG schema element.
type Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroups struct {
	ExcludeGroup	[]string	`path:"config/exclude-group" module:"openconfig-mpls"`
	IncludeAllGroup	[]string	`path:"config/include-all-group" module:"openconfig-mpls"`
	IncludeAnyGroup	[]string	`path:"config/include-any-group" module:"openconfig-mpls"`
}

// IsYANGGoStruct ensures that Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroups implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroups) IsYANGGoStruct() {}


// Mpls_Lsps_StaticLsp represents the /openconfig-mpls/mpls/lsps/static-lsps/static-lsp YANG schema element.
type Mpls_Lsps_StaticLsp struct {
	Egress	*Mpls_Lsps_StaticLsp_Egress	`path:"egress" module:"openconfig-mpls"`
	Ingress	*Mpls_Lsps_StaticLsp_Ingress	`path:"ingress" module:"openconfig-mpls"`
	Name	*string	`path:"config/name|name" module:"openconfig-mpls"`
	Transit	*Mpls_Lsps_StaticLsp_Transit	`path:"transit" module:"openconfig-mpls"`
}

// IsYANGGoStruct ensures that Mpls_Lsps_StaticLsp implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Mpls_Lsps_StaticLsp) IsYANGGoStruct() {}


// Mpls_Lsps_StaticLsp_Egress represents the /openconfig-mpls/mpls/lsps/static-lsps/static-lsp/egress YANG schema element.
type Mpls_Lsps_StaticLsp_Egress struct {
	IncomingLabel	Mpls_Lsps_StaticLsp_Egress_IncomingLabel_Union	`path:"config/incoming-label" module:"openconfig-mpls"`
	NextHop	*string	`path:"config/next-hop" module:"openconfig-mpls"`
	PushLabel	Mpls_Lsps_StaticLsp_Egress_PushLabel_Union	`path:"config/push-label" module:"openconfig-mpls"`
}

// IsYANGGoStruct ensures that Mpls_Lsps_StaticLsp_Egress implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Mpls_Lsps_StaticLsp_Egress) IsYANGGoStruct() {}


// Mpls_Lsps_StaticLsp_Ingress represents the /openconfig-mpls/mpls/lsps/static-lsps/static-lsp/ingress YANG schema element.
type Mpls_Lsps_StaticLsp_Ingress struct {
	IncomingLabel	Mpls_Lsps_StaticLsp_Ingress_IncomingLabel_Union	`path:"config/incoming-label" module:"openconfig-mpls"`
	NextHop	*string	`path:"config/next-hop" module:"openconfig-mpls"`
	PushLabel	Mpls_Lsps_StaticLsp_Ingress_PushLabel_Union	`path:"config/push-label" module:"openconfig-mpls"`
}

// IsYANGGoStruct ensures that Mpls_Lsps_StaticLsp_Ingress implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Mpls_Lsps_StaticLsp_Ingress) IsYANGGoStruct() {}


// Mpls_Lsps_StaticLsp_Transit represents the /openconfig-mpls/mpls/lsps/static-lsps/static-lsp/transit YANG schema element.
type Mpls_Lsps_StaticLsp_Transit struct {
	IncomingLabel	Mpls_Lsps_StaticLsp_Transit_IncomingLabel_Union	`path:"config/incoming-label" module:"openconfig-mpls"`
	NextHop	*string	`path:"config/next-hop" module:"openconfig-mpls"`
	PushLabel	Mpls_Lsps_StaticLsp_Transit_PushLabel_Union	`path:"config/push-label" module:"openconfig-mpls"`
}

// IsYANGGoStruct ensures that Mpls_Lsps_StaticLsp_Transit implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Mpls_Lsps_StaticLsp_Transit) IsYANGGoStruct() {}


// Mpls_Lsps_UnconstrainedPath represents the /openconfig-mpls/mpls/lsps/unconstrained-path YANG schema element.
type Mpls_Lsps_UnconstrainedPath struct {
	PathSetupProtocol	*Mpls_Lsps_UnconstrainedPath_PathSetupProtocol	`path:"path-setup-protocol" module:"openconfig-mpls"`
}

// IsYANGGoStruct ensures that Mpls_Lsps_UnconstrainedPath implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Mpls_Lsps_UnconstrainedPath) IsYANGGoStruct() {}


// Mpls_Lsps_UnconstrainedPath_PathSetupProtocol represents the /openconfig-mpls/mpls/lsps/unconstrained-path/path-setup-protocol YANG schema element.
type Mpls_Lsps_UnconstrainedPath_PathSetupProtocol struct {
	Ldp	*Mpls_Lsps_UnconstrainedPath_PathSetupProtocol_Ldp	`path:"ldp" module:"openconfig-mpls"`
}

// IsYANGGoStruct ensures that Mpls_Lsps_UnconstrainedPath_PathSetupProtocol implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Mpls_Lsps_UnconstrainedPath_PathSetupProtocol) IsYANGGoStruct() {}


// Mpls_Lsps_UnconstrainedPath_PathSetupProtocol_Ldp represents the /openconfig-mpls/mpls/lsps/unconstrained-path/path-setup-protocol/ldp YANG schema element.
type Mpls_Lsps_UnconstrainedPath_PathSetupProtocol_Ldp struct {
}

// IsYANGGoStruct ensures that Mpls_Lsps_UnconstrainedPath_PathSetupProtocol_Ldp implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Mpls_Lsps_UnconstrainedPath_PathSetupProtocol_Ldp) IsYANGGoStruct() {}


// Mpls_SignalingProtocols represents the /openconfig-mpls/mpls/signaling-protocols YANG schema element.
type Mpls_SignalingProtocols struct {
	Ldp	*Mpls_SignalingProtocols_Ldp	`path:"ldp" module:"openconfig-mpls"`
	RsvpTe	*Mpls_SignalingProtocols_RsvpTe	`path:"rsvp-te" module:"openconfig-mpls"`
	SegmentRouting	*Mpls_SignalingProtocols_SegmentRouting	`path:"segment-routing" module:"openconfig-mpls"`
}

// IsYANGGoStruct ensures that Mpls_SignalingProtocols implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Mpls_SignalingProtocols) IsYANGGoStruct() {}


// Mpls_SignalingProtocols_Ldp represents the /openconfig-mpls/mpls/signaling-protocols/ldp YANG schema element.
type Mpls_SignalingProtocols_Ldp struct {
}

// IsYANGGoStruct ensures that Mpls_SignalingProtocols_Ldp implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Mpls_SignalingProtocols_Ldp) IsYANGGoStruct() {}


// Mpls_SignalingProtocols_RsvpTe represents the /openconfig-mpls/mpls/signaling-protocols/rsvp-te YANG schema element.
type Mpls_SignalingProtocols_RsvpTe struct {
	Global	*Mpls_SignalingProtocols_RsvpTe_Global	`path:"global" module:"openconfig-mpls"`
	Interface	map[string]*Mpls_SignalingProtocols_RsvpTe_Interface	`path:"interface-attributes/interface" module:"openconfig-mpls"`
	Neighbor	map[string]*Mpls_SignalingProtocols_RsvpTe_Neighbor	`path:"neighbors/neighbor" module:"openconfig-mpls"`
	Session	map[uint64]*Mpls_SignalingProtocols_RsvpTe_Session	`path:"sessions/session" module:"openconfig-mpls"`
}

// IsYANGGoStruct ensures that Mpls_SignalingProtocols_RsvpTe implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Mpls_SignalingProtocols_RsvpTe) IsYANGGoStruct() {}


// Mpls_SignalingProtocols_RsvpTe_Global represents the /openconfig-mpls/mpls/signaling-protocols/rsvp-te/global YANG schema element.
type Mpls_SignalingProtocols_RsvpTe_Global struct {
	Counters	*Mpls_SignalingProtocols_RsvpTe_Global_Counters	`path:"state/counters" module:"openconfig-mpls"`
	GracefulRestart	*Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestart	`path:"graceful-restart" module:"openconfig-mpls"`
	Hellos	*Mpls_SignalingProtocols_RsvpTe_Global_Hellos	`path:"hellos" module:"openconfig-mpls"`
	SoftPreemption	*Mpls_SignalingProtocols_RsvpTe_Global_SoftPreemption	`path:"soft-preemption" module:"openconfig-mpls"`
}

// IsYANGGoStruct ensures that Mpls_SignalingProtocols_RsvpTe_Global implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Mpls_SignalingProtocols_RsvpTe_Global) IsYANGGoStruct() {}


// Mpls_SignalingProtocols_RsvpTe_Global_Counters represents the /openconfig-mpls/mpls/signaling-protocols/rsvp-te/global/state/counters YANG schema element.
type Mpls_SignalingProtocols_RsvpTe_Global_Counters struct {
	InAckMessages	*uint64	`path:"in-ack-messages" module:"openconfig-mpls"`
	InHelloMessages	*uint64	`path:"in-hello-messages" module:"openconfig-mpls"`
	InPathErrorMessages	*uint64	`path:"in-path-error-messages" module:"openconfig-mpls"`
	InPathMessages	*uint64	`path:"in-path-messages" module:"openconfig-mpls"`
	InPathTearMessages	*uint64	`path:"in-path-tear-messages" module:"openconfig-mpls"`
	InReservationErrorMessages	*uint64	`path:"in-reservation-error-messages" module:"openconfig-mpls"`
	InReservationMessages	*uint64	`path:"in-reservation-messages" module:"openconfig-mpls"`
	InReservationTearMessages	*uint64	`path:"in-reservation-tear-messages" module:"openconfig-mpls"`
	InSrefreshMessages	*uint64	`path:"in-srefresh-messages" module:"openconfig-mpls"`
	OutAckMessages	*uint64	`path:"out-ack-messages" module:"openconfig-mpls"`
	OutHelloMessages	*uint64	`path:"out-hello-messages" module:"openconfig-mpls"`
	OutPathErrorMessages	*uint64	`path:"out-path-error-messages" module:"openconfig-mpls"`
	OutPathMessages	*uint64	`path:"out-path-messages" module:"openconfig-mpls"`
	OutPathTearMessages	*uint64	`path:"out-path-tear-messages" module:"openconfig-mpls"`
	OutReservationErrorMessages	*uint64	`path:"out-reservation-error-messages" module:"openconfig-mpls"`
	OutReservationMessages	*uint64	`path:"out-reservation-messages" module:"openconfig-mpls"`
	OutReservationTearMessages	*uint64	`path:"out-reservation-tear-messages" module:"openconfig-mpls"`
	OutSrefreshMessages	*uint64	`path:"out-srefresh-messages" module:"openconfig-mpls"`
	PathTimeouts	*uint64	`path:"path-timeouts" module:"openconfig-mpls"`
	RateLimitedMessages	*uint64	`path:"rate-limited-messages" module:"openconfig-mpls"`
	ReservationTimeouts	*uint64	`path:"reservation-timeouts" module:"openconfig-mpls"`
}

// IsYANGGoStruct ensures that Mpls_SignalingProtocols_RsvpTe_Global_Counters implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Mpls_SignalingProtocols_RsvpTe_Global_Counters) IsYANGGoStruct() {}


// Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestart represents the /openconfig-mpls/mpls/signaling-protocols/rsvp-te/global/graceful-restart YANG schema element.
type Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestart struct {
	Enable	*bool	`path:"config/enable" module:"openconfig-mpls"`
	RecoveryTime	*uint32	`path:"config/recovery-time" module:"openconfig-mpls"`
	RestartTime	*uint32	`path:"config/restart-time" module:"openconfig-mpls"`
}

// IsYANGGoStruct ensures that Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestart implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestart) IsYANGGoStruct() {}


// Mpls_SignalingProtocols_RsvpTe_Global_Hellos represents the /openconfig-mpls/mpls/signaling-protocols/rsvp-te/global/hellos YANG schema element.
type Mpls_SignalingProtocols_RsvpTe_Global_Hellos struct {
	HelloInterval	*uint16	`path:"config/hello-interval" module:"openconfig-mpls"`
	RefreshReduction	*bool	`path:"config/refresh-reduction" module:"openconfig-mpls"`
}

// IsYANGGoStruct ensures that Mpls_SignalingProtocols_RsvpTe_Global_Hellos implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Mpls_SignalingProtocols_RsvpTe_Global_Hellos) IsYANGGoStruct() {}


// Mpls_SignalingProtocols_RsvpTe_Global_SoftPreemption represents the /openconfig-mpls/mpls/signaling-protocols/rsvp-te/global/soft-preemption YANG schema element.
type Mpls_SignalingProtocols_RsvpTe_Global_SoftPreemption struct {
	Enable	*bool	`path:"config/enable" module:"openconfig-mpls"`
	SoftPreemptionTimeout	*uint16	`path:"config/soft-preemption-timeout" module:"openconfig-mpls"`
}

// IsYANGGoStruct ensures that Mpls_SignalingProtocols_RsvpTe_Global_SoftPreemption implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Mpls_SignalingProtocols_RsvpTe_Global_SoftPreemption) IsYANGGoStruct() {}


// Mpls_SignalingProtocols_RsvpTe_Interface represents the /openconfig-mpls/mpls/signaling-protocols/rsvp-te/interface-attributes/interface YANG schema element.
type Mpls_SignalingProtocols_RsvpTe_Interface struct {
	Authentication	*Mpls_SignalingProtocols_RsvpTe_Interface_Authentication	`path:"authentication" module:"openconfig-mpls"`
	BandwidthReservation	map[Mpls_SignalingProtocols_RsvpTe_Interface_BandwidthReservation_Priority_Union]*Mpls_SignalingProtocols_RsvpTe_Interface_BandwidthReservation	`path:"bandwidth-reservations/bandwidth-reservation" module:"openconfig-mpls"`
	Counters	*Mpls_SignalingProtocols_RsvpTe_Interface_Counters	`path:"state/counters" module:"openconfig-mpls"`
	Hellos	*Mpls_SignalingProtocols_RsvpTe_Interface_Hellos	`path:"hellos" module:"openconfig-mpls"`
	InterfaceId	*string	`path:"config/interface-id|interface-id" module:"openconfig-mpls"`
	InterfaceRef	*Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceRef	`path:"interface-ref" module:"openconfig-mpls"`
	Protection	*Mpls_SignalingProtocols_RsvpTe_Interface_Protection	`path:"protection" module:"openconfig-mpls"`
	Subscription	*Mpls_SignalingProtocols_RsvpTe_Interface_Subscription	`path:"subscription" module:"openconfig-mpls"`
}

// IsYANGGoStruct ensures that Mpls_SignalingProtocols_RsvpTe_Interface implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Mpls_SignalingProtocols_RsvpTe_Interface) IsYANGGoStruct() {}


// Mpls_SignalingProtocols_RsvpTe_Interface_Authentication represents the /openconfig-mpls/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/authentication YANG schema element.
type Mpls_SignalingProtocols_RsvpTe_Interface_Authentication struct {
	AuthenticationKey	*string	`path:"config/authentication-key" module:"openconfig-mpls"`
	Enable	*bool	`path:"config/enable" module:"openconfig-mpls"`
}

// IsYANGGoStruct ensures that Mpls_SignalingProtocols_RsvpTe_Interface_Authentication implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Mpls_SignalingProtocols_RsvpTe_Interface_Authentication) IsYANGGoStruct() {}


// Mpls_SignalingProtocols_RsvpTe_Interface_BandwidthReservation represents the /openconfig-mpls/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/bandwidth-reservations/bandwidth-reservation YANG schema element.
type Mpls_SignalingProtocols_RsvpTe_Interface_BandwidthReservation struct {
	ActiveReservationsCount	*uint64	`path:"state/active-reservations-count" module:"openconfig-mpls"`
	AvailableBandwidth	*uint64	`path:"state/available-bandwidth" module:"openconfig-mpls"`
	HighwaterMark	*uint64	`path:"state/highwater-mark" module:"openconfig-mpls"`
	Priority	Mpls_SignalingProtocols_RsvpTe_Interface_BandwidthReservation_Priority_Union	`path:"state/priority|priority" module:"openconfig-mpls"`
	ReservedBandwidth	*uint64	`path:"state/reserved-bandwidth" module:"openconfig-mpls"`
}

// IsYANGGoStruct ensures that Mpls_SignalingProtocols_RsvpTe_Interface_BandwidthReservation implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Mpls_SignalingProtocols_RsvpTe_Interface_BandwidthReservation) IsYANGGoStruct() {}


// Mpls_SignalingProtocols_RsvpTe_Interface_Counters represents the /openconfig-mpls/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters YANG schema element.
type Mpls_SignalingProtocols_RsvpTe_Interface_Counters struct {
	InAckMessages	*uint64	`path:"in-ack-messages" module:"openconfig-mpls"`
	InHelloMessages	*uint64	`path:"in-hello-messages" module:"openconfig-mpls"`
	InPathErrorMessages	*uint64	`path:"in-path-error-messages" module:"openconfig-mpls"`
	InPathMessages	*uint64	`path:"in-path-messages" module:"openconfig-mpls"`
	InPathTearMessages	*uint64	`path:"in-path-tear-messages" module:"openconfig-mpls"`
	InReservationErrorMessages	*uint64	`path:"in-reservation-error-messages" module:"openconfig-mpls"`
	InReservationMessages	*uint64	`path:"in-reservation-messages" module:"openconfig-mpls"`
	InReservationTearMessages	*uint64	`path:"in-reservation-tear-messages" module:"openconfig-mpls"`
	InSrefreshMessages	*uint64	`path:"in-srefresh-messages" module:"openconfig-mpls"`
	OutAckMessages	*uint64	`path:"out-ack-messages" module:"openconfig-mpls"`
	OutHelloMessages	*uint64	`path:"out-hello-messages" module:"openconfig-mpls"`
	OutPathErrorMessages	*uint64	`path:"out-path-error-messages" module:"openconfig-mpls"`
	OutPathMessages	*uint64	`path:"out-path-messages" module:"openconfig-mpls"`
	OutPathTearMessages	*uint64	`path:"out-path-tear-messages" module:"openconfig-mpls"`
	OutReservationErrorMessages	*uint64	`path:"out-reservation-error-messages" module:"openconfig-mpls"`
	OutReservationMessages	*uint64	`path:"out-reservation-messages" module:"openconfig-mpls"`
	OutReservationTearMessages	*uint64	`path:"out-reservation-tear-messages" module:"openconfig-mpls"`
	OutSrefreshMessages	*uint64	`path:"out-srefresh-messages" module:"openconfig-mpls"`
}

// IsYANGGoStruct ensures that Mpls_SignalingProtocols_RsvpTe_Interface_Counters implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Mpls_SignalingProtocols_RsvpTe_Interface_Counters) IsYANGGoStruct() {}


// Mpls_SignalingProtocols_RsvpTe_Interface_Hellos represents the /openconfig-mpls/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/hellos YANG schema element.
type Mpls_SignalingProtocols_RsvpTe_Interface_Hellos struct {
	HelloInterval	*uint16	`path:"config/hello-interval" module:"openconfig-mpls"`
	RefreshReduction	*bool	`path:"config/refresh-reduction" module:"openconfig-mpls"`
}

// IsYANGGoStruct ensures that Mpls_SignalingProtocols_RsvpTe_Interface_Hellos implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Mpls_SignalingProtocols_RsvpTe_Interface_Hellos) IsYANGGoStruct() {}


// Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceRef represents the /openconfig-mpls/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/interface-ref YANG schema element.
type Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceRef struct {
	Interface	*string	`path:"config/interface" module:"openconfig-mpls"`
	Subinterface	*uint32	`path:"config/subinterface" module:"openconfig-mpls"`
}

// IsYANGGoStruct ensures that Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceRef implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceRef) IsYANGGoStruct() {}


// Mpls_SignalingProtocols_RsvpTe_Interface_Protection represents the /openconfig-mpls/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/protection YANG schema element.
type Mpls_SignalingProtocols_RsvpTe_Interface_Protection struct {
	BypassOptimizeInterval	*uint16	`path:"config/bypass-optimize-interval" module:"openconfig-mpls"`
	LinkProtectionStyleRequested	E_OpenconfigMplsTypes_PROTECTION_TYPE	`path:"config/link-protection-style-requested" module:"openconfig-mpls"`
}

// IsYANGGoStruct ensures that Mpls_SignalingProtocols_RsvpTe_Interface_Protection implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Mpls_SignalingProtocols_RsvpTe_Interface_Protection) IsYANGGoStruct() {}


// Mpls_SignalingProtocols_RsvpTe_Interface_Subscription represents the /openconfig-mpls/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/subscription YANG schema element.
type Mpls_SignalingProtocols_RsvpTe_Interface_Subscription struct {
	CalculatedAbsoluteSubscriptionBw	*uint64	`path:"state/calculated-absolute-subscription-bw" module:"openconfig-mpls"`
	Subscription	*uint8	`path:"config/subscription" module:"openconfig-mpls"`
}

// IsYANGGoStruct ensures that Mpls_SignalingProtocols_RsvpTe_Interface_Subscription implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Mpls_SignalingProtocols_RsvpTe_Interface_Subscription) IsYANGGoStruct() {}


// Mpls_SignalingProtocols_RsvpTe_Neighbor represents the /openconfig-mpls/mpls/signaling-protocols/rsvp-te/neighbors/neighbor YANG schema element.
type Mpls_SignalingProtocols_RsvpTe_Neighbor struct {
	Address	*string	`path:"state/address|address" module:"openconfig-mpls"`
	DetectedInterface	*string	`path:"state/detected-interface" module:"openconfig-mpls"`
	NeighborStatus	E_OpenconfigMplsRsvp_Neighbor_NeighborStatus	`path:"state/neighbor-status" module:"openconfig-mpls"`
	RefreshReduction	*bool	`path:"state/refresh-reduction" module:"openconfig-mpls"`
}

// IsYANGGoStruct ensures that Mpls_SignalingProtocols_RsvpTe_Neighbor implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Mpls_SignalingProtocols_RsvpTe_Neighbor) IsYANGGoStruct() {}


// Mpls_SignalingProtocols_RsvpTe_Session represents the /openconfig-mpls/mpls/signaling-protocols/rsvp-te/sessions/session YANG schema element.
type Mpls_SignalingProtocols_RsvpTe_Session struct {
	DestinationAddress	*string	`path:"state/destination-address" module:"openconfig-mpls"`
	LabelIn	Mpls_SignalingProtocols_RsvpTe_Session_LabelIn_Union	`path:"state/label-in" module:"openconfig-mpls"`
	LabelOut	Mpls_SignalingProtocols_RsvpTe_Session_LabelOut_Union	`path:"state/label-out" module:"openconfig-mpls"`
	LocalIndex	*uint64	`path:"state/local-index|local-index" module:"openconfig-mpls"`
	LspId	*uint16	`path:"state/lsp-id" module:"openconfig-mpls"`
	ProtectionRequested	E_OpenconfigMplsTypes_PROTECTION_TYPE	`path:"state/protection-requested" module:"openconfig-mpls"`
	RecordRouteObject	map[uint8]*Mpls_SignalingProtocols_RsvpTe_Session_RecordRouteObject	`path:"record-route-objects/record-route-object" module:"openconfig-mpls"`
	SenderTspec	*Mpls_SignalingProtocols_RsvpTe_Session_SenderTspec	`path:"state/sender-tspec" module:"openconfig-mpls"`
	SessionName	*string	`path:"state/session-name" module:"openconfig-mpls"`
	SourceAddress	*string	`path:"state/source-address" module:"openconfig-mpls"`
	Status	E_OpenconfigMplsRsvp_Session_Status	`path:"state/status" module:"openconfig-mpls"`
	TunnelId	*uint16	`path:"state/tunnel-id" module:"openconfig-mpls"`
	Type	E_OpenconfigMplsTypes_LSP_ROLE	`path:"state/type" module:"openconfig-mpls"`
}

// IsYANGGoStruct ensures that Mpls_SignalingProtocols_RsvpTe_Session implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Mpls_SignalingProtocols_RsvpTe_Session) IsYANGGoStruct() {}


// Mpls_SignalingProtocols_RsvpTe_Session_RecordRouteObject represents the /openconfig-mpls/mpls/signaling-protocols/rsvp-te/sessions/session/record-route-objects/record-route-object YANG schema element.
type Mpls_SignalingProtocols_RsvpTe_Session_RecordRouteObject struct {
	Address	*string	`path:"state/address" module:"openconfig-mpls"`
	Index	*uint8	`path:"state/index|index" module:"openconfig-mpls"`
	ReportedFlags	*uint8	`path:"state/reported-flags" module:"openconfig-mpls"`
	ReportedLabel	Mpls_SignalingProtocols_RsvpTe_Session_RecordRouteObject_ReportedLabel_Union	`path:"state/reported-label" module:"openconfig-mpls"`
}

// IsYANGGoStruct ensures that Mpls_SignalingProtocols_RsvpTe_Session_RecordRouteObject implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Mpls_SignalingProtocols_RsvpTe_Session_RecordRouteObject) IsYANGGoStruct() {}


// Mpls_SignalingProtocols_RsvpTe_Session_SenderTspec represents the /openconfig-mpls/mpls/signaling-protocols/rsvp-te/sessions/session/state/sender-tspec YANG schema element.
type Mpls_SignalingProtocols_RsvpTe_Session_SenderTspec struct {
	PeakDataRate	Mpls_SignalingProtocols_RsvpTe_Session_SenderTspec_PeakDataRate_Union	`path:"peak-data-rate" module:"openconfig-mpls"`
	Rate	Binary	`path:"rate" module:"openconfig-mpls"`
	Size	Binary	`path:"size" module:"openconfig-mpls"`
}

// IsYANGGoStruct ensures that Mpls_SignalingProtocols_RsvpTe_Session_SenderTspec implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Mpls_SignalingProtocols_RsvpTe_Session_SenderTspec) IsYANGGoStruct() {}


// Mpls_SignalingProtocols_SegmentRouting represents the /openconfig-mpls/mpls/signaling-protocols/segment-routing YANG schema element.
type Mpls_SignalingProtocols_SegmentRouting struct {
	AggregateSidCounter	map[Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounter_MplsLabel_Union]*Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounter	`path:"aggregate-sid-counters/aggregate-sid-counter" module:"openconfig-mpls"`
	Interface	map[string]*Mpls_SignalingProtocols_SegmentRouting_Interface	`path:"interfaces/interface" module:"openconfig-mpls"`
}

// IsYANGGoStruct ensures that Mpls_SignalingProtocols_SegmentRouting implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Mpls_SignalingProtocols_SegmentRouting) IsYANGGoStruct() {}


// Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounter represents the /openconfig-mpls/mpls/signaling-protocols/segment-routing/aggregate-sid-counters/aggregate-sid-counter YANG schema element.
type Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounter struct {
	InOctets	*uint64	`path:"state/in-octets" module:"openconfig-mpls"`
	InPkts	*uint64	`path:"state/in-pkts" module:"openconfig-mpls"`
	MplsLabel	Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounter_MplsLabel_Union	`path:"state/mpls-label|mpls-label" module:"openconfig-mpls"`
	OutOctets	*uint64	`path:"state/out-octets" module:"openconfig-mpls"`
	OutPkts	*uint64	`path:"state/out-pkts" module:"openconfig-mpls"`
}

// IsYANGGoStruct ensures that Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounter implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounter) IsYANGGoStruct() {}


// Mpls_SignalingProtocols_SegmentRouting_Interface represents the /openconfig-mpls/mpls/signaling-protocols/segment-routing/interfaces/interface YANG schema element.
type Mpls_SignalingProtocols_SegmentRouting_Interface struct {
	InOctets	*uint64	`path:"state/in-octets" module:"openconfig-mpls"`
	InPkts	*uint64	`path:"state/in-pkts" module:"openconfig-mpls"`
	InterfaceId	*string	`path:"config/interface-id|interface-id" module:"openconfig-mpls"`
	InterfaceRef	*Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceRef	`path:"interface-ref" module:"openconfig-mpls"`
	OutOctets	*uint64	`path:"state/out-octets" module:"openconfig-mpls"`
	OutPkts	*uint64	`path:"state/out-pkts" module:"openconfig-mpls"`
	SidCounter	map[Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_MplsLabel_Union]*Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter	`path:"sid-counters/sid-counter" module:"openconfig-mpls"`
}

// IsYANGGoStruct ensures that Mpls_SignalingProtocols_SegmentRouting_Interface implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Mpls_SignalingProtocols_SegmentRouting_Interface) IsYANGGoStruct() {}


// Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceRef represents the /openconfig-mpls/mpls/signaling-protocols/segment-routing/interfaces/interface/interface-ref YANG schema element.
type Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceRef struct {
	Interface	*string	`path:"config/interface" module:"openconfig-mpls"`
	Subinterface	*uint32	`path:"config/subinterface" module:"openconfig-mpls"`
}

// IsYANGGoStruct ensures that Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceRef implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceRef) IsYANGGoStruct() {}


// Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter represents the /openconfig-mpls/mpls/signaling-protocols/segment-routing/interfaces/interface/sid-counters/sid-counter YANG schema element.
type Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter struct {
	ForwardingClass	map[uint8]*Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_ForwardingClass	`path:"forwarding-classes/forwarding-class" module:"openconfig-mpls"`
	InOctets	*uint64	`path:"state/in-octets" module:"openconfig-mpls"`
	InPkts	*uint64	`path:"state/in-pkts" module:"openconfig-mpls"`
	MplsLabel	Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_MplsLabel_Union	`path:"state/mpls-label|mpls-label" module:"openconfig-mpls"`
	OutOctets	*uint64	`path:"state/out-octets" module:"openconfig-mpls"`
	OutPkts	*uint64	`path:"state/out-pkts" module:"openconfig-mpls"`
}

// IsYANGGoStruct ensures that Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter) IsYANGGoStruct() {}


// Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_ForwardingClass represents the /openconfig-mpls/mpls/signaling-protocols/segment-routing/interfaces/interface/sid-counters/sid-counter/forwarding-classes/forwarding-class YANG schema element.
type Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_ForwardingClass struct {
	Exp	*uint8	`path:"state/exp|exp" module:"openconfig-mpls"`
	InOctets	*uint64	`path:"state/in-octets" module:"openconfig-mpls"`
	InPkts	*uint64	`path:"state/in-pkts" module:"openconfig-mpls"`
	OutOctets	*uint64	`path:"state/out-octets" module:"openconfig-mpls"`
	OutPkts	*uint64	`path:"state/out-pkts" module:"openconfig-mpls"`
}

// IsYANGGoStruct ensures that Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_ForwardingClass implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_ForwardingClass) IsYANGGoStruct() {}


// Mpls_TeGlobalAttributes represents the /openconfig-mpls/mpls/te-global-attributes YANG schema element.
type Mpls_TeGlobalAttributes struct {
	AdminGroup	map[string]*Mpls_TeGlobalAttributes_AdminGroup	`path:"mpls-admin-groups/admin-group" module:"openconfig-mpls"`
	Srlg	map[string]*Mpls_TeGlobalAttributes_Srlg	`path:"srlgs/srlg" module:"openconfig-mpls"`
	TeLspTimers	*Mpls_TeGlobalAttributes_TeLspTimers	`path:"te-lsp-timers" module:"openconfig-mpls"`
}

// IsYANGGoStruct ensures that Mpls_TeGlobalAttributes implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Mpls_TeGlobalAttributes) IsYANGGoStruct() {}


// Mpls_TeGlobalAttributes_AdminGroup represents the /openconfig-mpls/mpls/te-global-attributes/mpls-admin-groups/admin-group YANG schema element.
type Mpls_TeGlobalAttributes_AdminGroup struct {
	AdminGroupName	*string	`path:"config/admin-group-name|admin-group-name" module:"openconfig-mpls"`
	BitPosition	*uint32	`path:"config/bit-position" module:"openconfig-mpls"`
}

// IsYANGGoStruct ensures that Mpls_TeGlobalAttributes_AdminGroup implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Mpls_TeGlobalAttributes_AdminGroup) IsYANGGoStruct() {}


// Mpls_TeGlobalAttributes_Srlg represents the /openconfig-mpls/mpls/te-global-attributes/srlgs/srlg YANG schema element.
type Mpls_TeGlobalAttributes_Srlg struct {
	Cost	*uint32	`path:"config/cost" module:"openconfig-mpls"`
	FloodingType	E_OpenconfigMpls_MplsSrlgFloodingType	`path:"config/flooding-type" module:"openconfig-mpls"`
	MembersList	map[string]*Mpls_TeGlobalAttributes_Srlg_MembersList	`path:"static-srlg-members/members-list" module:"openconfig-mpls"`
	Name	*string	`path:"config/name|name" module:"openconfig-mpls"`
	Value	*uint32	`path:"config/value" module:"openconfig-mpls"`
}

// IsYANGGoStruct ensures that Mpls_TeGlobalAttributes_Srlg implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Mpls_TeGlobalAttributes_Srlg) IsYANGGoStruct() {}


// Mpls_TeGlobalAttributes_Srlg_MembersList represents the /openconfig-mpls/mpls/te-global-attributes/srlgs/srlg/static-srlg-members/members-list YANG schema element.
type Mpls_TeGlobalAttributes_Srlg_MembersList struct {
	FromAddress	*string	`path:"config/from-address|from-address" module:"openconfig-mpls"`
	ToAddress	*string	`path:"config/to-address" module:"openconfig-mpls"`
}

// IsYANGGoStruct ensures that Mpls_TeGlobalAttributes_Srlg_MembersList implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Mpls_TeGlobalAttributes_Srlg_MembersList) IsYANGGoStruct() {}


// Mpls_TeGlobalAttributes_TeLspTimers represents the /openconfig-mpls/mpls/te-global-attributes/te-lsp-timers YANG schema element.
type Mpls_TeGlobalAttributes_TeLspTimers struct {
	CleanupDelay	*uint16	`path:"config/cleanup-delay" module:"openconfig-mpls"`
	InstallDelay	*uint16	`path:"config/install-delay" module:"openconfig-mpls"`
	ReoptimizeTimer	*uint16	`path:"config/reoptimize-timer" module:"openconfig-mpls"`
}

// IsYANGGoStruct ensures that Mpls_TeGlobalAttributes_TeLspTimers implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Mpls_TeGlobalAttributes_TeLspTimers) IsYANGGoStruct() {}


