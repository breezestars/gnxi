/*
Package gostruct is a generated package which contains definitions
of structs which represent a YANG schema. The generated schema can be
compressed by a series of transformations (compression was true
in this case).

This package was generated by /Users/cmo/.gvm/pkgsets/go1.10.2/global/src/github.com/openconfig/ygot/ygen/commongen.go
using the following YANG input files:
	- github.com/openconfig/public/release/models/interfaces/openconfig-if-aggregate.yang
	- github.com/openconfig/public/release/models/interfaces/openconfig-if-ethernet.yang
	- github.com/openconfig/public/release/models/interfaces/openconfig-interfaces.yang
	- github.com/openconfig/public/release/models/lldp/openconfig-lldp.yang
	- github.com/openconfig/public/release/models/network-instance/openconfig-network-instance.yang
	- github.com/openconfig/public/release/models/platform/openconfig-platform.yang
	- github.com/openconfig/public/release/models/system/openconfig-system.yang
	- github.com/openconfig/public/release/models/vlan/openconfig-vlan.yang
Imported modules were sourced from:
	- github.com/openconfig/public/...
	- github.com/YangModels/yang/...
*/
package gostruct


// Component represents the /openconfig-platform/components/component YANG schema element.
type Component struct {
	AllocatedPower	*uint32	`path:"state/allocated-power" module:"openconfig-platform"`
	Backplane	*Component_Backplane	`path:"backplane" module:"openconfig-platform"`
	Chassis	*Component_Chassis	`path:"chassis" module:"openconfig-platform"`
	Cpu	*Component_Cpu	`path:"cpu" module:"openconfig-platform"`
	Description	*string	`path:"state/description" module:"openconfig-platform"`
	Empty	*bool	`path:"state/empty" module:"openconfig-platform"`
	EquipmentFailure	*bool	`path:"state/equipment-failure" module:"openconfig-alarms"`
	EquipmentMismatch	*bool	`path:"state/equipment-mismatch" module:"openconfig-alarms"`
	Fabric	*Component_Fabric	`path:"fabric" module:"openconfig-platform"`
	Fan	*Component_Fan	`path:"fan" module:"openconfig-platform"`
	FirmwareVersion	*string	`path:"state/firmware-version" module:"openconfig-platform"`
	HardwareVersion	*string	`path:"state/hardware-version" module:"openconfig-platform"`
	Id	*string	`path:"state/id" module:"openconfig-platform"`
	IntegratedCircuit	*Component_IntegratedCircuit	`path:"integrated-circuit" module:"openconfig-platform"`
	Memory	*Component_Memory	`path:"state/memory" module:"openconfig-platform"`
	MfgDate	*string	`path:"state/mfg-date" module:"openconfig-platform"`
	MfgName	*string	`path:"state/mfg-name" module:"openconfig-platform"`
	Name	*string	`path:"config/name|name" module:"openconfig-platform"`
	OperStatus	E_OpenconfigPlatformTypes_COMPONENT_OPER_STATUS	`path:"state/oper-status" module:"openconfig-platform"`
	Parent	*string	`path:"state/parent" module:"openconfig-platform"`
	PartNo	*string	`path:"state/part-no" module:"openconfig-platform"`
	Port	*Component_Port	`path:"port" module:"openconfig-platform"`
	PowerSupply	*Component_PowerSupply	`path:"power-supply" module:"openconfig-platform"`
	Property	map[string]*Component_Property	`path:"properties/property" module:"openconfig-platform"`
	Removable	*bool	`path:"state/removable" module:"openconfig-platform"`
	SerialNo	*string	`path:"state/serial-no" module:"openconfig-platform"`
	SoftwareVersion	*string	`path:"state/software-version" module:"openconfig-platform"`
	Storage	*Component_Storage	`path:"storage" module:"openconfig-platform"`
	Subcomponent	map[string]*Component_Subcomponent	`path:"subcomponents/subcomponent" module:"openconfig-platform"`
	Temperature	*Component_Temperature	`path:"state/temperature" module:"openconfig-platform"`
	Type	Component_Type_Union	`path:"state/type" module:"openconfig-platform"`
	UsedPower	*uint32	`path:"state/used-power" module:"openconfig-platform"`
}

// IsYANGGoStruct ensures that Component implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Component) IsYANGGoStruct() {}


// Component_Backplane represents the /openconfig-platform/components/component/backplane YANG schema element.
type Component_Backplane struct {
}

// IsYANGGoStruct ensures that Component_Backplane implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Component_Backplane) IsYANGGoStruct() {}


// Component_Chassis represents the /openconfig-platform/components/component/chassis YANG schema element.
type Component_Chassis struct {
}

// IsYANGGoStruct ensures that Component_Chassis implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Component_Chassis) IsYANGGoStruct() {}


// Component_Cpu represents the /openconfig-platform/components/component/cpu YANG schema element.
type Component_Cpu struct {
}

// IsYANGGoStruct ensures that Component_Cpu implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Component_Cpu) IsYANGGoStruct() {}


// Component_Fabric represents the /openconfig-platform/components/component/fabric YANG schema element.
type Component_Fabric struct {
}

// IsYANGGoStruct ensures that Component_Fabric implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Component_Fabric) IsYANGGoStruct() {}


// Component_Fan represents the /openconfig-platform/components/component/fan YANG schema element.
type Component_Fan struct {
}

// IsYANGGoStruct ensures that Component_Fan implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Component_Fan) IsYANGGoStruct() {}


// Component_IntegratedCircuit represents the /openconfig-platform/components/component/integrated-circuit YANG schema element.
type Component_IntegratedCircuit struct {
}

// IsYANGGoStruct ensures that Component_IntegratedCircuit implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Component_IntegratedCircuit) IsYANGGoStruct() {}


// Component_Memory represents the /openconfig-platform/components/component/state/memory YANG schema element.
type Component_Memory struct {
	Available	*uint64	`path:"available" module:"openconfig-platform"`
	Utilized	*uint64	`path:"utilized" module:"openconfig-platform"`
}

// IsYANGGoStruct ensures that Component_Memory implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Component_Memory) IsYANGGoStruct() {}


// Component_Port represents the /openconfig-platform/components/component/port YANG schema element.
type Component_Port struct {
}

// IsYANGGoStruct ensures that Component_Port implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Component_Port) IsYANGGoStruct() {}


// Component_PowerSupply represents the /openconfig-platform/components/component/power-supply YANG schema element.
type Component_PowerSupply struct {
}

// IsYANGGoStruct ensures that Component_PowerSupply implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Component_PowerSupply) IsYANGGoStruct() {}


// Component_Property represents the /openconfig-platform/components/component/properties/property YANG schema element.
type Component_Property struct {
	Configurable	*bool	`path:"state/configurable" module:"openconfig-platform"`
	Name	*string	`path:"config/name|name" module:"openconfig-platform"`
	Value	Component_Property_Value_Union	`path:"config/value" module:"openconfig-platform"`
}

// IsYANGGoStruct ensures that Component_Property implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Component_Property) IsYANGGoStruct() {}


// Component_Storage represents the /openconfig-platform/components/component/storage YANG schema element.
type Component_Storage struct {
}

// IsYANGGoStruct ensures that Component_Storage implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Component_Storage) IsYANGGoStruct() {}


// Component_Subcomponent represents the /openconfig-platform/components/component/subcomponents/subcomponent YANG schema element.
type Component_Subcomponent struct {
	Name	*string	`path:"config/name|name" module:"openconfig-platform"`
}

// IsYANGGoStruct ensures that Component_Subcomponent implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Component_Subcomponent) IsYANGGoStruct() {}


// Component_Temperature represents the /openconfig-platform/components/component/state/temperature YANG schema element.
type Component_Temperature struct {
	AlarmSeverity	E_OpenconfigAlarmTypes_OPENCONFIG_ALARM_SEVERITY	`path:"alarm-severity" module:"openconfig-platform"`
	AlarmStatus	*bool	`path:"alarm-status" module:"openconfig-platform"`
	AlarmThreshold	*uint32	`path:"alarm-threshold" module:"openconfig-platform"`
	Avg	*float64	`path:"avg" module:"openconfig-platform"`
	Instant	*float64	`path:"instant" module:"openconfig-platform"`
	Interval	*uint64	`path:"interval" module:"openconfig-platform"`
	Max	*float64	`path:"max" module:"openconfig-platform"`
	MaxTime	*uint64	`path:"max-time" module:"openconfig-platform"`
	Min	*float64	`path:"min" module:"openconfig-platform"`
	MinTime	*uint64	`path:"min-time" module:"openconfig-platform"`
}

// IsYANGGoStruct ensures that Component_Temperature implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Component_Temperature) IsYANGGoStruct() {}


