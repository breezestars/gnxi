/*
Package gostruct is a generated package which contains definitions
of structs which represent a YANG schema. The generated schema can be
compressed by a series of transformations (compression was true
in this case).

This package was generated by /Users/cmo/.gvm/pkgsets/go1.10.2/global/src/github.com/openconfig/ygot/ygen/commongen.go
using the following YANG input files:
	- github.com/openconfig/public/release/models/interfaces/openconfig-if-aggregate.yang
	- github.com/openconfig/public/release/models/interfaces/openconfig-if-ethernet.yang
	- github.com/openconfig/public/release/models/interfaces/openconfig-interfaces.yang
	- github.com/openconfig/public/release/models/lldp/openconfig-lldp.yang
	- github.com/openconfig/public/release/models/network-instance/openconfig-network-instance.yang
	- github.com/openconfig/public/release/models/platform/openconfig-platform.yang
	- github.com/openconfig/public/release/models/system/openconfig-system.yang
	- github.com/openconfig/public/release/models/vlan/openconfig-vlan.yang
Imported modules were sourced from:
	- github.com/openconfig/public/...
	- github.com/YangModels/yang/...
*/
package gostruct


// Lldp represents the /openconfig-lldp/lldp YANG schema element.
type Lldp struct {
	ChassisId	*string	`path:"config/chassis-id" module:"openconfig-lldp"`
	ChassisIdType	E_OpenconfigLldp_ChassisIdType	`path:"config/chassis-id-type" module:"openconfig-lldp"`
	Counters	*Lldp_Counters	`path:"state/counters" module:"openconfig-lldp"`
	Enabled	*bool	`path:"config/enabled" module:"openconfig-lldp"`
	HelloTimer	*uint64	`path:"config/hello-timer" module:"openconfig-lldp"`
	Interface	map[string]*Lldp_Interface	`path:"interfaces/interface" module:"openconfig-lldp"`
	SuppressTlvAdvertisement	[]E_OpenconfigLldpTypes_LLDP_TLV	`path:"config/suppress-tlv-advertisement" module:"openconfig-lldp"`
	SystemDescription	*string	`path:"config/system-description" module:"openconfig-lldp"`
	SystemName	*string	`path:"config/system-name" module:"openconfig-lldp"`
}

// IsYANGGoStruct ensures that Lldp implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Lldp) IsYANGGoStruct() {}


// Lldp_Counters represents the /openconfig-lldp/lldp/state/counters YANG schema element.
type Lldp_Counters struct {
	EntriesAgedOut	*uint64	`path:"entries-aged-out" module:"openconfig-lldp"`
	FrameDiscard	*uint64	`path:"frame-discard" module:"openconfig-lldp"`
	FrameErrorIn	*uint64	`path:"frame-error-in" module:"openconfig-lldp"`
	FrameIn	*uint64	`path:"frame-in" module:"openconfig-lldp"`
	FrameOut	*uint64	`path:"frame-out" module:"openconfig-lldp"`
	LastClear	*string	`path:"last-clear" module:"openconfig-lldp"`
	TlvAccepted	*uint64	`path:"tlv-accepted" module:"openconfig-lldp"`
	TlvDiscard	*uint64	`path:"tlv-discard" module:"openconfig-lldp"`
	TlvUnknown	*uint64	`path:"tlv-unknown" module:"openconfig-lldp"`
}

// IsYANGGoStruct ensures that Lldp_Counters implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Lldp_Counters) IsYANGGoStruct() {}


// Lldp_Interface represents the /openconfig-lldp/lldp/interfaces/interface YANG schema element.
type Lldp_Interface struct {
	Counters	*Lldp_Interface_Counters	`path:"state/counters" module:"openconfig-lldp"`
	Enabled	*bool	`path:"config/enabled" module:"openconfig-lldp"`
	Name	*string	`path:"config/name|name" module:"openconfig-lldp"`
	Neighbor	map[string]*Lldp_Interface_Neighbor	`path:"neighbors/neighbor" module:"openconfig-lldp"`
}

// IsYANGGoStruct ensures that Lldp_Interface implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Lldp_Interface) IsYANGGoStruct() {}


// Lldp_Interface_Counters represents the /openconfig-lldp/lldp/interfaces/interface/state/counters YANG schema element.
type Lldp_Interface_Counters struct {
	FrameDiscard	*uint64	`path:"frame-discard" module:"openconfig-lldp"`
	FrameErrorIn	*uint64	`path:"frame-error-in" module:"openconfig-lldp"`
	FrameErrorOut	*uint64	`path:"frame-error-out" module:"openconfig-lldp"`
	FrameIn	*uint64	`path:"frame-in" module:"openconfig-lldp"`
	FrameOut	*uint64	`path:"frame-out" module:"openconfig-lldp"`
	LastClear	*string	`path:"last-clear" module:"openconfig-lldp"`
	TlvDiscard	*uint64	`path:"tlv-discard" module:"openconfig-lldp"`
	TlvUnknown	*uint64	`path:"tlv-unknown" module:"openconfig-lldp"`
}

// IsYANGGoStruct ensures that Lldp_Interface_Counters implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Lldp_Interface_Counters) IsYANGGoStruct() {}


// Lldp_Interface_Neighbor represents the /openconfig-lldp/lldp/interfaces/interface/neighbors/neighbor YANG schema element.
type Lldp_Interface_Neighbor struct {
	Age	*uint64	`path:"state/age" module:"openconfig-lldp"`
	Capability	map[E_OpenconfigLldpTypes_LLDP_SYSTEM_CAPABILITY]*Lldp_Interface_Neighbor_Capability	`path:"capabilities/capability" module:"openconfig-lldp"`
	ChassisId	*string	`path:"state/chassis-id" module:"openconfig-lldp"`
	ChassisIdType	E_OpenconfigLldp_ChassisIdType	`path:"state/chassis-id-type" module:"openconfig-lldp"`
	Id	*string	`path:"state/id|id" module:"openconfig-lldp"`
	LastUpdate	*int64	`path:"state/last-update" module:"openconfig-lldp"`
	ManagementAddress	*string	`path:"state/management-address" module:"openconfig-lldp"`
	ManagementAddressType	*string	`path:"state/management-address-type" module:"openconfig-lldp"`
	PortDescription	*string	`path:"state/port-description" module:"openconfig-lldp"`
	PortId	*string	`path:"state/port-id" module:"openconfig-lldp"`
	PortIdType	E_OpenconfigLldp_PortIdType	`path:"state/port-id-type" module:"openconfig-lldp"`
	SystemDescription	*string	`path:"state/system-description" module:"openconfig-lldp"`
	SystemName	*string	`path:"state/system-name" module:"openconfig-lldp"`
	Tlv	map[Lldp_Interface_Neighbor_Tlv_Key]*Lldp_Interface_Neighbor_Tlv	`path:"custom-tlvs/tlv" module:"openconfig-lldp"`
}

// IsYANGGoStruct ensures that Lldp_Interface_Neighbor implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Lldp_Interface_Neighbor) IsYANGGoStruct() {}

// Lldp_Interface_Neighbor_Tlv_Key represents the key for list Tlv of element /openconfig-lldp/lldp/interfaces/interface/neighbors/neighbor.
type Lldp_Interface_Neighbor_Tlv_Key struct {
	Type	int32	`path:"type"`
	Oui	string	`path:"oui"`
	OuiSubtype	string	`path:"oui-subtype"`
}


// Lldp_Interface_Neighbor_Capability represents the /openconfig-lldp/lldp/interfaces/interface/neighbors/neighbor/capabilities/capability YANG schema element.
type Lldp_Interface_Neighbor_Capability struct {
	Enabled	*bool	`path:"state/enabled" module:"openconfig-lldp"`
	Name	E_OpenconfigLldpTypes_LLDP_SYSTEM_CAPABILITY	`path:"state/name|name" module:"openconfig-lldp"`
}

// IsYANGGoStruct ensures that Lldp_Interface_Neighbor_Capability implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Lldp_Interface_Neighbor_Capability) IsYANGGoStruct() {}


// Lldp_Interface_Neighbor_Tlv represents the /openconfig-lldp/lldp/interfaces/interface/neighbors/neighbor/custom-tlvs/tlv YANG schema element.
type Lldp_Interface_Neighbor_Tlv struct {
	Oui	*string	`path:"state/oui|oui" module:"openconfig-lldp"`
	OuiSubtype	*string	`path:"state/oui-subtype|oui-subtype" module:"openconfig-lldp"`
	Type	*int32	`path:"state/type|type" module:"openconfig-lldp"`
	Value	Binary	`path:"state/value" module:"openconfig-lldp"`
}

// IsYANGGoStruct ensures that Lldp_Interface_Neighbor_Tlv implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Lldp_Interface_Neighbor_Tlv) IsYANGGoStruct() {}


// LocalRoutes represents the /openconfig-local-routing/local-routes YANG schema element.
type LocalRoutes struct {
	Aggregate	map[string]*LocalRoutes_Aggregate	`path:"local-aggregates/aggregate" module:"openconfig-local-routing"`
	Static	map[string]*LocalRoutes_Static	`path:"static-routes/static" module:"openconfig-local-routing"`
}

// IsYANGGoStruct ensures that LocalRoutes implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*LocalRoutes) IsYANGGoStruct() {}


// LocalRoutes_Aggregate represents the /openconfig-local-routing/local-routes/local-aggregates/aggregate YANG schema element.
type LocalRoutes_Aggregate struct {
	Discard	*bool	`path:"config/discard" module:"openconfig-local-routing"`
	Prefix	*string	`path:"config/prefix|prefix" module:"openconfig-local-routing"`
	SetTag	LocalRoutes_Aggregate_SetTag_Union	`path:"config/set-tag" module:"openconfig-local-routing"`
}

// IsYANGGoStruct ensures that LocalRoutes_Aggregate implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*LocalRoutes_Aggregate) IsYANGGoStruct() {}


// LocalRoutes_Static represents the /openconfig-local-routing/local-routes/static-routes/static YANG schema element.
type LocalRoutes_Static struct {
	NextHop	map[string]*LocalRoutes_Static_NextHop	`path:"next-hops/next-hop" module:"openconfig-local-routing"`
	Prefix	*string	`path:"config/prefix|prefix" module:"openconfig-local-routing"`
	SetTag	LocalRoutes_Static_SetTag_Union	`path:"config/set-tag" module:"openconfig-local-routing"`
}

// IsYANGGoStruct ensures that LocalRoutes_Static implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*LocalRoutes_Static) IsYANGGoStruct() {}


// LocalRoutes_Static_NextHop represents the /openconfig-local-routing/local-routes/static-routes/static/next-hops/next-hop YANG schema element.
type LocalRoutes_Static_NextHop struct {
	Index	*string	`path:"config/index|index" module:"openconfig-local-routing"`
	InterfaceRef	*LocalRoutes_Static_NextHop_InterfaceRef	`path:"interface-ref" module:"openconfig-local-routing"`
	Metric	*uint32	`path:"config/metric" module:"openconfig-local-routing"`
	NextHop	LocalRoutes_Static_NextHop_NextHop_Union	`path:"config/next-hop" module:"openconfig-local-routing"`
	Recurse	*bool	`path:"config/recurse" module:"openconfig-local-routing"`
}

// IsYANGGoStruct ensures that LocalRoutes_Static_NextHop implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*LocalRoutes_Static_NextHop) IsYANGGoStruct() {}


// LocalRoutes_Static_NextHop_InterfaceRef represents the /openconfig-local-routing/local-routes/static-routes/static/next-hops/next-hop/interface-ref YANG schema element.
type LocalRoutes_Static_NextHop_InterfaceRef struct {
	Interface	*string	`path:"config/interface" module:"openconfig-local-routing"`
	Subinterface	*uint32	`path:"config/subinterface" module:"openconfig-local-routing"`
}

// IsYANGGoStruct ensures that LocalRoutes_Static_NextHop_InterfaceRef implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*LocalRoutes_Static_NextHop_InterfaceRef) IsYANGGoStruct() {}


