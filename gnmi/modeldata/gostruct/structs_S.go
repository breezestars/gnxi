/*
Package gostruct is a generated package which contains definitions
of structs which represent a YANG schema. The generated schema can be
compressed by a series of transformations (compression was true
in this case).

This package was generated by /Users/cmo/.gvm/pkgsets/go1.10.2/global/src/github.com/openconfig/ygot/ygen/commongen.go
using the following YANG input files:
	- github.com/openconfig/public/release/models/interfaces/openconfig-if-aggregate.yang
	- github.com/openconfig/public/release/models/interfaces/openconfig-if-ethernet.yang
	- github.com/openconfig/public/release/models/interfaces/openconfig-interfaces.yang
	- github.com/openconfig/public/release/models/lldp/openconfig-lldp.yang
	- github.com/openconfig/public/release/models/network-instance/openconfig-network-instance.yang
	- github.com/openconfig/public/release/models/platform/openconfig-platform.yang
	- github.com/openconfig/public/release/models/system/openconfig-system.yang
	- github.com/openconfig/public/release/models/vlan/openconfig-vlan.yang
Imported modules were sourced from:
	- github.com/openconfig/public/...
	- github.com/YangModels/yang/...
*/
package gostruct


// System represents the /openconfig-system/system YANG schema element.
type System struct {
	Aaa	*System_Aaa	`path:"aaa" module:"openconfig-system"`
	Alarm	map[string]*System_Alarm	`path:"alarms/alarm" module:"openconfig-system"`
	BootTime	*uint64	`path:"state/boot-time" module:"openconfig-system"`
	Clock	*System_Clock	`path:"clock" module:"openconfig-system"`
	Cpu	map[System_Cpu_Index_Union]*System_Cpu	`path:"cpus/cpu" module:"openconfig-system"`
	CurrentDatetime	*string	`path:"state/current-datetime" module:"openconfig-system"`
	Dns	*System_Dns	`path:"dns" module:"openconfig-system"`
	DomainName	*string	`path:"config/domain-name" module:"openconfig-system"`
	Hostname	*string	`path:"config/hostname" module:"openconfig-system"`
	Logging	*System_Logging	`path:"logging" module:"openconfig-system"`
	LoginBanner	*string	`path:"config/login-banner" module:"openconfig-system"`
	Memory	*System_Memory	`path:"memory" module:"openconfig-system"`
	MotdBanner	*string	`path:"config/motd-banner" module:"openconfig-system"`
	Ntp	*System_Ntp	`path:"ntp" module:"openconfig-system"`
	Process	map[uint64]*System_Process	`path:"processes/process" module:"openconfig-system"`
	SshServer	*System_SshServer	`path:"ssh-server" module:"openconfig-system"`
	TelnetServer	*System_TelnetServer	`path:"telnet-server" module:"openconfig-system"`
}

// IsYANGGoStruct ensures that System implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*System) IsYANGGoStruct() {}


// System_Aaa represents the /openconfig-system/system/aaa YANG schema element.
type System_Aaa struct {
	Accounting	*System_Aaa_Accounting	`path:"accounting" module:"openconfig-system"`
	Authentication	*System_Aaa_Authentication	`path:"authentication" module:"openconfig-system"`
	Authorization	*System_Aaa_Authorization	`path:"authorization" module:"openconfig-system"`
	ServerGroup	map[string]*System_Aaa_ServerGroup	`path:"server-groups/server-group" module:"openconfig-system"`
}

// IsYANGGoStruct ensures that System_Aaa implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*System_Aaa) IsYANGGoStruct() {}


// System_Aaa_Accounting represents the /openconfig-system/system/aaa/accounting YANG schema element.
type System_Aaa_Accounting struct {
	AccountingMethod	[]System_Aaa_Accounting_AccountingMethod_Union	`path:"config/accounting-method" module:"openconfig-system"`
	Event	map[E_OpenconfigAaaTypes_AAA_ACCOUNTING_EVENT_TYPE]*System_Aaa_Accounting_Event	`path:"events/event" module:"openconfig-system"`
}

// IsYANGGoStruct ensures that System_Aaa_Accounting implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*System_Aaa_Accounting) IsYANGGoStruct() {}


// System_Aaa_Accounting_Event represents the /openconfig-system/system/aaa/accounting/events/event YANG schema element.
type System_Aaa_Accounting_Event struct {
	EventType	E_OpenconfigAaaTypes_AAA_ACCOUNTING_EVENT_TYPE	`path:"config/event-type|event-type" module:"openconfig-system"`
	Record	E_OpenconfigAaa_Event_Record	`path:"config/record" module:"openconfig-system"`
}

// IsYANGGoStruct ensures that System_Aaa_Accounting_Event implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*System_Aaa_Accounting_Event) IsYANGGoStruct() {}


// System_Aaa_Authentication represents the /openconfig-system/system/aaa/authentication YANG schema element.
type System_Aaa_Authentication struct {
	AdminUser	*System_Aaa_Authentication_AdminUser	`path:"admin-user" module:"openconfig-system"`
	AuthenticationMethod	[]System_Aaa_Authentication_AuthenticationMethod_Union	`path:"config/authentication-method" module:"openconfig-system"`
	User	map[string]*System_Aaa_Authentication_User	`path:"users/user" module:"openconfig-system"`
}

// IsYANGGoStruct ensures that System_Aaa_Authentication implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*System_Aaa_Authentication) IsYANGGoStruct() {}


// System_Aaa_Authentication_AdminUser represents the /openconfig-system/system/aaa/authentication/admin-user YANG schema element.
type System_Aaa_Authentication_AdminUser struct {
	AdminPassword	*string	`path:"config/admin-password" module:"openconfig-system"`
	AdminPasswordHashed	*string	`path:"config/admin-password-hashed" module:"openconfig-system"`
	AdminUsername	*string	`path:"state/admin-username" module:"openconfig-system"`
}

// IsYANGGoStruct ensures that System_Aaa_Authentication_AdminUser implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*System_Aaa_Authentication_AdminUser) IsYANGGoStruct() {}


// System_Aaa_Authentication_User represents the /openconfig-system/system/aaa/authentication/users/user YANG schema element.
type System_Aaa_Authentication_User struct {
	Password	*string	`path:"config/password" module:"openconfig-system"`
	PasswordHashed	*string	`path:"config/password-hashed" module:"openconfig-system"`
	Role	System_Aaa_Authentication_User_Role_Union	`path:"config/role" module:"openconfig-system"`
	SshKey	*string	`path:"config/ssh-key" module:"openconfig-system"`
	Username	*string	`path:"config/username|username" module:"openconfig-system"`
}

// IsYANGGoStruct ensures that System_Aaa_Authentication_User implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*System_Aaa_Authentication_User) IsYANGGoStruct() {}


// System_Aaa_Authorization represents the /openconfig-system/system/aaa/authorization YANG schema element.
type System_Aaa_Authorization struct {
	AuthorizationMethod	[]System_Aaa_Authorization_AuthorizationMethod_Union	`path:"config/authorization-method" module:"openconfig-system"`
	Event	map[E_OpenconfigAaaTypes_AAA_AUTHORIZATION_EVENT_TYPE]*System_Aaa_Authorization_Event	`path:"events/event" module:"openconfig-system"`
}

// IsYANGGoStruct ensures that System_Aaa_Authorization implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*System_Aaa_Authorization) IsYANGGoStruct() {}


// System_Aaa_Authorization_Event represents the /openconfig-system/system/aaa/authorization/events/event YANG schema element.
type System_Aaa_Authorization_Event struct {
	EventType	E_OpenconfigAaaTypes_AAA_AUTHORIZATION_EVENT_TYPE	`path:"config/event-type|event-type" module:"openconfig-system"`
}

// IsYANGGoStruct ensures that System_Aaa_Authorization_Event implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*System_Aaa_Authorization_Event) IsYANGGoStruct() {}


// System_Aaa_ServerGroup represents the /openconfig-system/system/aaa/server-groups/server-group YANG schema element.
type System_Aaa_ServerGroup struct {
	Name	*string	`path:"config/name|name" module:"openconfig-system"`
	Server	map[string]*System_Aaa_ServerGroup_Server	`path:"servers/server" module:"openconfig-system"`
	Type	E_OpenconfigAaaTypes_AAA_SERVER_TYPE	`path:"config/type" module:"openconfig-system"`
}

// IsYANGGoStruct ensures that System_Aaa_ServerGroup implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*System_Aaa_ServerGroup) IsYANGGoStruct() {}


// System_Aaa_ServerGroup_Server represents the /openconfig-system/system/aaa/server-groups/server-group/servers/server YANG schema element.
type System_Aaa_ServerGroup_Server struct {
	Address	*string	`path:"config/address|address" module:"openconfig-system"`
	ConnectionAborts	*uint64	`path:"state/connection-aborts" module:"openconfig-system"`
	ConnectionCloses	*uint64	`path:"state/connection-closes" module:"openconfig-system"`
	ConnectionFailures	*uint64	`path:"state/connection-failures" module:"openconfig-system"`
	ConnectionOpens	*uint64	`path:"state/connection-opens" module:"openconfig-system"`
	ConnectionTimeouts	*uint64	`path:"state/connection-timeouts" module:"openconfig-system"`
	ErrorsReceived	*uint64	`path:"state/errors-received" module:"openconfig-system"`
	MessagesReceived	*uint64	`path:"state/messages-received" module:"openconfig-system"`
	MessagesSent	*uint64	`path:"state/messages-sent" module:"openconfig-system"`
	Name	*string	`path:"config/name" module:"openconfig-system"`
	Radius	*System_Aaa_ServerGroup_Server_Radius	`path:"radius" module:"openconfig-system"`
	Tacacs	*System_Aaa_ServerGroup_Server_Tacacs	`path:"tacacs" module:"openconfig-system"`
	Timeout	*uint16	`path:"config/timeout" module:"openconfig-system"`
}

// IsYANGGoStruct ensures that System_Aaa_ServerGroup_Server implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*System_Aaa_ServerGroup_Server) IsYANGGoStruct() {}


// System_Aaa_ServerGroup_Server_Radius represents the /openconfig-system/system/aaa/server-groups/server-group/servers/server/radius YANG schema element.
type System_Aaa_ServerGroup_Server_Radius struct {
	AcctPort	*uint16	`path:"config/acct-port" module:"openconfig-system"`
	AuthPort	*uint16	`path:"config/auth-port" module:"openconfig-system"`
	Counters	*System_Aaa_ServerGroup_Server_Radius_Counters	`path:"state/counters" module:"openconfig-system"`
	RetransmitAttempts	*uint8	`path:"config/retransmit-attempts" module:"openconfig-system"`
	SecretKey	*string	`path:"config/secret-key" module:"openconfig-system"`
	SourceAddress	*string	`path:"config/source-address" module:"openconfig-system"`
}

// IsYANGGoStruct ensures that System_Aaa_ServerGroup_Server_Radius implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*System_Aaa_ServerGroup_Server_Radius) IsYANGGoStruct() {}


// System_Aaa_ServerGroup_Server_Radius_Counters represents the /openconfig-system/system/aaa/server-groups/server-group/servers/server/radius/state/counters YANG schema element.
type System_Aaa_ServerGroup_Server_Radius_Counters struct {
	AccessAccepts	*uint64	`path:"access-accepts" module:"openconfig-system"`
	AccessRejects	*uint64	`path:"access-rejects" module:"openconfig-system"`
	RetriedAccessRequests	*uint64	`path:"retried-access-requests" module:"openconfig-system"`
	TimeoutAccessRequests	*uint64	`path:"timeout-access-requests" module:"openconfig-system"`
}

// IsYANGGoStruct ensures that System_Aaa_ServerGroup_Server_Radius_Counters implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*System_Aaa_ServerGroup_Server_Radius_Counters) IsYANGGoStruct() {}


// System_Aaa_ServerGroup_Server_Tacacs represents the /openconfig-system/system/aaa/server-groups/server-group/servers/server/tacacs YANG schema element.
type System_Aaa_ServerGroup_Server_Tacacs struct {
	Port	*uint16	`path:"config/port" module:"openconfig-system"`
	SecretKey	*string	`path:"config/secret-key" module:"openconfig-system"`
	SourceAddress	*string	`path:"config/source-address" module:"openconfig-system"`
}

// IsYANGGoStruct ensures that System_Aaa_ServerGroup_Server_Tacacs implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*System_Aaa_ServerGroup_Server_Tacacs) IsYANGGoStruct() {}


// System_Alarm represents the /openconfig-system/system/alarms/alarm YANG schema element.
type System_Alarm struct {
	Id	*string	`path:"state/id|id" module:"openconfig-system"`
	Resource	*string	`path:"state/resource" module:"openconfig-system"`
	Severity	E_OpenconfigAlarmTypes_OPENCONFIG_ALARM_SEVERITY	`path:"state/severity" module:"openconfig-system"`
	Text	*string	`path:"state/text" module:"openconfig-system"`
	TimeCreated	*uint64	`path:"state/time-created" module:"openconfig-system"`
	TypeId	System_Alarm_TypeId_Union	`path:"state/type-id" module:"openconfig-system"`
}

// IsYANGGoStruct ensures that System_Alarm implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*System_Alarm) IsYANGGoStruct() {}


// System_Clock represents the /openconfig-system/system/clock YANG schema element.
type System_Clock struct {
	TimezoneName	*string	`path:"config/timezone-name" module:"openconfig-system"`
}

// IsYANGGoStruct ensures that System_Clock implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*System_Clock) IsYANGGoStruct() {}


// System_Cpu represents the /openconfig-system/system/cpus/cpu YANG schema element.
type System_Cpu struct {
	HardwareInterrupt	*System_Cpu_HardwareInterrupt	`path:"state/hardware-interrupt" module:"openconfig-system"`
	Idle	*System_Cpu_Idle	`path:"state/idle" module:"openconfig-system"`
	Index	System_Cpu_Index_Union	`path:"state/index|index" module:"openconfig-system"`
	Kernel	*System_Cpu_Kernel	`path:"state/kernel" module:"openconfig-system"`
	Nice	*System_Cpu_Nice	`path:"state/nice" module:"openconfig-system"`
	SoftwareInterrupt	*System_Cpu_SoftwareInterrupt	`path:"state/software-interrupt" module:"openconfig-system"`
	Total	*System_Cpu_Total	`path:"state/total" module:"openconfig-system"`
	User	*System_Cpu_User	`path:"state/user" module:"openconfig-system"`
	Wait	*System_Cpu_Wait	`path:"state/wait" module:"openconfig-system"`
}

// IsYANGGoStruct ensures that System_Cpu implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*System_Cpu) IsYANGGoStruct() {}


// System_Cpu_HardwareInterrupt represents the /openconfig-system/system/cpus/cpu/state/hardware-interrupt YANG schema element.
type System_Cpu_HardwareInterrupt struct {
	Avg	*uint8	`path:"avg" module:"openconfig-system"`
	Instant	*uint8	`path:"instant" module:"openconfig-system"`
	Interval	*uint64	`path:"interval" module:"openconfig-system"`
	Max	*uint8	`path:"max" module:"openconfig-system"`
	MaxTime	*uint64	`path:"max-time" module:"openconfig-system"`
	Min	*uint8	`path:"min" module:"openconfig-system"`
	MinTime	*uint64	`path:"min-time" module:"openconfig-system"`
}

// IsYANGGoStruct ensures that System_Cpu_HardwareInterrupt implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*System_Cpu_HardwareInterrupt) IsYANGGoStruct() {}


// System_Cpu_Idle represents the /openconfig-system/system/cpus/cpu/state/idle YANG schema element.
type System_Cpu_Idle struct {
	Avg	*uint8	`path:"avg" module:"openconfig-system"`
	Instant	*uint8	`path:"instant" module:"openconfig-system"`
	Interval	*uint64	`path:"interval" module:"openconfig-system"`
	Max	*uint8	`path:"max" module:"openconfig-system"`
	MaxTime	*uint64	`path:"max-time" module:"openconfig-system"`
	Min	*uint8	`path:"min" module:"openconfig-system"`
	MinTime	*uint64	`path:"min-time" module:"openconfig-system"`
}

// IsYANGGoStruct ensures that System_Cpu_Idle implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*System_Cpu_Idle) IsYANGGoStruct() {}


// System_Cpu_Kernel represents the /openconfig-system/system/cpus/cpu/state/kernel YANG schema element.
type System_Cpu_Kernel struct {
	Avg	*uint8	`path:"avg" module:"openconfig-system"`
	Instant	*uint8	`path:"instant" module:"openconfig-system"`
	Interval	*uint64	`path:"interval" module:"openconfig-system"`
	Max	*uint8	`path:"max" module:"openconfig-system"`
	MaxTime	*uint64	`path:"max-time" module:"openconfig-system"`
	Min	*uint8	`path:"min" module:"openconfig-system"`
	MinTime	*uint64	`path:"min-time" module:"openconfig-system"`
}

// IsYANGGoStruct ensures that System_Cpu_Kernel implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*System_Cpu_Kernel) IsYANGGoStruct() {}


// System_Cpu_Nice represents the /openconfig-system/system/cpus/cpu/state/nice YANG schema element.
type System_Cpu_Nice struct {
	Avg	*uint8	`path:"avg" module:"openconfig-system"`
	Instant	*uint8	`path:"instant" module:"openconfig-system"`
	Interval	*uint64	`path:"interval" module:"openconfig-system"`
	Max	*uint8	`path:"max" module:"openconfig-system"`
	MaxTime	*uint64	`path:"max-time" module:"openconfig-system"`
	Min	*uint8	`path:"min" module:"openconfig-system"`
	MinTime	*uint64	`path:"min-time" module:"openconfig-system"`
}

// IsYANGGoStruct ensures that System_Cpu_Nice implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*System_Cpu_Nice) IsYANGGoStruct() {}


// System_Cpu_SoftwareInterrupt represents the /openconfig-system/system/cpus/cpu/state/software-interrupt YANG schema element.
type System_Cpu_SoftwareInterrupt struct {
	Avg	*uint8	`path:"avg" module:"openconfig-system"`
	Instant	*uint8	`path:"instant" module:"openconfig-system"`
	Interval	*uint64	`path:"interval" module:"openconfig-system"`
	Max	*uint8	`path:"max" module:"openconfig-system"`
	MaxTime	*uint64	`path:"max-time" module:"openconfig-system"`
	Min	*uint8	`path:"min" module:"openconfig-system"`
	MinTime	*uint64	`path:"min-time" module:"openconfig-system"`
}

// IsYANGGoStruct ensures that System_Cpu_SoftwareInterrupt implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*System_Cpu_SoftwareInterrupt) IsYANGGoStruct() {}


// System_Cpu_Total represents the /openconfig-system/system/cpus/cpu/state/total YANG schema element.
type System_Cpu_Total struct {
	Avg	*uint8	`path:"avg" module:"openconfig-system"`
	Instant	*uint8	`path:"instant" module:"openconfig-system"`
	Interval	*uint64	`path:"interval" module:"openconfig-system"`
	Max	*uint8	`path:"max" module:"openconfig-system"`
	MaxTime	*uint64	`path:"max-time" module:"openconfig-system"`
	Min	*uint8	`path:"min" module:"openconfig-system"`
	MinTime	*uint64	`path:"min-time" module:"openconfig-system"`
}

// IsYANGGoStruct ensures that System_Cpu_Total implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*System_Cpu_Total) IsYANGGoStruct() {}


// System_Cpu_User represents the /openconfig-system/system/cpus/cpu/state/user YANG schema element.
type System_Cpu_User struct {
	Avg	*uint8	`path:"avg" module:"openconfig-system"`
	Instant	*uint8	`path:"instant" module:"openconfig-system"`
	Interval	*uint64	`path:"interval" module:"openconfig-system"`
	Max	*uint8	`path:"max" module:"openconfig-system"`
	MaxTime	*uint64	`path:"max-time" module:"openconfig-system"`
	Min	*uint8	`path:"min" module:"openconfig-system"`
	MinTime	*uint64	`path:"min-time" module:"openconfig-system"`
}

// IsYANGGoStruct ensures that System_Cpu_User implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*System_Cpu_User) IsYANGGoStruct() {}


// System_Cpu_Wait represents the /openconfig-system/system/cpus/cpu/state/wait YANG schema element.
type System_Cpu_Wait struct {
	Avg	*uint8	`path:"avg" module:"openconfig-system"`
	Instant	*uint8	`path:"instant" module:"openconfig-system"`
	Interval	*uint64	`path:"interval" module:"openconfig-system"`
	Max	*uint8	`path:"max" module:"openconfig-system"`
	MaxTime	*uint64	`path:"max-time" module:"openconfig-system"`
	Min	*uint8	`path:"min" module:"openconfig-system"`
	MinTime	*uint64	`path:"min-time" module:"openconfig-system"`
}

// IsYANGGoStruct ensures that System_Cpu_Wait implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*System_Cpu_Wait) IsYANGGoStruct() {}


// System_Dns represents the /openconfig-system/system/dns YANG schema element.
type System_Dns struct {
	HostEntry	map[string]*System_Dns_HostEntry	`path:"host-entries/host-entry" module:"openconfig-system"`
	Search	[]string	`path:"config/search" module:"openconfig-system"`
	Server	map[string]*System_Dns_Server	`path:"servers/server" module:"openconfig-system"`
}

// IsYANGGoStruct ensures that System_Dns implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*System_Dns) IsYANGGoStruct() {}


// System_Dns_HostEntry represents the /openconfig-system/system/dns/host-entries/host-entry YANG schema element.
type System_Dns_HostEntry struct {
	Alias	[]string	`path:"config/alias" module:"openconfig-system"`
	Hostname	*string	`path:"config/hostname|hostname" module:"openconfig-system"`
	Ipv4Address	[]string	`path:"config/ipv4-address" module:"openconfig-system"`
	Ipv6Address	[]string	`path:"config/ipv6-address" module:"openconfig-system"`
}

// IsYANGGoStruct ensures that System_Dns_HostEntry implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*System_Dns_HostEntry) IsYANGGoStruct() {}


// System_Dns_Server represents the /openconfig-system/system/dns/servers/server YANG schema element.
type System_Dns_Server struct {
	Address	*string	`path:"config/address|address" module:"openconfig-system"`
	Port	*uint16	`path:"config/port" module:"openconfig-system"`
}

// IsYANGGoStruct ensures that System_Dns_Server implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*System_Dns_Server) IsYANGGoStruct() {}


// System_Logging represents the /openconfig-system/system/logging YANG schema element.
type System_Logging struct {
	Console	*System_Logging_Console	`path:"console" module:"openconfig-system"`
	RemoteServer	map[string]*System_Logging_RemoteServer	`path:"remote-servers/remote-server" module:"openconfig-system"`
}

// IsYANGGoStruct ensures that System_Logging implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*System_Logging) IsYANGGoStruct() {}


// System_Logging_Console represents the /openconfig-system/system/logging/console YANG schema element.
type System_Logging_Console struct {
	Selector	map[System_Logging_Console_Selector_Key]*System_Logging_Console_Selector	`path:"selectors/selector" module:"openconfig-system"`
}

// IsYANGGoStruct ensures that System_Logging_Console implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*System_Logging_Console) IsYANGGoStruct() {}

// System_Logging_Console_Selector_Key represents the key for list Selector of element /openconfig-system/system/logging/console.
type System_Logging_Console_Selector_Key struct {
	Facility	E_OpenconfigSystemLogging_SYSLOG_FACILITY	`path:"facility"`
	Severity	E_OpenconfigSystemLogging_SyslogSeverity	`path:"severity"`
}


// System_Logging_Console_Selector represents the /openconfig-system/system/logging/console/selectors/selector YANG schema element.
type System_Logging_Console_Selector struct {
	Facility	E_OpenconfigSystemLogging_SYSLOG_FACILITY	`path:"config/facility|facility" module:"openconfig-system"`
	Severity	E_OpenconfigSystemLogging_SyslogSeverity	`path:"config/severity|severity" module:"openconfig-system"`
}

// IsYANGGoStruct ensures that System_Logging_Console_Selector implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*System_Logging_Console_Selector) IsYANGGoStruct() {}


// System_Logging_RemoteServer represents the /openconfig-system/system/logging/remote-servers/remote-server YANG schema element.
type System_Logging_RemoteServer struct {
	Host	*string	`path:"config/host|host" module:"openconfig-system"`
	RemotePort	*uint16	`path:"config/remote-port" module:"openconfig-system"`
	Selector	map[System_Logging_RemoteServer_Selector_Key]*System_Logging_RemoteServer_Selector	`path:"selectors/selector" module:"openconfig-system"`
	SourceAddress	*string	`path:"config/source-address" module:"openconfig-system"`
}

// IsYANGGoStruct ensures that System_Logging_RemoteServer implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*System_Logging_RemoteServer) IsYANGGoStruct() {}

// System_Logging_RemoteServer_Selector_Key represents the key for list Selector of element /openconfig-system/system/logging/remote-servers/remote-server.
type System_Logging_RemoteServer_Selector_Key struct {
	Facility	E_OpenconfigSystemLogging_SYSLOG_FACILITY	`path:"facility"`
	Severity	E_OpenconfigSystemLogging_SyslogSeverity	`path:"severity"`
}


// System_Logging_RemoteServer_Selector represents the /openconfig-system/system/logging/remote-servers/remote-server/selectors/selector YANG schema element.
type System_Logging_RemoteServer_Selector struct {
	Facility	E_OpenconfigSystemLogging_SYSLOG_FACILITY	`path:"config/facility|facility" module:"openconfig-system"`
	Severity	E_OpenconfigSystemLogging_SyslogSeverity	`path:"config/severity|severity" module:"openconfig-system"`
}

// IsYANGGoStruct ensures that System_Logging_RemoteServer_Selector implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*System_Logging_RemoteServer_Selector) IsYANGGoStruct() {}


// System_Memory represents the /openconfig-system/system/memory YANG schema element.
type System_Memory struct {
	Physical	*uint64	`path:"state/physical" module:"openconfig-system"`
	Reserved	*uint64	`path:"state/reserved" module:"openconfig-system"`
}

// IsYANGGoStruct ensures that System_Memory implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*System_Memory) IsYANGGoStruct() {}


// System_Ntp represents the /openconfig-system/system/ntp YANG schema element.
type System_Ntp struct {
	AuthMismatch	*uint64	`path:"state/auth-mismatch" module:"openconfig-system"`
	EnableNtpAuth	*bool	`path:"config/enable-ntp-auth" module:"openconfig-system"`
	Enabled	*bool	`path:"config/enabled" module:"openconfig-system"`
	NtpKey	map[uint16]*System_Ntp_NtpKey	`path:"ntp-keys/ntp-key" module:"openconfig-system"`
	NtpSourceAddress	*string	`path:"config/ntp-source-address" module:"openconfig-system"`
	Server	map[string]*System_Ntp_Server	`path:"servers/server" module:"openconfig-system"`
}

// IsYANGGoStruct ensures that System_Ntp implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*System_Ntp) IsYANGGoStruct() {}


// System_Ntp_NtpKey represents the /openconfig-system/system/ntp/ntp-keys/ntp-key YANG schema element.
type System_Ntp_NtpKey struct {
	KeyId	*uint16	`path:"config/key-id|key-id" module:"openconfig-system"`
	KeyType	E_OpenconfigSystem_NTP_AUTH_TYPE	`path:"config/key-type" module:"openconfig-system"`
	KeyValue	*string	`path:"config/key-value" module:"openconfig-system"`
}

// IsYANGGoStruct ensures that System_Ntp_NtpKey implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*System_Ntp_NtpKey) IsYANGGoStruct() {}


// System_Ntp_Server represents the /openconfig-system/system/ntp/servers/server YANG schema element.
type System_Ntp_Server struct {
	Address	*string	`path:"config/address|address" module:"openconfig-system"`
	AssociationType	E_OpenconfigSystem_Server_AssociationType	`path:"config/association-type" module:"openconfig-system"`
	Iburst	*bool	`path:"config/iburst" module:"openconfig-system"`
	Offset	*uint64	`path:"state/offset" module:"openconfig-system"`
	PollInterval	*uint32	`path:"state/poll-interval" module:"openconfig-system"`
	Port	*uint16	`path:"config/port" module:"openconfig-system"`
	Prefer	*bool	`path:"config/prefer" module:"openconfig-system"`
	RootDelay	*uint32	`path:"state/root-delay" module:"openconfig-system"`
	RootDispersion	*uint64	`path:"state/root-dispersion" module:"openconfig-system"`
	Stratum	*uint8	`path:"state/stratum" module:"openconfig-system"`
	Version	*uint8	`path:"config/version" module:"openconfig-system"`
}

// IsYANGGoStruct ensures that System_Ntp_Server implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*System_Ntp_Server) IsYANGGoStruct() {}


// System_Process represents the /openconfig-system/system/processes/process YANG schema element.
type System_Process struct {
	Args	[]string	`path:"state/args" module:"openconfig-system"`
	CpuUsageSystem	*uint64	`path:"state/cpu-usage-system" module:"openconfig-system"`
	CpuUsageUser	*uint64	`path:"state/cpu-usage-user" module:"openconfig-system"`
	CpuUtilization	*uint8	`path:"state/cpu-utilization" module:"openconfig-system"`
	MemoryUsage	*uint64	`path:"state/memory-usage" module:"openconfig-system"`
	MemoryUtilization	*uint8	`path:"state/memory-utilization" module:"openconfig-system"`
	Name	*string	`path:"state/name" module:"openconfig-system"`
	Pid	*uint64	`path:"state/pid|pid" module:"openconfig-system"`
	StartTime	*uint64	`path:"state/start-time" module:"openconfig-system"`
	Uptime	*uint64	`path:"state/uptime" module:"openconfig-system"`
}

// IsYANGGoStruct ensures that System_Process implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*System_Process) IsYANGGoStruct() {}


// System_SshServer represents the /openconfig-system/system/ssh-server YANG schema element.
type System_SshServer struct {
	Enable	*bool	`path:"config/enable" module:"openconfig-system"`
	ProtocolVersion	E_OpenconfigSystemTerminal_SshServer_ProtocolVersion	`path:"config/protocol-version" module:"openconfig-system"`
	RateLimit	*uint16	`path:"config/rate-limit" module:"openconfig-system"`
	SessionLimit	*uint16	`path:"config/session-limit" module:"openconfig-system"`
	Timeout	*uint16	`path:"config/timeout" module:"openconfig-system"`
}

// IsYANGGoStruct ensures that System_SshServer implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*System_SshServer) IsYANGGoStruct() {}


// System_TelnetServer represents the /openconfig-system/system/telnet-server YANG schema element.
type System_TelnetServer struct {
	Enable	*bool	`path:"config/enable" module:"openconfig-system"`
	RateLimit	*uint16	`path:"config/rate-limit" module:"openconfig-system"`
	SessionLimit	*uint16	`path:"config/session-limit" module:"openconfig-system"`
	Timeout	*uint16	`path:"config/timeout" module:"openconfig-system"`
}

// IsYANGGoStruct ensures that System_TelnetServer implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*System_TelnetServer) IsYANGGoStruct() {}


