/*
Package gostruct is a generated package which contains definitions
of structs which represent a YANG schema. The generated schema can be
compressed by a series of transformations (compression was false
in this case).

This package was generated by /Users/cmo/.gvm/pkgsets/go1.10.2/global/src/github.com/openconfig/ygot/ygen/commongen.go
using the following YANG input files:
	- github.com/openconfig/public/release/models/interfaces/openconfig-if-aggregate.yang
	- github.com/openconfig/public/release/models/interfaces/openconfig-if-ethernet.yang
	- github.com/openconfig/public/release/models/interfaces/openconfig-interfaces.yang
	- github.com/openconfig/public/release/models/lacp/openconfig-lacp.yang
	- github.com/openconfig/public/release/models/lldp/openconfig-lldp.yang
	- github.com/openconfig/public/release/models/network-instance/openconfig-network-instance.yang
	- github.com/openconfig/public/release/models/platform/openconfig-platform.yang
	- github.com/openconfig/public/release/models/system/openconfig-system.yang
	- github.com/openconfig/public/release/models/vlan/openconfig-vlan.yang
Imported modules were sourced from:
	- github.com/openconfig/public/...
	- github.com/YangModels/yang/...
*/
package gostruct

import (
	"fmt"
)

// OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config_Protocol_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-acl/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv4/config/protocol within the YANG schema.
type OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config_Protocol_Union interface {
	Is_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config_Protocol_Union()
}

// OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config_Protocol_Union_E_OpenconfigPacketMatchTypes_IP_PROTOCOL is used when /openconfig-acl/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv4/config/protocol
// is to be set to a E_OpenconfigPacketMatchTypes_IP_PROTOCOL value.
type OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config_Protocol_Union_E_OpenconfigPacketMatchTypes_IP_PROTOCOL struct {
	E_OpenconfigPacketMatchTypes_IP_PROTOCOL E_OpenconfigPacketMatchTypes_IP_PROTOCOL
}

// Is_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config_Protocol_Union ensures that OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config_Protocol_Union_E_OpenconfigPacketMatchTypes_IP_PROTOCOL
// implements the OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config_Protocol_Union interface.
func (*OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config_Protocol_Union_E_OpenconfigPacketMatchTypes_IP_PROTOCOL) Is_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config_Protocol_Union() {}

// OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config_Protocol_Union_Uint8 is used when /openconfig-acl/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv4/config/protocol
// is to be set to a uint8 value.
type OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config_Protocol_Union_Uint8 struct {
	Uint8 uint8
}

// Is_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config_Protocol_Union ensures that OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config_Protocol_Union_Uint8
// implements the OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config_Protocol_Union interface.
func (*OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config_Protocol_Union_Uint8) Is_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config_Protocol_Union() {}

// To_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config_Protocol_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config_Protocol_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config) To_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config_Protocol_Union(i interface{}) (OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config_Protocol_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigPacketMatchTypes_IP_PROTOCOL:
		return &OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config_Protocol_Union_E_OpenconfigPacketMatchTypes_IP_PROTOCOL{v}, nil
	case uint8:
		return &OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config_Protocol_Union_Uint8{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config_Protocol_Union, unknown union type, got: %T, want any of [E_OpenconfigPacketMatchTypes_IP_PROTOCOL, uint8]", i, i)
	}
}

// OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State_Protocol_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-acl/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv4/state/protocol within the YANG schema.
type OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State_Protocol_Union interface {
	Is_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State_Protocol_Union()
}

// OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State_Protocol_Union_E_OpenconfigPacketMatchTypes_IP_PROTOCOL is used when /openconfig-acl/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv4/state/protocol
// is to be set to a E_OpenconfigPacketMatchTypes_IP_PROTOCOL value.
type OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State_Protocol_Union_E_OpenconfigPacketMatchTypes_IP_PROTOCOL struct {
	E_OpenconfigPacketMatchTypes_IP_PROTOCOL E_OpenconfigPacketMatchTypes_IP_PROTOCOL
}

// Is_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State_Protocol_Union ensures that OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State_Protocol_Union_E_OpenconfigPacketMatchTypes_IP_PROTOCOL
// implements the OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State_Protocol_Union interface.
func (*OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State_Protocol_Union_E_OpenconfigPacketMatchTypes_IP_PROTOCOL) Is_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State_Protocol_Union() {}

// OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State_Protocol_Union_Uint8 is used when /openconfig-acl/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv4/state/protocol
// is to be set to a uint8 value.
type OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State_Protocol_Union_Uint8 struct {
	Uint8 uint8
}

// Is_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State_Protocol_Union ensures that OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State_Protocol_Union_Uint8
// implements the OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State_Protocol_Union interface.
func (*OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State_Protocol_Union_Uint8) Is_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State_Protocol_Union() {}

// To_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State_Protocol_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State_Protocol_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State) To_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State_Protocol_Union(i interface{}) (OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State_Protocol_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigPacketMatchTypes_IP_PROTOCOL:
		return &OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State_Protocol_Union_E_OpenconfigPacketMatchTypes_IP_PROTOCOL{v}, nil
	case uint8:
		return &OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State_Protocol_Union_Uint8{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State_Protocol_Union, unknown union type, got: %T, want any of [E_OpenconfigPacketMatchTypes_IP_PROTOCOL, uint8]", i, i)
	}
}

// OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config_Protocol_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-acl/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv6/config/protocol within the YANG schema.
type OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config_Protocol_Union interface {
	Is_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config_Protocol_Union()
}

// OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config_Protocol_Union_E_OpenconfigPacketMatchTypes_IP_PROTOCOL is used when /openconfig-acl/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv6/config/protocol
// is to be set to a E_OpenconfigPacketMatchTypes_IP_PROTOCOL value.
type OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config_Protocol_Union_E_OpenconfigPacketMatchTypes_IP_PROTOCOL struct {
	E_OpenconfigPacketMatchTypes_IP_PROTOCOL E_OpenconfigPacketMatchTypes_IP_PROTOCOL
}

// Is_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config_Protocol_Union ensures that OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config_Protocol_Union_E_OpenconfigPacketMatchTypes_IP_PROTOCOL
// implements the OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config_Protocol_Union interface.
func (*OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config_Protocol_Union_E_OpenconfigPacketMatchTypes_IP_PROTOCOL) Is_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config_Protocol_Union() {}

// OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config_Protocol_Union_Uint8 is used when /openconfig-acl/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv6/config/protocol
// is to be set to a uint8 value.
type OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config_Protocol_Union_Uint8 struct {
	Uint8 uint8
}

// Is_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config_Protocol_Union ensures that OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config_Protocol_Union_Uint8
// implements the OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config_Protocol_Union interface.
func (*OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config_Protocol_Union_Uint8) Is_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config_Protocol_Union() {}

// To_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config_Protocol_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config_Protocol_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config) To_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config_Protocol_Union(i interface{}) (OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config_Protocol_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigPacketMatchTypes_IP_PROTOCOL:
		return &OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config_Protocol_Union_E_OpenconfigPacketMatchTypes_IP_PROTOCOL{v}, nil
	case uint8:
		return &OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config_Protocol_Union_Uint8{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config_Protocol_Union, unknown union type, got: %T, want any of [E_OpenconfigPacketMatchTypes_IP_PROTOCOL, uint8]", i, i)
	}
}

// OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State_Protocol_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-acl/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv6/state/protocol within the YANG schema.
type OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State_Protocol_Union interface {
	Is_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State_Protocol_Union()
}

// OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State_Protocol_Union_E_OpenconfigPacketMatchTypes_IP_PROTOCOL is used when /openconfig-acl/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv6/state/protocol
// is to be set to a E_OpenconfigPacketMatchTypes_IP_PROTOCOL value.
type OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State_Protocol_Union_E_OpenconfigPacketMatchTypes_IP_PROTOCOL struct {
	E_OpenconfigPacketMatchTypes_IP_PROTOCOL E_OpenconfigPacketMatchTypes_IP_PROTOCOL
}

// Is_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State_Protocol_Union ensures that OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State_Protocol_Union_E_OpenconfigPacketMatchTypes_IP_PROTOCOL
// implements the OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State_Protocol_Union interface.
func (*OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State_Protocol_Union_E_OpenconfigPacketMatchTypes_IP_PROTOCOL) Is_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State_Protocol_Union() {}

// OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State_Protocol_Union_Uint8 is used when /openconfig-acl/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv6/state/protocol
// is to be set to a uint8 value.
type OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State_Protocol_Union_Uint8 struct {
	Uint8 uint8
}

// Is_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State_Protocol_Union ensures that OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State_Protocol_Union_Uint8
// implements the OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State_Protocol_Union interface.
func (*OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State_Protocol_Union_Uint8) Is_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State_Protocol_Union() {}

// To_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State_Protocol_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State_Protocol_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State) To_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State_Protocol_Union(i interface{}) (OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State_Protocol_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigPacketMatchTypes_IP_PROTOCOL:
		return &OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State_Protocol_Union_E_OpenconfigPacketMatchTypes_IP_PROTOCOL{v}, nil
	case uint8:
		return &OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State_Protocol_Union_Uint8{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State_Protocol_Union, unknown union type, got: %T, want any of [E_OpenconfigPacketMatchTypes_IP_PROTOCOL, uint8]", i, i)
	}
}

// OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config_Ethertype_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-acl/acl/acl-sets/acl-set/acl-entries/acl-entry/l2/config/ethertype within the YANG schema.
type OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config_Ethertype_Union interface {
	Is_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config_Ethertype_Union()
}

// OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config_Ethertype_Union_E_OpenconfigPacketMatchTypes_ETHERTYPE is used when /openconfig-acl/acl/acl-sets/acl-set/acl-entries/acl-entry/l2/config/ethertype
// is to be set to a E_OpenconfigPacketMatchTypes_ETHERTYPE value.
type OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config_Ethertype_Union_E_OpenconfigPacketMatchTypes_ETHERTYPE struct {
	E_OpenconfigPacketMatchTypes_ETHERTYPE E_OpenconfigPacketMatchTypes_ETHERTYPE
}

// Is_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config_Ethertype_Union ensures that OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config_Ethertype_Union_E_OpenconfigPacketMatchTypes_ETHERTYPE
// implements the OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config_Ethertype_Union interface.
func (*OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config_Ethertype_Union_E_OpenconfigPacketMatchTypes_ETHERTYPE) Is_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config_Ethertype_Union() {}

// OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config_Ethertype_Union_Uint16 is used when /openconfig-acl/acl/acl-sets/acl-set/acl-entries/acl-entry/l2/config/ethertype
// is to be set to a uint16 value.
type OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config_Ethertype_Union_Uint16 struct {
	Uint16 uint16
}

// Is_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config_Ethertype_Union ensures that OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config_Ethertype_Union_Uint16
// implements the OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config_Ethertype_Union interface.
func (*OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config_Ethertype_Union_Uint16) Is_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config_Ethertype_Union() {}

// To_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config_Ethertype_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config_Ethertype_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config) To_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config_Ethertype_Union(i interface{}) (OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config_Ethertype_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigPacketMatchTypes_ETHERTYPE:
		return &OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config_Ethertype_Union_E_OpenconfigPacketMatchTypes_ETHERTYPE{v}, nil
	case uint16:
		return &OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config_Ethertype_Union_Uint16{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config_Ethertype_Union, unknown union type, got: %T, want any of [E_OpenconfigPacketMatchTypes_ETHERTYPE, uint16]", i, i)
	}
}

// OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State_Ethertype_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-acl/acl/acl-sets/acl-set/acl-entries/acl-entry/l2/state/ethertype within the YANG schema.
type OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State_Ethertype_Union interface {
	Is_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State_Ethertype_Union()
}

// OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State_Ethertype_Union_E_OpenconfigPacketMatchTypes_ETHERTYPE is used when /openconfig-acl/acl/acl-sets/acl-set/acl-entries/acl-entry/l2/state/ethertype
// is to be set to a E_OpenconfigPacketMatchTypes_ETHERTYPE value.
type OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State_Ethertype_Union_E_OpenconfigPacketMatchTypes_ETHERTYPE struct {
	E_OpenconfigPacketMatchTypes_ETHERTYPE E_OpenconfigPacketMatchTypes_ETHERTYPE
}

// Is_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State_Ethertype_Union ensures that OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State_Ethertype_Union_E_OpenconfigPacketMatchTypes_ETHERTYPE
// implements the OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State_Ethertype_Union interface.
func (*OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State_Ethertype_Union_E_OpenconfigPacketMatchTypes_ETHERTYPE) Is_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State_Ethertype_Union() {}

// OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State_Ethertype_Union_Uint16 is used when /openconfig-acl/acl/acl-sets/acl-set/acl-entries/acl-entry/l2/state/ethertype
// is to be set to a uint16 value.
type OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State_Ethertype_Union_Uint16 struct {
	Uint16 uint16
}

// Is_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State_Ethertype_Union ensures that OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State_Ethertype_Union_Uint16
// implements the OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State_Ethertype_Union interface.
func (*OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State_Ethertype_Union_Uint16) Is_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State_Ethertype_Union() {}

// To_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State_Ethertype_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State_Ethertype_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State) To_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State_Ethertype_Union(i interface{}) (OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State_Ethertype_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigPacketMatchTypes_ETHERTYPE:
		return &OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State_Ethertype_Union_E_OpenconfigPacketMatchTypes_ETHERTYPE{v}, nil
	case uint16:
		return &OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State_Ethertype_Union_Uint16{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State_Ethertype_Union, unknown union type, got: %T, want any of [E_OpenconfigPacketMatchTypes_ETHERTYPE, uint16]", i, i)
	}
}

// OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-acl/acl/acl-sets/acl-set/acl-entries/acl-entry/transport/config/destination-port within the YANG schema.
type OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort_Union interface {
	Is_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort_Union()
}

// OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort_Union_E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort is used when /openconfig-acl/acl/acl-sets/acl-set/acl-entries/acl-entry/transport/config/destination-port
// is to be set to a E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort value.
type OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort_Union_E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort struct {
	E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort
}

// Is_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort_Union ensures that OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort_Union_E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort
// implements the OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort_Union interface.
func (*OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort_Union_E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort) Is_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort_Union() {}

// OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort_Union_String is used when /openconfig-acl/acl/acl-sets/acl-set/acl-entries/acl-entry/transport/config/destination-port
// is to be set to a string value.
type OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort_Union_String struct {
	String string
}

// Is_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort_Union ensures that OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort_Union_String
// implements the OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort_Union interface.
func (*OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort_Union_String) Is_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort_Union() {}

// OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort_Union_Uint16 is used when /openconfig-acl/acl/acl-sets/acl-set/acl-entries/acl-entry/transport/config/destination-port
// is to be set to a uint16 value.
type OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort_Union_Uint16 struct {
	Uint16 uint16
}

// Is_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort_Union ensures that OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort_Union_Uint16
// implements the OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort_Union interface.
func (*OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort_Union_Uint16) Is_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort_Union() {}

// To_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config) To_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort_Union(i interface{}) (OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort:
		return &OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort_Union_E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort{v}, nil
	case string:
		return &OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort_Union_String{v}, nil
	case uint16:
		return &OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort_Union_Uint16{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort_Union, unknown union type, got: %T, want any of [E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort, string, uint16]", i, i)
	}
}

// OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-acl/acl/acl-sets/acl-set/acl-entries/acl-entry/transport/config/source-port within the YANG schema.
type OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort_Union interface {
	Is_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort_Union()
}

// OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort_Union_E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort is used when /openconfig-acl/acl/acl-sets/acl-set/acl-entries/acl-entry/transport/config/source-port
// is to be set to a E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort value.
type OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort_Union_E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort struct {
	E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort
}

// Is_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort_Union ensures that OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort_Union_E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort
// implements the OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort_Union interface.
func (*OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort_Union_E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort) Is_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort_Union() {}

// OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort_Union_String is used when /openconfig-acl/acl/acl-sets/acl-set/acl-entries/acl-entry/transport/config/source-port
// is to be set to a string value.
type OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort_Union_String struct {
	String string
}

// Is_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort_Union ensures that OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort_Union_String
// implements the OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort_Union interface.
func (*OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort_Union_String) Is_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort_Union() {}

// OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort_Union_Uint16 is used when /openconfig-acl/acl/acl-sets/acl-set/acl-entries/acl-entry/transport/config/source-port
// is to be set to a uint16 value.
type OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort_Union_Uint16 struct {
	Uint16 uint16
}

// Is_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort_Union ensures that OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort_Union_Uint16
// implements the OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort_Union interface.
func (*OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort_Union_Uint16) Is_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort_Union() {}

// To_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config) To_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort_Union(i interface{}) (OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort:
		return &OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort_Union_E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort{v}, nil
	case string:
		return &OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort_Union_String{v}, nil
	case uint16:
		return &OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort_Union_Uint16{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort_Union, unknown union type, got: %T, want any of [E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort, string, uint16]", i, i)
	}
}

// OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_DestinationPort_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-acl/acl/acl-sets/acl-set/acl-entries/acl-entry/transport/state/destination-port within the YANG schema.
type OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_DestinationPort_Union interface {
	Is_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_DestinationPort_Union()
}

// OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_DestinationPort_Union_E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort is used when /openconfig-acl/acl/acl-sets/acl-set/acl-entries/acl-entry/transport/state/destination-port
// is to be set to a E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort value.
type OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_DestinationPort_Union_E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort struct {
	E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort
}

// Is_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_DestinationPort_Union ensures that OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_DestinationPort_Union_E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort
// implements the OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_DestinationPort_Union interface.
func (*OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_DestinationPort_Union_E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort) Is_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_DestinationPort_Union() {}

// OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_DestinationPort_Union_String is used when /openconfig-acl/acl/acl-sets/acl-set/acl-entries/acl-entry/transport/state/destination-port
// is to be set to a string value.
type OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_DestinationPort_Union_String struct {
	String string
}

// Is_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_DestinationPort_Union ensures that OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_DestinationPort_Union_String
// implements the OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_DestinationPort_Union interface.
func (*OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_DestinationPort_Union_String) Is_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_DestinationPort_Union() {}

// OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_DestinationPort_Union_Uint16 is used when /openconfig-acl/acl/acl-sets/acl-set/acl-entries/acl-entry/transport/state/destination-port
// is to be set to a uint16 value.
type OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_DestinationPort_Union_Uint16 struct {
	Uint16 uint16
}

// Is_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_DestinationPort_Union ensures that OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_DestinationPort_Union_Uint16
// implements the OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_DestinationPort_Union interface.
func (*OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_DestinationPort_Union_Uint16) Is_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_DestinationPort_Union() {}

// To_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_DestinationPort_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_DestinationPort_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State) To_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_DestinationPort_Union(i interface{}) (OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_DestinationPort_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort:
		return &OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_DestinationPort_Union_E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort{v}, nil
	case string:
		return &OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_DestinationPort_Union_String{v}, nil
	case uint16:
		return &OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_DestinationPort_Union_Uint16{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_DestinationPort_Union, unknown union type, got: %T, want any of [E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort, string, uint16]", i, i)
	}
}

// OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_SourcePort_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-acl/acl/acl-sets/acl-set/acl-entries/acl-entry/transport/state/source-port within the YANG schema.
type OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_SourcePort_Union interface {
	Is_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_SourcePort_Union()
}

// OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_SourcePort_Union_E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort is used when /openconfig-acl/acl/acl-sets/acl-set/acl-entries/acl-entry/transport/state/source-port
// is to be set to a E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort value.
type OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_SourcePort_Union_E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort struct {
	E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort
}

// Is_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_SourcePort_Union ensures that OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_SourcePort_Union_E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort
// implements the OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_SourcePort_Union interface.
func (*OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_SourcePort_Union_E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort) Is_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_SourcePort_Union() {}

// OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_SourcePort_Union_String is used when /openconfig-acl/acl/acl-sets/acl-set/acl-entries/acl-entry/transport/state/source-port
// is to be set to a string value.
type OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_SourcePort_Union_String struct {
	String string
}

// Is_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_SourcePort_Union ensures that OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_SourcePort_Union_String
// implements the OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_SourcePort_Union interface.
func (*OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_SourcePort_Union_String) Is_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_SourcePort_Union() {}

// OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_SourcePort_Union_Uint16 is used when /openconfig-acl/acl/acl-sets/acl-set/acl-entries/acl-entry/transport/state/source-port
// is to be set to a uint16 value.
type OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_SourcePort_Union_Uint16 struct {
	Uint16 uint16
}

// Is_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_SourcePort_Union ensures that OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_SourcePort_Union_Uint16
// implements the OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_SourcePort_Union interface.
func (*OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_SourcePort_Union_Uint16) Is_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_SourcePort_Union() {}

// To_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_SourcePort_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_SourcePort_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State) To_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_SourcePort_Union(i interface{}) (OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_SourcePort_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort:
		return &OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_SourcePort_Union_E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort{v}, nil
	case string:
		return &OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_SourcePort_Union_String{v}, nil
	case uint16:
		return &OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_SourcePort_Union_Uint16{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_SourcePort_Union, unknown union type, got: %T, want any of [E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort, string, uint16]", i, i)
	}
}

// OpenconfigBgp_Bgp_Neighbors_Neighbor_RouteReflector_Config_RouteReflectorClusterId_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-bgp/bgp/neighbors/neighbor/route-reflector/config/route-reflector-cluster-id within the YANG schema.
type OpenconfigBgp_Bgp_Neighbors_Neighbor_RouteReflector_Config_RouteReflectorClusterId_Union interface {
	Is_OpenconfigBgp_Bgp_Neighbors_Neighbor_RouteReflector_Config_RouteReflectorClusterId_Union()
}

// OpenconfigBgp_Bgp_Neighbors_Neighbor_RouteReflector_Config_RouteReflectorClusterId_Union_String is used when /openconfig-bgp/bgp/neighbors/neighbor/route-reflector/config/route-reflector-cluster-id
// is to be set to a string value.
type OpenconfigBgp_Bgp_Neighbors_Neighbor_RouteReflector_Config_RouteReflectorClusterId_Union_String struct {
	String string
}

// Is_OpenconfigBgp_Bgp_Neighbors_Neighbor_RouteReflector_Config_RouteReflectorClusterId_Union ensures that OpenconfigBgp_Bgp_Neighbors_Neighbor_RouteReflector_Config_RouteReflectorClusterId_Union_String
// implements the OpenconfigBgp_Bgp_Neighbors_Neighbor_RouteReflector_Config_RouteReflectorClusterId_Union interface.
func (*OpenconfigBgp_Bgp_Neighbors_Neighbor_RouteReflector_Config_RouteReflectorClusterId_Union_String) Is_OpenconfigBgp_Bgp_Neighbors_Neighbor_RouteReflector_Config_RouteReflectorClusterId_Union() {}

// OpenconfigBgp_Bgp_Neighbors_Neighbor_RouteReflector_Config_RouteReflectorClusterId_Union_Uint32 is used when /openconfig-bgp/bgp/neighbors/neighbor/route-reflector/config/route-reflector-cluster-id
// is to be set to a uint32 value.
type OpenconfigBgp_Bgp_Neighbors_Neighbor_RouteReflector_Config_RouteReflectorClusterId_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigBgp_Bgp_Neighbors_Neighbor_RouteReflector_Config_RouteReflectorClusterId_Union ensures that OpenconfigBgp_Bgp_Neighbors_Neighbor_RouteReflector_Config_RouteReflectorClusterId_Union_Uint32
// implements the OpenconfigBgp_Bgp_Neighbors_Neighbor_RouteReflector_Config_RouteReflectorClusterId_Union interface.
func (*OpenconfigBgp_Bgp_Neighbors_Neighbor_RouteReflector_Config_RouteReflectorClusterId_Union_Uint32) Is_OpenconfigBgp_Bgp_Neighbors_Neighbor_RouteReflector_Config_RouteReflectorClusterId_Union() {}

// To_OpenconfigBgp_Bgp_Neighbors_Neighbor_RouteReflector_Config_RouteReflectorClusterId_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigBgp_Bgp_Neighbors_Neighbor_RouteReflector_Config_RouteReflectorClusterId_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigBgp_Bgp_Neighbors_Neighbor_RouteReflector_Config) To_OpenconfigBgp_Bgp_Neighbors_Neighbor_RouteReflector_Config_RouteReflectorClusterId_Union(i interface{}) (OpenconfigBgp_Bgp_Neighbors_Neighbor_RouteReflector_Config_RouteReflectorClusterId_Union, error) {
	switch v := i.(type) {
	case string:
		return &OpenconfigBgp_Bgp_Neighbors_Neighbor_RouteReflector_Config_RouteReflectorClusterId_Union_String{v}, nil
	case uint32:
		return &OpenconfigBgp_Bgp_Neighbors_Neighbor_RouteReflector_Config_RouteReflectorClusterId_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigBgp_Bgp_Neighbors_Neighbor_RouteReflector_Config_RouteReflectorClusterId_Union, unknown union type, got: %T, want any of [string, uint32]", i, i)
	}
}

// OpenconfigBgp_Bgp_Neighbors_Neighbor_RouteReflector_State_RouteReflectorClusterId_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-bgp/bgp/neighbors/neighbor/route-reflector/state/route-reflector-cluster-id within the YANG schema.
type OpenconfigBgp_Bgp_Neighbors_Neighbor_RouteReflector_State_RouteReflectorClusterId_Union interface {
	Is_OpenconfigBgp_Bgp_Neighbors_Neighbor_RouteReflector_State_RouteReflectorClusterId_Union()
}

// OpenconfigBgp_Bgp_Neighbors_Neighbor_RouteReflector_State_RouteReflectorClusterId_Union_String is used when /openconfig-bgp/bgp/neighbors/neighbor/route-reflector/state/route-reflector-cluster-id
// is to be set to a string value.
type OpenconfigBgp_Bgp_Neighbors_Neighbor_RouteReflector_State_RouteReflectorClusterId_Union_String struct {
	String string
}

// Is_OpenconfigBgp_Bgp_Neighbors_Neighbor_RouteReflector_State_RouteReflectorClusterId_Union ensures that OpenconfigBgp_Bgp_Neighbors_Neighbor_RouteReflector_State_RouteReflectorClusterId_Union_String
// implements the OpenconfigBgp_Bgp_Neighbors_Neighbor_RouteReflector_State_RouteReflectorClusterId_Union interface.
func (*OpenconfigBgp_Bgp_Neighbors_Neighbor_RouteReflector_State_RouteReflectorClusterId_Union_String) Is_OpenconfigBgp_Bgp_Neighbors_Neighbor_RouteReflector_State_RouteReflectorClusterId_Union() {}

// OpenconfigBgp_Bgp_Neighbors_Neighbor_RouteReflector_State_RouteReflectorClusterId_Union_Uint32 is used when /openconfig-bgp/bgp/neighbors/neighbor/route-reflector/state/route-reflector-cluster-id
// is to be set to a uint32 value.
type OpenconfigBgp_Bgp_Neighbors_Neighbor_RouteReflector_State_RouteReflectorClusterId_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigBgp_Bgp_Neighbors_Neighbor_RouteReflector_State_RouteReflectorClusterId_Union ensures that OpenconfigBgp_Bgp_Neighbors_Neighbor_RouteReflector_State_RouteReflectorClusterId_Union_Uint32
// implements the OpenconfigBgp_Bgp_Neighbors_Neighbor_RouteReflector_State_RouteReflectorClusterId_Union interface.
func (*OpenconfigBgp_Bgp_Neighbors_Neighbor_RouteReflector_State_RouteReflectorClusterId_Union_Uint32) Is_OpenconfigBgp_Bgp_Neighbors_Neighbor_RouteReflector_State_RouteReflectorClusterId_Union() {}

// To_OpenconfigBgp_Bgp_Neighbors_Neighbor_RouteReflector_State_RouteReflectorClusterId_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigBgp_Bgp_Neighbors_Neighbor_RouteReflector_State_RouteReflectorClusterId_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigBgp_Bgp_Neighbors_Neighbor_RouteReflector_State) To_OpenconfigBgp_Bgp_Neighbors_Neighbor_RouteReflector_State_RouteReflectorClusterId_Union(i interface{}) (OpenconfigBgp_Bgp_Neighbors_Neighbor_RouteReflector_State_RouteReflectorClusterId_Union, error) {
	switch v := i.(type) {
	case string:
		return &OpenconfigBgp_Bgp_Neighbors_Neighbor_RouteReflector_State_RouteReflectorClusterId_Union_String{v}, nil
	case uint32:
		return &OpenconfigBgp_Bgp_Neighbors_Neighbor_RouteReflector_State_RouteReflectorClusterId_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigBgp_Bgp_Neighbors_Neighbor_RouteReflector_State_RouteReflectorClusterId_Union, unknown union type, got: %T, want any of [string, uint32]", i, i)
	}
}

// OpenconfigBgp_Bgp_PeerGroups_PeerGroup_RouteReflector_Config_RouteReflectorClusterId_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-bgp/bgp/peer-groups/peer-group/route-reflector/config/route-reflector-cluster-id within the YANG schema.
type OpenconfigBgp_Bgp_PeerGroups_PeerGroup_RouteReflector_Config_RouteReflectorClusterId_Union interface {
	Is_OpenconfigBgp_Bgp_PeerGroups_PeerGroup_RouteReflector_Config_RouteReflectorClusterId_Union()
}

// OpenconfigBgp_Bgp_PeerGroups_PeerGroup_RouteReflector_Config_RouteReflectorClusterId_Union_String is used when /openconfig-bgp/bgp/peer-groups/peer-group/route-reflector/config/route-reflector-cluster-id
// is to be set to a string value.
type OpenconfigBgp_Bgp_PeerGroups_PeerGroup_RouteReflector_Config_RouteReflectorClusterId_Union_String struct {
	String string
}

// Is_OpenconfigBgp_Bgp_PeerGroups_PeerGroup_RouteReflector_Config_RouteReflectorClusterId_Union ensures that OpenconfigBgp_Bgp_PeerGroups_PeerGroup_RouteReflector_Config_RouteReflectorClusterId_Union_String
// implements the OpenconfigBgp_Bgp_PeerGroups_PeerGroup_RouteReflector_Config_RouteReflectorClusterId_Union interface.
func (*OpenconfigBgp_Bgp_PeerGroups_PeerGroup_RouteReflector_Config_RouteReflectorClusterId_Union_String) Is_OpenconfigBgp_Bgp_PeerGroups_PeerGroup_RouteReflector_Config_RouteReflectorClusterId_Union() {}

// OpenconfigBgp_Bgp_PeerGroups_PeerGroup_RouteReflector_Config_RouteReflectorClusterId_Union_Uint32 is used when /openconfig-bgp/bgp/peer-groups/peer-group/route-reflector/config/route-reflector-cluster-id
// is to be set to a uint32 value.
type OpenconfigBgp_Bgp_PeerGroups_PeerGroup_RouteReflector_Config_RouteReflectorClusterId_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigBgp_Bgp_PeerGroups_PeerGroup_RouteReflector_Config_RouteReflectorClusterId_Union ensures that OpenconfigBgp_Bgp_PeerGroups_PeerGroup_RouteReflector_Config_RouteReflectorClusterId_Union_Uint32
// implements the OpenconfigBgp_Bgp_PeerGroups_PeerGroup_RouteReflector_Config_RouteReflectorClusterId_Union interface.
func (*OpenconfigBgp_Bgp_PeerGroups_PeerGroup_RouteReflector_Config_RouteReflectorClusterId_Union_Uint32) Is_OpenconfigBgp_Bgp_PeerGroups_PeerGroup_RouteReflector_Config_RouteReflectorClusterId_Union() {}

// To_OpenconfigBgp_Bgp_PeerGroups_PeerGroup_RouteReflector_Config_RouteReflectorClusterId_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigBgp_Bgp_PeerGroups_PeerGroup_RouteReflector_Config_RouteReflectorClusterId_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigBgp_Bgp_PeerGroups_PeerGroup_RouteReflector_Config) To_OpenconfigBgp_Bgp_PeerGroups_PeerGroup_RouteReflector_Config_RouteReflectorClusterId_Union(i interface{}) (OpenconfigBgp_Bgp_PeerGroups_PeerGroup_RouteReflector_Config_RouteReflectorClusterId_Union, error) {
	switch v := i.(type) {
	case string:
		return &OpenconfigBgp_Bgp_PeerGroups_PeerGroup_RouteReflector_Config_RouteReflectorClusterId_Union_String{v}, nil
	case uint32:
		return &OpenconfigBgp_Bgp_PeerGroups_PeerGroup_RouteReflector_Config_RouteReflectorClusterId_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigBgp_Bgp_PeerGroups_PeerGroup_RouteReflector_Config_RouteReflectorClusterId_Union, unknown union type, got: %T, want any of [string, uint32]", i, i)
	}
}

// OpenconfigBgp_Bgp_PeerGroups_PeerGroup_RouteReflector_State_RouteReflectorClusterId_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-bgp/bgp/peer-groups/peer-group/route-reflector/state/route-reflector-cluster-id within the YANG schema.
type OpenconfigBgp_Bgp_PeerGroups_PeerGroup_RouteReflector_State_RouteReflectorClusterId_Union interface {
	Is_OpenconfigBgp_Bgp_PeerGroups_PeerGroup_RouteReflector_State_RouteReflectorClusterId_Union()
}

// OpenconfigBgp_Bgp_PeerGroups_PeerGroup_RouteReflector_State_RouteReflectorClusterId_Union_String is used when /openconfig-bgp/bgp/peer-groups/peer-group/route-reflector/state/route-reflector-cluster-id
// is to be set to a string value.
type OpenconfigBgp_Bgp_PeerGroups_PeerGroup_RouteReflector_State_RouteReflectorClusterId_Union_String struct {
	String string
}

// Is_OpenconfigBgp_Bgp_PeerGroups_PeerGroup_RouteReflector_State_RouteReflectorClusterId_Union ensures that OpenconfigBgp_Bgp_PeerGroups_PeerGroup_RouteReflector_State_RouteReflectorClusterId_Union_String
// implements the OpenconfigBgp_Bgp_PeerGroups_PeerGroup_RouteReflector_State_RouteReflectorClusterId_Union interface.
func (*OpenconfigBgp_Bgp_PeerGroups_PeerGroup_RouteReflector_State_RouteReflectorClusterId_Union_String) Is_OpenconfigBgp_Bgp_PeerGroups_PeerGroup_RouteReflector_State_RouteReflectorClusterId_Union() {}

// OpenconfigBgp_Bgp_PeerGroups_PeerGroup_RouteReflector_State_RouteReflectorClusterId_Union_Uint32 is used when /openconfig-bgp/bgp/peer-groups/peer-group/route-reflector/state/route-reflector-cluster-id
// is to be set to a uint32 value.
type OpenconfigBgp_Bgp_PeerGroups_PeerGroup_RouteReflector_State_RouteReflectorClusterId_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigBgp_Bgp_PeerGroups_PeerGroup_RouteReflector_State_RouteReflectorClusterId_Union ensures that OpenconfigBgp_Bgp_PeerGroups_PeerGroup_RouteReflector_State_RouteReflectorClusterId_Union_Uint32
// implements the OpenconfigBgp_Bgp_PeerGroups_PeerGroup_RouteReflector_State_RouteReflectorClusterId_Union interface.
func (*OpenconfigBgp_Bgp_PeerGroups_PeerGroup_RouteReflector_State_RouteReflectorClusterId_Union_Uint32) Is_OpenconfigBgp_Bgp_PeerGroups_PeerGroup_RouteReflector_State_RouteReflectorClusterId_Union() {}

// To_OpenconfigBgp_Bgp_PeerGroups_PeerGroup_RouteReflector_State_RouteReflectorClusterId_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigBgp_Bgp_PeerGroups_PeerGroup_RouteReflector_State_RouteReflectorClusterId_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigBgp_Bgp_PeerGroups_PeerGroup_RouteReflector_State) To_OpenconfigBgp_Bgp_PeerGroups_PeerGroup_RouteReflector_State_RouteReflectorClusterId_Union(i interface{}) (OpenconfigBgp_Bgp_PeerGroups_PeerGroup_RouteReflector_State_RouteReflectorClusterId_Union, error) {
	switch v := i.(type) {
	case string:
		return &OpenconfigBgp_Bgp_PeerGroups_PeerGroup_RouteReflector_State_RouteReflectorClusterId_Union_String{v}, nil
	case uint32:
		return &OpenconfigBgp_Bgp_PeerGroups_PeerGroup_RouteReflector_State_RouteReflectorClusterId_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigBgp_Bgp_PeerGroups_PeerGroup_RouteReflector_State_RouteReflectorClusterId_Union, unknown union type, got: %T, want any of [string, uint32]", i, i)
	}
}

// OpenconfigInterfaces_Interfaces_Interface_Aggregation_SwitchedVlan_Config_TrunkVlans_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-interfaces/interfaces/interface/aggregation/switched-vlan/config/trunk-vlans within the YANG schema.
type OpenconfigInterfaces_Interfaces_Interface_Aggregation_SwitchedVlan_Config_TrunkVlans_Union interface {
	Is_OpenconfigInterfaces_Interfaces_Interface_Aggregation_SwitchedVlan_Config_TrunkVlans_Union()
}

// OpenconfigInterfaces_Interfaces_Interface_Aggregation_SwitchedVlan_Config_TrunkVlans_Union_String is used when /openconfig-interfaces/interfaces/interface/aggregation/switched-vlan/config/trunk-vlans
// is to be set to a string value.
type OpenconfigInterfaces_Interfaces_Interface_Aggregation_SwitchedVlan_Config_TrunkVlans_Union_String struct {
	String string
}

// Is_OpenconfigInterfaces_Interfaces_Interface_Aggregation_SwitchedVlan_Config_TrunkVlans_Union ensures that OpenconfigInterfaces_Interfaces_Interface_Aggregation_SwitchedVlan_Config_TrunkVlans_Union_String
// implements the OpenconfigInterfaces_Interfaces_Interface_Aggregation_SwitchedVlan_Config_TrunkVlans_Union interface.
func (*OpenconfigInterfaces_Interfaces_Interface_Aggregation_SwitchedVlan_Config_TrunkVlans_Union_String) Is_OpenconfigInterfaces_Interfaces_Interface_Aggregation_SwitchedVlan_Config_TrunkVlans_Union() {}

// OpenconfigInterfaces_Interfaces_Interface_Aggregation_SwitchedVlan_Config_TrunkVlans_Union_Uint16 is used when /openconfig-interfaces/interfaces/interface/aggregation/switched-vlan/config/trunk-vlans
// is to be set to a uint16 value.
type OpenconfigInterfaces_Interfaces_Interface_Aggregation_SwitchedVlan_Config_TrunkVlans_Union_Uint16 struct {
	Uint16 uint16
}

// Is_OpenconfigInterfaces_Interfaces_Interface_Aggregation_SwitchedVlan_Config_TrunkVlans_Union ensures that OpenconfigInterfaces_Interfaces_Interface_Aggregation_SwitchedVlan_Config_TrunkVlans_Union_Uint16
// implements the OpenconfigInterfaces_Interfaces_Interface_Aggregation_SwitchedVlan_Config_TrunkVlans_Union interface.
func (*OpenconfigInterfaces_Interfaces_Interface_Aggregation_SwitchedVlan_Config_TrunkVlans_Union_Uint16) Is_OpenconfigInterfaces_Interfaces_Interface_Aggregation_SwitchedVlan_Config_TrunkVlans_Union() {}

// To_OpenconfigInterfaces_Interfaces_Interface_Aggregation_SwitchedVlan_Config_TrunkVlans_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigInterfaces_Interfaces_Interface_Aggregation_SwitchedVlan_Config_TrunkVlans_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigInterfaces_Interfaces_Interface_Aggregation_SwitchedVlan_Config) To_OpenconfigInterfaces_Interfaces_Interface_Aggregation_SwitchedVlan_Config_TrunkVlans_Union(i interface{}) (OpenconfigInterfaces_Interfaces_Interface_Aggregation_SwitchedVlan_Config_TrunkVlans_Union, error) {
	switch v := i.(type) {
	case string:
		return &OpenconfigInterfaces_Interfaces_Interface_Aggregation_SwitchedVlan_Config_TrunkVlans_Union_String{v}, nil
	case uint16:
		return &OpenconfigInterfaces_Interfaces_Interface_Aggregation_SwitchedVlan_Config_TrunkVlans_Union_Uint16{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigInterfaces_Interfaces_Interface_Aggregation_SwitchedVlan_Config_TrunkVlans_Union, unknown union type, got: %T, want any of [string, uint16]", i, i)
	}
}

// OpenconfigInterfaces_Interfaces_Interface_Aggregation_SwitchedVlan_State_TrunkVlans_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-interfaces/interfaces/interface/aggregation/switched-vlan/state/trunk-vlans within the YANG schema.
type OpenconfigInterfaces_Interfaces_Interface_Aggregation_SwitchedVlan_State_TrunkVlans_Union interface {
	Is_OpenconfigInterfaces_Interfaces_Interface_Aggregation_SwitchedVlan_State_TrunkVlans_Union()
}

// OpenconfigInterfaces_Interfaces_Interface_Aggregation_SwitchedVlan_State_TrunkVlans_Union_String is used when /openconfig-interfaces/interfaces/interface/aggregation/switched-vlan/state/trunk-vlans
// is to be set to a string value.
type OpenconfigInterfaces_Interfaces_Interface_Aggregation_SwitchedVlan_State_TrunkVlans_Union_String struct {
	String string
}

// Is_OpenconfigInterfaces_Interfaces_Interface_Aggregation_SwitchedVlan_State_TrunkVlans_Union ensures that OpenconfigInterfaces_Interfaces_Interface_Aggregation_SwitchedVlan_State_TrunkVlans_Union_String
// implements the OpenconfigInterfaces_Interfaces_Interface_Aggregation_SwitchedVlan_State_TrunkVlans_Union interface.
func (*OpenconfigInterfaces_Interfaces_Interface_Aggregation_SwitchedVlan_State_TrunkVlans_Union_String) Is_OpenconfigInterfaces_Interfaces_Interface_Aggregation_SwitchedVlan_State_TrunkVlans_Union() {}

// OpenconfigInterfaces_Interfaces_Interface_Aggregation_SwitchedVlan_State_TrunkVlans_Union_Uint16 is used when /openconfig-interfaces/interfaces/interface/aggregation/switched-vlan/state/trunk-vlans
// is to be set to a uint16 value.
type OpenconfigInterfaces_Interfaces_Interface_Aggregation_SwitchedVlan_State_TrunkVlans_Union_Uint16 struct {
	Uint16 uint16
}

// Is_OpenconfigInterfaces_Interfaces_Interface_Aggregation_SwitchedVlan_State_TrunkVlans_Union ensures that OpenconfigInterfaces_Interfaces_Interface_Aggregation_SwitchedVlan_State_TrunkVlans_Union_Uint16
// implements the OpenconfigInterfaces_Interfaces_Interface_Aggregation_SwitchedVlan_State_TrunkVlans_Union interface.
func (*OpenconfigInterfaces_Interfaces_Interface_Aggregation_SwitchedVlan_State_TrunkVlans_Union_Uint16) Is_OpenconfigInterfaces_Interfaces_Interface_Aggregation_SwitchedVlan_State_TrunkVlans_Union() {}

// To_OpenconfigInterfaces_Interfaces_Interface_Aggregation_SwitchedVlan_State_TrunkVlans_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigInterfaces_Interfaces_Interface_Aggregation_SwitchedVlan_State_TrunkVlans_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigInterfaces_Interfaces_Interface_Aggregation_SwitchedVlan_State) To_OpenconfigInterfaces_Interfaces_Interface_Aggregation_SwitchedVlan_State_TrunkVlans_Union(i interface{}) (OpenconfigInterfaces_Interfaces_Interface_Aggregation_SwitchedVlan_State_TrunkVlans_Union, error) {
	switch v := i.(type) {
	case string:
		return &OpenconfigInterfaces_Interfaces_Interface_Aggregation_SwitchedVlan_State_TrunkVlans_Union_String{v}, nil
	case uint16:
		return &OpenconfigInterfaces_Interfaces_Interface_Aggregation_SwitchedVlan_State_TrunkVlans_Union_Uint16{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigInterfaces_Interfaces_Interface_Aggregation_SwitchedVlan_State_TrunkVlans_Union, unknown union type, got: %T, want any of [string, uint16]", i, i)
	}
}

// OpenconfigInterfaces_Interfaces_Interface_Ethernet_SwitchedVlan_Config_TrunkVlans_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-interfaces/interfaces/interface/ethernet/switched-vlan/config/trunk-vlans within the YANG schema.
type OpenconfigInterfaces_Interfaces_Interface_Ethernet_SwitchedVlan_Config_TrunkVlans_Union interface {
	Is_OpenconfigInterfaces_Interfaces_Interface_Ethernet_SwitchedVlan_Config_TrunkVlans_Union()
}

// OpenconfigInterfaces_Interfaces_Interface_Ethernet_SwitchedVlan_Config_TrunkVlans_Union_String is used when /openconfig-interfaces/interfaces/interface/ethernet/switched-vlan/config/trunk-vlans
// is to be set to a string value.
type OpenconfigInterfaces_Interfaces_Interface_Ethernet_SwitchedVlan_Config_TrunkVlans_Union_String struct {
	String string
}

// Is_OpenconfigInterfaces_Interfaces_Interface_Ethernet_SwitchedVlan_Config_TrunkVlans_Union ensures that OpenconfigInterfaces_Interfaces_Interface_Ethernet_SwitchedVlan_Config_TrunkVlans_Union_String
// implements the OpenconfigInterfaces_Interfaces_Interface_Ethernet_SwitchedVlan_Config_TrunkVlans_Union interface.
func (*OpenconfigInterfaces_Interfaces_Interface_Ethernet_SwitchedVlan_Config_TrunkVlans_Union_String) Is_OpenconfigInterfaces_Interfaces_Interface_Ethernet_SwitchedVlan_Config_TrunkVlans_Union() {}

// OpenconfigInterfaces_Interfaces_Interface_Ethernet_SwitchedVlan_Config_TrunkVlans_Union_Uint16 is used when /openconfig-interfaces/interfaces/interface/ethernet/switched-vlan/config/trunk-vlans
// is to be set to a uint16 value.
type OpenconfigInterfaces_Interfaces_Interface_Ethernet_SwitchedVlan_Config_TrunkVlans_Union_Uint16 struct {
	Uint16 uint16
}

// Is_OpenconfigInterfaces_Interfaces_Interface_Ethernet_SwitchedVlan_Config_TrunkVlans_Union ensures that OpenconfigInterfaces_Interfaces_Interface_Ethernet_SwitchedVlan_Config_TrunkVlans_Union_Uint16
// implements the OpenconfigInterfaces_Interfaces_Interface_Ethernet_SwitchedVlan_Config_TrunkVlans_Union interface.
func (*OpenconfigInterfaces_Interfaces_Interface_Ethernet_SwitchedVlan_Config_TrunkVlans_Union_Uint16) Is_OpenconfigInterfaces_Interfaces_Interface_Ethernet_SwitchedVlan_Config_TrunkVlans_Union() {}

// To_OpenconfigInterfaces_Interfaces_Interface_Ethernet_SwitchedVlan_Config_TrunkVlans_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigInterfaces_Interfaces_Interface_Ethernet_SwitchedVlan_Config_TrunkVlans_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigInterfaces_Interfaces_Interface_Ethernet_SwitchedVlan_Config) To_OpenconfigInterfaces_Interfaces_Interface_Ethernet_SwitchedVlan_Config_TrunkVlans_Union(i interface{}) (OpenconfigInterfaces_Interfaces_Interface_Ethernet_SwitchedVlan_Config_TrunkVlans_Union, error) {
	switch v := i.(type) {
	case string:
		return &OpenconfigInterfaces_Interfaces_Interface_Ethernet_SwitchedVlan_Config_TrunkVlans_Union_String{v}, nil
	case uint16:
		return &OpenconfigInterfaces_Interfaces_Interface_Ethernet_SwitchedVlan_Config_TrunkVlans_Union_Uint16{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigInterfaces_Interfaces_Interface_Ethernet_SwitchedVlan_Config_TrunkVlans_Union, unknown union type, got: %T, want any of [string, uint16]", i, i)
	}
}

// OpenconfigInterfaces_Interfaces_Interface_Ethernet_SwitchedVlan_State_TrunkVlans_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-interfaces/interfaces/interface/ethernet/switched-vlan/state/trunk-vlans within the YANG schema.
type OpenconfigInterfaces_Interfaces_Interface_Ethernet_SwitchedVlan_State_TrunkVlans_Union interface {
	Is_OpenconfigInterfaces_Interfaces_Interface_Ethernet_SwitchedVlan_State_TrunkVlans_Union()
}

// OpenconfigInterfaces_Interfaces_Interface_Ethernet_SwitchedVlan_State_TrunkVlans_Union_String is used when /openconfig-interfaces/interfaces/interface/ethernet/switched-vlan/state/trunk-vlans
// is to be set to a string value.
type OpenconfigInterfaces_Interfaces_Interface_Ethernet_SwitchedVlan_State_TrunkVlans_Union_String struct {
	String string
}

// Is_OpenconfigInterfaces_Interfaces_Interface_Ethernet_SwitchedVlan_State_TrunkVlans_Union ensures that OpenconfigInterfaces_Interfaces_Interface_Ethernet_SwitchedVlan_State_TrunkVlans_Union_String
// implements the OpenconfigInterfaces_Interfaces_Interface_Ethernet_SwitchedVlan_State_TrunkVlans_Union interface.
func (*OpenconfigInterfaces_Interfaces_Interface_Ethernet_SwitchedVlan_State_TrunkVlans_Union_String) Is_OpenconfigInterfaces_Interfaces_Interface_Ethernet_SwitchedVlan_State_TrunkVlans_Union() {}

// OpenconfigInterfaces_Interfaces_Interface_Ethernet_SwitchedVlan_State_TrunkVlans_Union_Uint16 is used when /openconfig-interfaces/interfaces/interface/ethernet/switched-vlan/state/trunk-vlans
// is to be set to a uint16 value.
type OpenconfigInterfaces_Interfaces_Interface_Ethernet_SwitchedVlan_State_TrunkVlans_Union_Uint16 struct {
	Uint16 uint16
}

// Is_OpenconfigInterfaces_Interfaces_Interface_Ethernet_SwitchedVlan_State_TrunkVlans_Union ensures that OpenconfigInterfaces_Interfaces_Interface_Ethernet_SwitchedVlan_State_TrunkVlans_Union_Uint16
// implements the OpenconfigInterfaces_Interfaces_Interface_Ethernet_SwitchedVlan_State_TrunkVlans_Union interface.
func (*OpenconfigInterfaces_Interfaces_Interface_Ethernet_SwitchedVlan_State_TrunkVlans_Union_Uint16) Is_OpenconfigInterfaces_Interfaces_Interface_Ethernet_SwitchedVlan_State_TrunkVlans_Union() {}

// To_OpenconfigInterfaces_Interfaces_Interface_Ethernet_SwitchedVlan_State_TrunkVlans_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigInterfaces_Interfaces_Interface_Ethernet_SwitchedVlan_State_TrunkVlans_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigInterfaces_Interfaces_Interface_Ethernet_SwitchedVlan_State) To_OpenconfigInterfaces_Interfaces_Interface_Ethernet_SwitchedVlan_State_TrunkVlans_Union(i interface{}) (OpenconfigInterfaces_Interfaces_Interface_Ethernet_SwitchedVlan_State_TrunkVlans_Union, error) {
	switch v := i.(type) {
	case string:
		return &OpenconfigInterfaces_Interfaces_Interface_Ethernet_SwitchedVlan_State_TrunkVlans_Union_String{v}, nil
	case uint16:
		return &OpenconfigInterfaces_Interfaces_Interface_Ethernet_SwitchedVlan_State_TrunkVlans_Union_Uint16{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigInterfaces_Interfaces_Interface_Ethernet_SwitchedVlan_State_TrunkVlans_Union, unknown union type, got: %T, want any of [string, uint16]", i, i)
	}
}

// OpenconfigInterfaces_Interfaces_Interface_RoutedVlan_Config_Vlan_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-interfaces/interfaces/interface/routed-vlan/config/vlan within the YANG schema.
type OpenconfigInterfaces_Interfaces_Interface_RoutedVlan_Config_Vlan_Union interface {
	Is_OpenconfigInterfaces_Interfaces_Interface_RoutedVlan_Config_Vlan_Union()
}

// OpenconfigInterfaces_Interfaces_Interface_RoutedVlan_Config_Vlan_Union_String is used when /openconfig-interfaces/interfaces/interface/routed-vlan/config/vlan
// is to be set to a string value.
type OpenconfigInterfaces_Interfaces_Interface_RoutedVlan_Config_Vlan_Union_String struct {
	String string
}

// Is_OpenconfigInterfaces_Interfaces_Interface_RoutedVlan_Config_Vlan_Union ensures that OpenconfigInterfaces_Interfaces_Interface_RoutedVlan_Config_Vlan_Union_String
// implements the OpenconfigInterfaces_Interfaces_Interface_RoutedVlan_Config_Vlan_Union interface.
func (*OpenconfigInterfaces_Interfaces_Interface_RoutedVlan_Config_Vlan_Union_String) Is_OpenconfigInterfaces_Interfaces_Interface_RoutedVlan_Config_Vlan_Union() {}

// OpenconfigInterfaces_Interfaces_Interface_RoutedVlan_Config_Vlan_Union_Uint16 is used when /openconfig-interfaces/interfaces/interface/routed-vlan/config/vlan
// is to be set to a uint16 value.
type OpenconfigInterfaces_Interfaces_Interface_RoutedVlan_Config_Vlan_Union_Uint16 struct {
	Uint16 uint16
}

// Is_OpenconfigInterfaces_Interfaces_Interface_RoutedVlan_Config_Vlan_Union ensures that OpenconfigInterfaces_Interfaces_Interface_RoutedVlan_Config_Vlan_Union_Uint16
// implements the OpenconfigInterfaces_Interfaces_Interface_RoutedVlan_Config_Vlan_Union interface.
func (*OpenconfigInterfaces_Interfaces_Interface_RoutedVlan_Config_Vlan_Union_Uint16) Is_OpenconfigInterfaces_Interfaces_Interface_RoutedVlan_Config_Vlan_Union() {}

// To_OpenconfigInterfaces_Interfaces_Interface_RoutedVlan_Config_Vlan_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigInterfaces_Interfaces_Interface_RoutedVlan_Config_Vlan_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigInterfaces_Interfaces_Interface_RoutedVlan_Config) To_OpenconfigInterfaces_Interfaces_Interface_RoutedVlan_Config_Vlan_Union(i interface{}) (OpenconfigInterfaces_Interfaces_Interface_RoutedVlan_Config_Vlan_Union, error) {
	switch v := i.(type) {
	case string:
		return &OpenconfigInterfaces_Interfaces_Interface_RoutedVlan_Config_Vlan_Union_String{v}, nil
	case uint16:
		return &OpenconfigInterfaces_Interfaces_Interface_RoutedVlan_Config_Vlan_Union_Uint16{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigInterfaces_Interfaces_Interface_RoutedVlan_Config_Vlan_Union, unknown union type, got: %T, want any of [string, uint16]", i, i)
	}
}

// OpenconfigInterfaces_Interfaces_Interface_RoutedVlan_State_Vlan_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-interfaces/interfaces/interface/routed-vlan/state/vlan within the YANG schema.
type OpenconfigInterfaces_Interfaces_Interface_RoutedVlan_State_Vlan_Union interface {
	Is_OpenconfigInterfaces_Interfaces_Interface_RoutedVlan_State_Vlan_Union()
}

// OpenconfigInterfaces_Interfaces_Interface_RoutedVlan_State_Vlan_Union_String is used when /openconfig-interfaces/interfaces/interface/routed-vlan/state/vlan
// is to be set to a string value.
type OpenconfigInterfaces_Interfaces_Interface_RoutedVlan_State_Vlan_Union_String struct {
	String string
}

// Is_OpenconfigInterfaces_Interfaces_Interface_RoutedVlan_State_Vlan_Union ensures that OpenconfigInterfaces_Interfaces_Interface_RoutedVlan_State_Vlan_Union_String
// implements the OpenconfigInterfaces_Interfaces_Interface_RoutedVlan_State_Vlan_Union interface.
func (*OpenconfigInterfaces_Interfaces_Interface_RoutedVlan_State_Vlan_Union_String) Is_OpenconfigInterfaces_Interfaces_Interface_RoutedVlan_State_Vlan_Union() {}

// OpenconfigInterfaces_Interfaces_Interface_RoutedVlan_State_Vlan_Union_Uint16 is used when /openconfig-interfaces/interfaces/interface/routed-vlan/state/vlan
// is to be set to a uint16 value.
type OpenconfigInterfaces_Interfaces_Interface_RoutedVlan_State_Vlan_Union_Uint16 struct {
	Uint16 uint16
}

// Is_OpenconfigInterfaces_Interfaces_Interface_RoutedVlan_State_Vlan_Union ensures that OpenconfigInterfaces_Interfaces_Interface_RoutedVlan_State_Vlan_Union_Uint16
// implements the OpenconfigInterfaces_Interfaces_Interface_RoutedVlan_State_Vlan_Union interface.
func (*OpenconfigInterfaces_Interfaces_Interface_RoutedVlan_State_Vlan_Union_Uint16) Is_OpenconfigInterfaces_Interfaces_Interface_RoutedVlan_State_Vlan_Union() {}

// To_OpenconfigInterfaces_Interfaces_Interface_RoutedVlan_State_Vlan_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigInterfaces_Interfaces_Interface_RoutedVlan_State_Vlan_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigInterfaces_Interfaces_Interface_RoutedVlan_State) To_OpenconfigInterfaces_Interfaces_Interface_RoutedVlan_State_Vlan_Union(i interface{}) (OpenconfigInterfaces_Interfaces_Interface_RoutedVlan_State_Vlan_Union, error) {
	switch v := i.(type) {
	case string:
		return &OpenconfigInterfaces_Interfaces_Interface_RoutedVlan_State_Vlan_Union_String{v}, nil
	case uint16:
		return &OpenconfigInterfaces_Interfaces_Interface_RoutedVlan_State_Vlan_Union_Uint16{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigInterfaces_Interfaces_Interface_RoutedVlan_State_Vlan_Union, unknown union type, got: %T, want any of [string, uint16]", i, i)
	}
}

// OpenconfigInterfaces_Interfaces_Interface_Subinterfaces_Subinterface_Vlan_Config_VlanId_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-interfaces/interfaces/interface/subinterfaces/subinterface/vlan/config/vlan-id within the YANG schema.
type OpenconfigInterfaces_Interfaces_Interface_Subinterfaces_Subinterface_Vlan_Config_VlanId_Union interface {
	Is_OpenconfigInterfaces_Interfaces_Interface_Subinterfaces_Subinterface_Vlan_Config_VlanId_Union()
}

// OpenconfigInterfaces_Interfaces_Interface_Subinterfaces_Subinterface_Vlan_Config_VlanId_Union_String is used when /openconfig-interfaces/interfaces/interface/subinterfaces/subinterface/vlan/config/vlan-id
// is to be set to a string value.
type OpenconfigInterfaces_Interfaces_Interface_Subinterfaces_Subinterface_Vlan_Config_VlanId_Union_String struct {
	String string
}

// Is_OpenconfigInterfaces_Interfaces_Interface_Subinterfaces_Subinterface_Vlan_Config_VlanId_Union ensures that OpenconfigInterfaces_Interfaces_Interface_Subinterfaces_Subinterface_Vlan_Config_VlanId_Union_String
// implements the OpenconfigInterfaces_Interfaces_Interface_Subinterfaces_Subinterface_Vlan_Config_VlanId_Union interface.
func (*OpenconfigInterfaces_Interfaces_Interface_Subinterfaces_Subinterface_Vlan_Config_VlanId_Union_String) Is_OpenconfigInterfaces_Interfaces_Interface_Subinterfaces_Subinterface_Vlan_Config_VlanId_Union() {}

// OpenconfigInterfaces_Interfaces_Interface_Subinterfaces_Subinterface_Vlan_Config_VlanId_Union_Uint16 is used when /openconfig-interfaces/interfaces/interface/subinterfaces/subinterface/vlan/config/vlan-id
// is to be set to a uint16 value.
type OpenconfigInterfaces_Interfaces_Interface_Subinterfaces_Subinterface_Vlan_Config_VlanId_Union_Uint16 struct {
	Uint16 uint16
}

// Is_OpenconfigInterfaces_Interfaces_Interface_Subinterfaces_Subinterface_Vlan_Config_VlanId_Union ensures that OpenconfigInterfaces_Interfaces_Interface_Subinterfaces_Subinterface_Vlan_Config_VlanId_Union_Uint16
// implements the OpenconfigInterfaces_Interfaces_Interface_Subinterfaces_Subinterface_Vlan_Config_VlanId_Union interface.
func (*OpenconfigInterfaces_Interfaces_Interface_Subinterfaces_Subinterface_Vlan_Config_VlanId_Union_Uint16) Is_OpenconfigInterfaces_Interfaces_Interface_Subinterfaces_Subinterface_Vlan_Config_VlanId_Union() {}

// To_OpenconfigInterfaces_Interfaces_Interface_Subinterfaces_Subinterface_Vlan_Config_VlanId_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigInterfaces_Interfaces_Interface_Subinterfaces_Subinterface_Vlan_Config_VlanId_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigInterfaces_Interfaces_Interface_Subinterfaces_Subinterface_Vlan_Config) To_OpenconfigInterfaces_Interfaces_Interface_Subinterfaces_Subinterface_Vlan_Config_VlanId_Union(i interface{}) (OpenconfigInterfaces_Interfaces_Interface_Subinterfaces_Subinterface_Vlan_Config_VlanId_Union, error) {
	switch v := i.(type) {
	case string:
		return &OpenconfigInterfaces_Interfaces_Interface_Subinterfaces_Subinterface_Vlan_Config_VlanId_Union_String{v}, nil
	case uint16:
		return &OpenconfigInterfaces_Interfaces_Interface_Subinterfaces_Subinterface_Vlan_Config_VlanId_Union_Uint16{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigInterfaces_Interfaces_Interface_Subinterfaces_Subinterface_Vlan_Config_VlanId_Union, unknown union type, got: %T, want any of [string, uint16]", i, i)
	}
}

// OpenconfigInterfaces_Interfaces_Interface_Subinterfaces_Subinterface_Vlan_State_VlanId_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-interfaces/interfaces/interface/subinterfaces/subinterface/vlan/state/vlan-id within the YANG schema.
type OpenconfigInterfaces_Interfaces_Interface_Subinterfaces_Subinterface_Vlan_State_VlanId_Union interface {
	Is_OpenconfigInterfaces_Interfaces_Interface_Subinterfaces_Subinterface_Vlan_State_VlanId_Union()
}

// OpenconfigInterfaces_Interfaces_Interface_Subinterfaces_Subinterface_Vlan_State_VlanId_Union_String is used when /openconfig-interfaces/interfaces/interface/subinterfaces/subinterface/vlan/state/vlan-id
// is to be set to a string value.
type OpenconfigInterfaces_Interfaces_Interface_Subinterfaces_Subinterface_Vlan_State_VlanId_Union_String struct {
	String string
}

// Is_OpenconfigInterfaces_Interfaces_Interface_Subinterfaces_Subinterface_Vlan_State_VlanId_Union ensures that OpenconfigInterfaces_Interfaces_Interface_Subinterfaces_Subinterface_Vlan_State_VlanId_Union_String
// implements the OpenconfigInterfaces_Interfaces_Interface_Subinterfaces_Subinterface_Vlan_State_VlanId_Union interface.
func (*OpenconfigInterfaces_Interfaces_Interface_Subinterfaces_Subinterface_Vlan_State_VlanId_Union_String) Is_OpenconfigInterfaces_Interfaces_Interface_Subinterfaces_Subinterface_Vlan_State_VlanId_Union() {}

// OpenconfigInterfaces_Interfaces_Interface_Subinterfaces_Subinterface_Vlan_State_VlanId_Union_Uint16 is used when /openconfig-interfaces/interfaces/interface/subinterfaces/subinterface/vlan/state/vlan-id
// is to be set to a uint16 value.
type OpenconfigInterfaces_Interfaces_Interface_Subinterfaces_Subinterface_Vlan_State_VlanId_Union_Uint16 struct {
	Uint16 uint16
}

// Is_OpenconfigInterfaces_Interfaces_Interface_Subinterfaces_Subinterface_Vlan_State_VlanId_Union ensures that OpenconfigInterfaces_Interfaces_Interface_Subinterfaces_Subinterface_Vlan_State_VlanId_Union_Uint16
// implements the OpenconfigInterfaces_Interfaces_Interface_Subinterfaces_Subinterface_Vlan_State_VlanId_Union interface.
func (*OpenconfigInterfaces_Interfaces_Interface_Subinterfaces_Subinterface_Vlan_State_VlanId_Union_Uint16) Is_OpenconfigInterfaces_Interfaces_Interface_Subinterfaces_Subinterface_Vlan_State_VlanId_Union() {}

// To_OpenconfigInterfaces_Interfaces_Interface_Subinterfaces_Subinterface_Vlan_State_VlanId_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigInterfaces_Interfaces_Interface_Subinterfaces_Subinterface_Vlan_State_VlanId_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigInterfaces_Interfaces_Interface_Subinterfaces_Subinterface_Vlan_State) To_OpenconfigInterfaces_Interfaces_Interface_Subinterfaces_Subinterface_Vlan_State_VlanId_Union(i interface{}) (OpenconfigInterfaces_Interfaces_Interface_Subinterfaces_Subinterface_Vlan_State_VlanId_Union, error) {
	switch v := i.(type) {
	case string:
		return &OpenconfigInterfaces_Interfaces_Interface_Subinterfaces_Subinterface_Vlan_State_VlanId_Union_String{v}, nil
	case uint16:
		return &OpenconfigInterfaces_Interfaces_Interface_Subinterfaces_Subinterface_Vlan_State_VlanId_Union_Uint16{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigInterfaces_Interfaces_Interface_Subinterfaces_Subinterface_Vlan_State_VlanId_Union, unknown union type, got: %T, want any of [string, uint16]", i, i)
	}
}

// OpenconfigLocalRouting_LocalRoutes_LocalAggregates_Aggregate_Config_SetTag_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-local-routing/local-routes/local-aggregates/aggregate/config/set-tag within the YANG schema.
type OpenconfigLocalRouting_LocalRoutes_LocalAggregates_Aggregate_Config_SetTag_Union interface {
	Is_OpenconfigLocalRouting_LocalRoutes_LocalAggregates_Aggregate_Config_SetTag_Union()
}

// OpenconfigLocalRouting_LocalRoutes_LocalAggregates_Aggregate_Config_SetTag_Union_String is used when /openconfig-local-routing/local-routes/local-aggregates/aggregate/config/set-tag
// is to be set to a string value.
type OpenconfigLocalRouting_LocalRoutes_LocalAggregates_Aggregate_Config_SetTag_Union_String struct {
	String string
}

// Is_OpenconfigLocalRouting_LocalRoutes_LocalAggregates_Aggregate_Config_SetTag_Union ensures that OpenconfigLocalRouting_LocalRoutes_LocalAggregates_Aggregate_Config_SetTag_Union_String
// implements the OpenconfigLocalRouting_LocalRoutes_LocalAggregates_Aggregate_Config_SetTag_Union interface.
func (*OpenconfigLocalRouting_LocalRoutes_LocalAggregates_Aggregate_Config_SetTag_Union_String) Is_OpenconfigLocalRouting_LocalRoutes_LocalAggregates_Aggregate_Config_SetTag_Union() {}

// OpenconfigLocalRouting_LocalRoutes_LocalAggregates_Aggregate_Config_SetTag_Union_Uint32 is used when /openconfig-local-routing/local-routes/local-aggregates/aggregate/config/set-tag
// is to be set to a uint32 value.
type OpenconfigLocalRouting_LocalRoutes_LocalAggregates_Aggregate_Config_SetTag_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigLocalRouting_LocalRoutes_LocalAggregates_Aggregate_Config_SetTag_Union ensures that OpenconfigLocalRouting_LocalRoutes_LocalAggregates_Aggregate_Config_SetTag_Union_Uint32
// implements the OpenconfigLocalRouting_LocalRoutes_LocalAggregates_Aggregate_Config_SetTag_Union interface.
func (*OpenconfigLocalRouting_LocalRoutes_LocalAggregates_Aggregate_Config_SetTag_Union_Uint32) Is_OpenconfigLocalRouting_LocalRoutes_LocalAggregates_Aggregate_Config_SetTag_Union() {}

// To_OpenconfigLocalRouting_LocalRoutes_LocalAggregates_Aggregate_Config_SetTag_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigLocalRouting_LocalRoutes_LocalAggregates_Aggregate_Config_SetTag_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigLocalRouting_LocalRoutes_LocalAggregates_Aggregate_Config) To_OpenconfigLocalRouting_LocalRoutes_LocalAggregates_Aggregate_Config_SetTag_Union(i interface{}) (OpenconfigLocalRouting_LocalRoutes_LocalAggregates_Aggregate_Config_SetTag_Union, error) {
	switch v := i.(type) {
	case string:
		return &OpenconfigLocalRouting_LocalRoutes_LocalAggregates_Aggregate_Config_SetTag_Union_String{v}, nil
	case uint32:
		return &OpenconfigLocalRouting_LocalRoutes_LocalAggregates_Aggregate_Config_SetTag_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigLocalRouting_LocalRoutes_LocalAggregates_Aggregate_Config_SetTag_Union, unknown union type, got: %T, want any of [string, uint32]", i, i)
	}
}

// OpenconfigLocalRouting_LocalRoutes_LocalAggregates_Aggregate_State_SetTag_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-local-routing/local-routes/local-aggregates/aggregate/state/set-tag within the YANG schema.
type OpenconfigLocalRouting_LocalRoutes_LocalAggregates_Aggregate_State_SetTag_Union interface {
	Is_OpenconfigLocalRouting_LocalRoutes_LocalAggregates_Aggregate_State_SetTag_Union()
}

// OpenconfigLocalRouting_LocalRoutes_LocalAggregates_Aggregate_State_SetTag_Union_String is used when /openconfig-local-routing/local-routes/local-aggregates/aggregate/state/set-tag
// is to be set to a string value.
type OpenconfigLocalRouting_LocalRoutes_LocalAggregates_Aggregate_State_SetTag_Union_String struct {
	String string
}

// Is_OpenconfigLocalRouting_LocalRoutes_LocalAggregates_Aggregate_State_SetTag_Union ensures that OpenconfigLocalRouting_LocalRoutes_LocalAggregates_Aggregate_State_SetTag_Union_String
// implements the OpenconfigLocalRouting_LocalRoutes_LocalAggregates_Aggregate_State_SetTag_Union interface.
func (*OpenconfigLocalRouting_LocalRoutes_LocalAggregates_Aggregate_State_SetTag_Union_String) Is_OpenconfigLocalRouting_LocalRoutes_LocalAggregates_Aggregate_State_SetTag_Union() {}

// OpenconfigLocalRouting_LocalRoutes_LocalAggregates_Aggregate_State_SetTag_Union_Uint32 is used when /openconfig-local-routing/local-routes/local-aggregates/aggregate/state/set-tag
// is to be set to a uint32 value.
type OpenconfigLocalRouting_LocalRoutes_LocalAggregates_Aggregate_State_SetTag_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigLocalRouting_LocalRoutes_LocalAggregates_Aggregate_State_SetTag_Union ensures that OpenconfigLocalRouting_LocalRoutes_LocalAggregates_Aggregate_State_SetTag_Union_Uint32
// implements the OpenconfigLocalRouting_LocalRoutes_LocalAggregates_Aggregate_State_SetTag_Union interface.
func (*OpenconfigLocalRouting_LocalRoutes_LocalAggregates_Aggregate_State_SetTag_Union_Uint32) Is_OpenconfigLocalRouting_LocalRoutes_LocalAggregates_Aggregate_State_SetTag_Union() {}

// To_OpenconfigLocalRouting_LocalRoutes_LocalAggregates_Aggregate_State_SetTag_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigLocalRouting_LocalRoutes_LocalAggregates_Aggregate_State_SetTag_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigLocalRouting_LocalRoutes_LocalAggregates_Aggregate_State) To_OpenconfigLocalRouting_LocalRoutes_LocalAggregates_Aggregate_State_SetTag_Union(i interface{}) (OpenconfigLocalRouting_LocalRoutes_LocalAggregates_Aggregate_State_SetTag_Union, error) {
	switch v := i.(type) {
	case string:
		return &OpenconfigLocalRouting_LocalRoutes_LocalAggregates_Aggregate_State_SetTag_Union_String{v}, nil
	case uint32:
		return &OpenconfigLocalRouting_LocalRoutes_LocalAggregates_Aggregate_State_SetTag_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigLocalRouting_LocalRoutes_LocalAggregates_Aggregate_State_SetTag_Union, unknown union type, got: %T, want any of [string, uint32]", i, i)
	}
}

// OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_Config_SetTag_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-local-routing/local-routes/static-routes/static/config/set-tag within the YANG schema.
type OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_Config_SetTag_Union interface {
	Is_OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_Config_SetTag_Union()
}

// OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_Config_SetTag_Union_String is used when /openconfig-local-routing/local-routes/static-routes/static/config/set-tag
// is to be set to a string value.
type OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_Config_SetTag_Union_String struct {
	String string
}

// Is_OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_Config_SetTag_Union ensures that OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_Config_SetTag_Union_String
// implements the OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_Config_SetTag_Union interface.
func (*OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_Config_SetTag_Union_String) Is_OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_Config_SetTag_Union() {}

// OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_Config_SetTag_Union_Uint32 is used when /openconfig-local-routing/local-routes/static-routes/static/config/set-tag
// is to be set to a uint32 value.
type OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_Config_SetTag_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_Config_SetTag_Union ensures that OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_Config_SetTag_Union_Uint32
// implements the OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_Config_SetTag_Union interface.
func (*OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_Config_SetTag_Union_Uint32) Is_OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_Config_SetTag_Union() {}

// To_OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_Config_SetTag_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_Config_SetTag_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_Config) To_OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_Config_SetTag_Union(i interface{}) (OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_Config_SetTag_Union, error) {
	switch v := i.(type) {
	case string:
		return &OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_Config_SetTag_Union_String{v}, nil
	case uint32:
		return &OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_Config_SetTag_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_Config_SetTag_Union, unknown union type, got: %T, want any of [string, uint32]", i, i)
	}
}

// OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_NextHops_NextHop_Config_NextHop_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-local-routing/local-routes/static-routes/static/next-hops/next-hop/config/next-hop within the YANG schema.
type OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_NextHops_NextHop_Config_NextHop_Union interface {
	Is_OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_NextHops_NextHop_Config_NextHop_Union()
}

// OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_NextHops_NextHop_Config_NextHop_Union_E_OpenconfigLocalRouting_LOCAL_DEFINED_NEXT_HOP is used when /openconfig-local-routing/local-routes/static-routes/static/next-hops/next-hop/config/next-hop
// is to be set to a E_OpenconfigLocalRouting_LOCAL_DEFINED_NEXT_HOP value.
type OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_NextHops_NextHop_Config_NextHop_Union_E_OpenconfigLocalRouting_LOCAL_DEFINED_NEXT_HOP struct {
	E_OpenconfigLocalRouting_LOCAL_DEFINED_NEXT_HOP E_OpenconfigLocalRouting_LOCAL_DEFINED_NEXT_HOP
}

// Is_OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_NextHops_NextHop_Config_NextHop_Union ensures that OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_NextHops_NextHop_Config_NextHop_Union_E_OpenconfigLocalRouting_LOCAL_DEFINED_NEXT_HOP
// implements the OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_NextHops_NextHop_Config_NextHop_Union interface.
func (*OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_NextHops_NextHop_Config_NextHop_Union_E_OpenconfigLocalRouting_LOCAL_DEFINED_NEXT_HOP) Is_OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_NextHops_NextHop_Config_NextHop_Union() {}

// OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_NextHops_NextHop_Config_NextHop_Union_String is used when /openconfig-local-routing/local-routes/static-routes/static/next-hops/next-hop/config/next-hop
// is to be set to a string value.
type OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_NextHops_NextHop_Config_NextHop_Union_String struct {
	String string
}

// Is_OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_NextHops_NextHop_Config_NextHop_Union ensures that OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_NextHops_NextHop_Config_NextHop_Union_String
// implements the OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_NextHops_NextHop_Config_NextHop_Union interface.
func (*OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_NextHops_NextHop_Config_NextHop_Union_String) Is_OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_NextHops_NextHop_Config_NextHop_Union() {}

// To_OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_NextHops_NextHop_Config_NextHop_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_NextHops_NextHop_Config_NextHop_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_NextHops_NextHop_Config) To_OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_NextHops_NextHop_Config_NextHop_Union(i interface{}) (OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_NextHops_NextHop_Config_NextHop_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigLocalRouting_LOCAL_DEFINED_NEXT_HOP:
		return &OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_NextHops_NextHop_Config_NextHop_Union_E_OpenconfigLocalRouting_LOCAL_DEFINED_NEXT_HOP{v}, nil
	case string:
		return &OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_NextHops_NextHop_Config_NextHop_Union_String{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_NextHops_NextHop_Config_NextHop_Union, unknown union type, got: %T, want any of [E_OpenconfigLocalRouting_LOCAL_DEFINED_NEXT_HOP, string]", i, i)
	}
}

// OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_NextHops_NextHop_State_NextHop_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-local-routing/local-routes/static-routes/static/next-hops/next-hop/state/next-hop within the YANG schema.
type OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_NextHops_NextHop_State_NextHop_Union interface {
	Is_OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_NextHops_NextHop_State_NextHop_Union()
}

// OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_NextHops_NextHop_State_NextHop_Union_E_OpenconfigLocalRouting_LOCAL_DEFINED_NEXT_HOP is used when /openconfig-local-routing/local-routes/static-routes/static/next-hops/next-hop/state/next-hop
// is to be set to a E_OpenconfigLocalRouting_LOCAL_DEFINED_NEXT_HOP value.
type OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_NextHops_NextHop_State_NextHop_Union_E_OpenconfigLocalRouting_LOCAL_DEFINED_NEXT_HOP struct {
	E_OpenconfigLocalRouting_LOCAL_DEFINED_NEXT_HOP E_OpenconfigLocalRouting_LOCAL_DEFINED_NEXT_HOP
}

// Is_OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_NextHops_NextHop_State_NextHop_Union ensures that OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_NextHops_NextHop_State_NextHop_Union_E_OpenconfigLocalRouting_LOCAL_DEFINED_NEXT_HOP
// implements the OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_NextHops_NextHop_State_NextHop_Union interface.
func (*OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_NextHops_NextHop_State_NextHop_Union_E_OpenconfigLocalRouting_LOCAL_DEFINED_NEXT_HOP) Is_OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_NextHops_NextHop_State_NextHop_Union() {}

// OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_NextHops_NextHop_State_NextHop_Union_String is used when /openconfig-local-routing/local-routes/static-routes/static/next-hops/next-hop/state/next-hop
// is to be set to a string value.
type OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_NextHops_NextHop_State_NextHop_Union_String struct {
	String string
}

// Is_OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_NextHops_NextHop_State_NextHop_Union ensures that OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_NextHops_NextHop_State_NextHop_Union_String
// implements the OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_NextHops_NextHop_State_NextHop_Union interface.
func (*OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_NextHops_NextHop_State_NextHop_Union_String) Is_OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_NextHops_NextHop_State_NextHop_Union() {}

// To_OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_NextHops_NextHop_State_NextHop_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_NextHops_NextHop_State_NextHop_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_NextHops_NextHop_State) To_OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_NextHops_NextHop_State_NextHop_Union(i interface{}) (OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_NextHops_NextHop_State_NextHop_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigLocalRouting_LOCAL_DEFINED_NEXT_HOP:
		return &OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_NextHops_NextHop_State_NextHop_Union_E_OpenconfigLocalRouting_LOCAL_DEFINED_NEXT_HOP{v}, nil
	case string:
		return &OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_NextHops_NextHop_State_NextHop_Union_String{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_NextHops_NextHop_State_NextHop_Union, unknown union type, got: %T, want any of [E_OpenconfigLocalRouting_LOCAL_DEFINED_NEXT_HOP, string]", i, i)
	}
}

// OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_State_SetTag_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-local-routing/local-routes/static-routes/static/state/set-tag within the YANG schema.
type OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_State_SetTag_Union interface {
	Is_OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_State_SetTag_Union()
}

// OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_State_SetTag_Union_String is used when /openconfig-local-routing/local-routes/static-routes/static/state/set-tag
// is to be set to a string value.
type OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_State_SetTag_Union_String struct {
	String string
}

// Is_OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_State_SetTag_Union ensures that OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_State_SetTag_Union_String
// implements the OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_State_SetTag_Union interface.
func (*OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_State_SetTag_Union_String) Is_OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_State_SetTag_Union() {}

// OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_State_SetTag_Union_Uint32 is used when /openconfig-local-routing/local-routes/static-routes/static/state/set-tag
// is to be set to a uint32 value.
type OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_State_SetTag_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_State_SetTag_Union ensures that OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_State_SetTag_Union_Uint32
// implements the OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_State_SetTag_Union interface.
func (*OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_State_SetTag_Union_Uint32) Is_OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_State_SetTag_Union() {}

// To_OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_State_SetTag_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_State_SetTag_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_State) To_OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_State_SetTag_Union(i interface{}) (OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_State_SetTag_Union, error) {
	switch v := i.(type) {
	case string:
		return &OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_State_SetTag_Union_String{v}, nil
	case uint32:
		return &OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_State_SetTag_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigLocalRouting_LocalRoutes_StaticRoutes_Static_State_SetTag_Union, unknown union type, got: %T, want any of [string, uint32]", i, i)
	}
}

// OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-mpls/mpls/global/reserved-label-blocks/reserved-label-block/config/lower-bound within the YANG schema.
type OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound_Union interface {
	Is_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound_Union()
}

// OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound_Union_E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound is used when /openconfig-mpls/mpls/global/reserved-label-blocks/reserved-label-block/config/lower-bound
// is to be set to a E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound value.
type OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound_Union_E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound struct {
	E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound
}

// Is_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound_Union ensures that OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound_Union_E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound
// implements the OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound_Union interface.
func (*OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound_Union_E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound) Is_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound_Union() {}

// OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound_Union_Uint32 is used when /openconfig-mpls/mpls/global/reserved-label-blocks/reserved-label-block/config/lower-bound
// is to be set to a uint32 value.
type OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound_Union ensures that OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound_Union_Uint32
// implements the OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound_Union interface.
func (*OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound_Union_Uint32) Is_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound_Union() {}

// To_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config) To_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound_Union(i interface{}) (OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound:
		return &OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound_Union_E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound{v}, nil
	case uint32:
		return &OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound_Union, unknown union type, got: %T, want any of [E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound, uint32]", i, i)
	}
}

// OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-mpls/mpls/global/reserved-label-blocks/reserved-label-block/config/upper-bound within the YANG schema.
type OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound_Union interface {
	Is_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound_Union()
}

// OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound_Union_E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound is used when /openconfig-mpls/mpls/global/reserved-label-blocks/reserved-label-block/config/upper-bound
// is to be set to a E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound value.
type OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound_Union_E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound struct {
	E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound
}

// Is_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound_Union ensures that OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound_Union_E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound
// implements the OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound_Union interface.
func (*OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound_Union_E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound) Is_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound_Union() {}

// OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound_Union_Uint32 is used when /openconfig-mpls/mpls/global/reserved-label-blocks/reserved-label-block/config/upper-bound
// is to be set to a uint32 value.
type OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound_Union ensures that OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound_Union_Uint32
// implements the OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound_Union interface.
func (*OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound_Union_Uint32) Is_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound_Union() {}

// To_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config) To_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound_Union(i interface{}) (OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound:
		return &OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound_Union_E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound{v}, nil
	case uint32:
		return &OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound_Union, unknown union type, got: %T, want any of [E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound, uint32]", i, i)
	}
}

// OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_LowerBound_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-mpls/mpls/global/reserved-label-blocks/reserved-label-block/state/lower-bound within the YANG schema.
type OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_LowerBound_Union interface {
	Is_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_LowerBound_Union()
}

// OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_LowerBound_Union_E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound is used when /openconfig-mpls/mpls/global/reserved-label-blocks/reserved-label-block/state/lower-bound
// is to be set to a E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound value.
type OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_LowerBound_Union_E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound struct {
	E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound
}

// Is_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_LowerBound_Union ensures that OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_LowerBound_Union_E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound
// implements the OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_LowerBound_Union interface.
func (*OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_LowerBound_Union_E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound) Is_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_LowerBound_Union() {}

// OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_LowerBound_Union_Uint32 is used when /openconfig-mpls/mpls/global/reserved-label-blocks/reserved-label-block/state/lower-bound
// is to be set to a uint32 value.
type OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_LowerBound_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_LowerBound_Union ensures that OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_LowerBound_Union_Uint32
// implements the OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_LowerBound_Union interface.
func (*OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_LowerBound_Union_Uint32) Is_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_LowerBound_Union() {}

// To_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_LowerBound_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_LowerBound_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State) To_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_LowerBound_Union(i interface{}) (OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_LowerBound_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound:
		return &OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_LowerBound_Union_E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound{v}, nil
	case uint32:
		return &OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_LowerBound_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_LowerBound_Union, unknown union type, got: %T, want any of [E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound, uint32]", i, i)
	}
}

// OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_UpperBound_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-mpls/mpls/global/reserved-label-blocks/reserved-label-block/state/upper-bound within the YANG schema.
type OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_UpperBound_Union interface {
	Is_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_UpperBound_Union()
}

// OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_UpperBound_Union_E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound is used when /openconfig-mpls/mpls/global/reserved-label-blocks/reserved-label-block/state/upper-bound
// is to be set to a E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound value.
type OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_UpperBound_Union_E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound struct {
	E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound
}

// Is_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_UpperBound_Union ensures that OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_UpperBound_Union_E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound
// implements the OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_UpperBound_Union interface.
func (*OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_UpperBound_Union_E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound) Is_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_UpperBound_Union() {}

// OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_UpperBound_Union_Uint32 is used when /openconfig-mpls/mpls/global/reserved-label-blocks/reserved-label-block/state/upper-bound
// is to be set to a uint32 value.
type OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_UpperBound_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_UpperBound_Union ensures that OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_UpperBound_Union_Uint32
// implements the OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_UpperBound_Union interface.
func (*OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_UpperBound_Union_Uint32) Is_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_UpperBound_Union() {}

// To_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_UpperBound_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_UpperBound_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State) To_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_UpperBound_Union(i interface{}) (OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_UpperBound_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound:
		return &OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_UpperBound_Union_E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound{v}, nil
	case uint32:
		return &OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_UpperBound_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_UpperBound_Union, unknown union type, got: %T, want any of [E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound, uint32]", i, i)
	}
}

// OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-mpls/mpls/lsps/static-lsps/static-lsp/egress/config/incoming-label within the YANG schema.
type OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel_Union interface {
	Is_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel_Union()
}

// OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel is used when /openconfig-mpls/mpls/lsps/static-lsps/static-lsp/egress/config/incoming-label
// is to be set to a E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel value.
type OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel struct {
	E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel
}

// Is_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel_Union ensures that OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel
// implements the OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel_Union interface.
func (*OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel) Is_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel_Union() {}

// OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel_Union_Uint32 is used when /openconfig-mpls/mpls/lsps/static-lsps/static-lsp/egress/config/incoming-label
// is to be set to a uint32 value.
type OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel_Union ensures that OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel_Union_Uint32
// implements the OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel_Union interface.
func (*OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel_Union_Uint32) Is_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel_Union() {}

// To_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config) To_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel_Union(i interface{}) (OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel:
		return &OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel{v}, nil
	case uint32:
		return &OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel_Union, unknown union type, got: %T, want any of [E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel, uint32]", i, i)
	}
}

// OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-mpls/mpls/lsps/static-lsps/static-lsp/egress/config/push-label within the YANG schema.
type OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel_Union interface {
	Is_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel_Union()
}

// OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel is used when /openconfig-mpls/mpls/lsps/static-lsps/static-lsp/egress/config/push-label
// is to be set to a E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel value.
type OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel struct {
	E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel
}

// Is_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel_Union ensures that OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel
// implements the OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel_Union interface.
func (*OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel) Is_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel_Union() {}

// OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel_Union_Uint32 is used when /openconfig-mpls/mpls/lsps/static-lsps/static-lsp/egress/config/push-label
// is to be set to a uint32 value.
type OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel_Union ensures that OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel_Union_Uint32
// implements the OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel_Union interface.
func (*OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel_Union_Uint32) Is_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel_Union() {}

// To_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config) To_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel_Union(i interface{}) (OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel:
		return &OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel{v}, nil
	case uint32:
		return &OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel_Union, unknown union type, got: %T, want any of [E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel, uint32]", i, i)
	}
}

// OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_IncomingLabel_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-mpls/mpls/lsps/static-lsps/static-lsp/egress/state/incoming-label within the YANG schema.
type OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_IncomingLabel_Union interface {
	Is_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_IncomingLabel_Union()
}

// OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_IncomingLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel is used when /openconfig-mpls/mpls/lsps/static-lsps/static-lsp/egress/state/incoming-label
// is to be set to a E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel value.
type OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_IncomingLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel struct {
	E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel
}

// Is_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_IncomingLabel_Union ensures that OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_IncomingLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel
// implements the OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_IncomingLabel_Union interface.
func (*OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_IncomingLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel) Is_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_IncomingLabel_Union() {}

// OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_IncomingLabel_Union_Uint32 is used when /openconfig-mpls/mpls/lsps/static-lsps/static-lsp/egress/state/incoming-label
// is to be set to a uint32 value.
type OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_IncomingLabel_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_IncomingLabel_Union ensures that OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_IncomingLabel_Union_Uint32
// implements the OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_IncomingLabel_Union interface.
func (*OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_IncomingLabel_Union_Uint32) Is_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_IncomingLabel_Union() {}

// To_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_IncomingLabel_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_IncomingLabel_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State) To_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_IncomingLabel_Union(i interface{}) (OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_IncomingLabel_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel:
		return &OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_IncomingLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel{v}, nil
	case uint32:
		return &OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_IncomingLabel_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_IncomingLabel_Union, unknown union type, got: %T, want any of [E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel, uint32]", i, i)
	}
}

// OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_PushLabel_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-mpls/mpls/lsps/static-lsps/static-lsp/egress/state/push-label within the YANG schema.
type OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_PushLabel_Union interface {
	Is_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_PushLabel_Union()
}

// OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_PushLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel is used when /openconfig-mpls/mpls/lsps/static-lsps/static-lsp/egress/state/push-label
// is to be set to a E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel value.
type OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_PushLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel struct {
	E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel
}

// Is_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_PushLabel_Union ensures that OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_PushLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel
// implements the OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_PushLabel_Union interface.
func (*OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_PushLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel) Is_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_PushLabel_Union() {}

// OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_PushLabel_Union_Uint32 is used when /openconfig-mpls/mpls/lsps/static-lsps/static-lsp/egress/state/push-label
// is to be set to a uint32 value.
type OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_PushLabel_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_PushLabel_Union ensures that OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_PushLabel_Union_Uint32
// implements the OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_PushLabel_Union interface.
func (*OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_PushLabel_Union_Uint32) Is_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_PushLabel_Union() {}

// To_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_PushLabel_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_PushLabel_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State) To_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_PushLabel_Union(i interface{}) (OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_PushLabel_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel:
		return &OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_PushLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel{v}, nil
	case uint32:
		return &OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_PushLabel_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_PushLabel_Union, unknown union type, got: %T, want any of [E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel, uint32]", i, i)
	}
}

// OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_IncomingLabel_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-mpls/mpls/lsps/static-lsps/static-lsp/ingress/config/incoming-label within the YANG schema.
type OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_IncomingLabel_Union interface {
	Is_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_IncomingLabel_Union()
}

// OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_IncomingLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel is used when /openconfig-mpls/mpls/lsps/static-lsps/static-lsp/ingress/config/incoming-label
// is to be set to a E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel value.
type OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_IncomingLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel struct {
	E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel
}

// Is_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_IncomingLabel_Union ensures that OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_IncomingLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel
// implements the OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_IncomingLabel_Union interface.
func (*OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_IncomingLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel) Is_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_IncomingLabel_Union() {}

// OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_IncomingLabel_Union_Uint32 is used when /openconfig-mpls/mpls/lsps/static-lsps/static-lsp/ingress/config/incoming-label
// is to be set to a uint32 value.
type OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_IncomingLabel_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_IncomingLabel_Union ensures that OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_IncomingLabel_Union_Uint32
// implements the OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_IncomingLabel_Union interface.
func (*OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_IncomingLabel_Union_Uint32) Is_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_IncomingLabel_Union() {}

// To_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_IncomingLabel_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_IncomingLabel_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config) To_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_IncomingLabel_Union(i interface{}) (OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_IncomingLabel_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel:
		return &OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_IncomingLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel{v}, nil
	case uint32:
		return &OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_IncomingLabel_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_IncomingLabel_Union, unknown union type, got: %T, want any of [E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel, uint32]", i, i)
	}
}

// OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_PushLabel_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-mpls/mpls/lsps/static-lsps/static-lsp/ingress/config/push-label within the YANG schema.
type OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_PushLabel_Union interface {
	Is_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_PushLabel_Union()
}

// OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_PushLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel is used when /openconfig-mpls/mpls/lsps/static-lsps/static-lsp/ingress/config/push-label
// is to be set to a E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel value.
type OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_PushLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel struct {
	E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel
}

// Is_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_PushLabel_Union ensures that OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_PushLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel
// implements the OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_PushLabel_Union interface.
func (*OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_PushLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel) Is_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_PushLabel_Union() {}

// OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_PushLabel_Union_Uint32 is used when /openconfig-mpls/mpls/lsps/static-lsps/static-lsp/ingress/config/push-label
// is to be set to a uint32 value.
type OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_PushLabel_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_PushLabel_Union ensures that OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_PushLabel_Union_Uint32
// implements the OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_PushLabel_Union interface.
func (*OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_PushLabel_Union_Uint32) Is_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_PushLabel_Union() {}

// To_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_PushLabel_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_PushLabel_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config) To_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_PushLabel_Union(i interface{}) (OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_PushLabel_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel:
		return &OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_PushLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel{v}, nil
	case uint32:
		return &OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_PushLabel_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_PushLabel_Union, unknown union type, got: %T, want any of [E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel, uint32]", i, i)
	}
}

// OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_IncomingLabel_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-mpls/mpls/lsps/static-lsps/static-lsp/ingress/state/incoming-label within the YANG schema.
type OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_IncomingLabel_Union interface {
	Is_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_IncomingLabel_Union()
}

// OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_IncomingLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel is used when /openconfig-mpls/mpls/lsps/static-lsps/static-lsp/ingress/state/incoming-label
// is to be set to a E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel value.
type OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_IncomingLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel struct {
	E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel
}

// Is_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_IncomingLabel_Union ensures that OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_IncomingLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel
// implements the OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_IncomingLabel_Union interface.
func (*OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_IncomingLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel) Is_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_IncomingLabel_Union() {}

// OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_IncomingLabel_Union_Uint32 is used when /openconfig-mpls/mpls/lsps/static-lsps/static-lsp/ingress/state/incoming-label
// is to be set to a uint32 value.
type OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_IncomingLabel_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_IncomingLabel_Union ensures that OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_IncomingLabel_Union_Uint32
// implements the OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_IncomingLabel_Union interface.
func (*OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_IncomingLabel_Union_Uint32) Is_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_IncomingLabel_Union() {}

// To_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_IncomingLabel_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_IncomingLabel_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State) To_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_IncomingLabel_Union(i interface{}) (OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_IncomingLabel_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel:
		return &OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_IncomingLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel{v}, nil
	case uint32:
		return &OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_IncomingLabel_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_IncomingLabel_Union, unknown union type, got: %T, want any of [E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel, uint32]", i, i)
	}
}

// OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_PushLabel_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-mpls/mpls/lsps/static-lsps/static-lsp/ingress/state/push-label within the YANG schema.
type OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_PushLabel_Union interface {
	Is_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_PushLabel_Union()
}

// OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_PushLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel is used when /openconfig-mpls/mpls/lsps/static-lsps/static-lsp/ingress/state/push-label
// is to be set to a E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel value.
type OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_PushLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel struct {
	E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel
}

// Is_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_PushLabel_Union ensures that OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_PushLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel
// implements the OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_PushLabel_Union interface.
func (*OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_PushLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel) Is_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_PushLabel_Union() {}

// OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_PushLabel_Union_Uint32 is used when /openconfig-mpls/mpls/lsps/static-lsps/static-lsp/ingress/state/push-label
// is to be set to a uint32 value.
type OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_PushLabel_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_PushLabel_Union ensures that OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_PushLabel_Union_Uint32
// implements the OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_PushLabel_Union interface.
func (*OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_PushLabel_Union_Uint32) Is_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_PushLabel_Union() {}

// To_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_PushLabel_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_PushLabel_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State) To_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_PushLabel_Union(i interface{}) (OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_PushLabel_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel:
		return &OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_PushLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel{v}, nil
	case uint32:
		return &OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_PushLabel_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_PushLabel_Union, unknown union type, got: %T, want any of [E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel, uint32]", i, i)
	}
}

// OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_IncomingLabel_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-mpls/mpls/lsps/static-lsps/static-lsp/transit/config/incoming-label within the YANG schema.
type OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_IncomingLabel_Union interface {
	Is_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_IncomingLabel_Union()
}

// OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_IncomingLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel is used when /openconfig-mpls/mpls/lsps/static-lsps/static-lsp/transit/config/incoming-label
// is to be set to a E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel value.
type OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_IncomingLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel struct {
	E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel
}

// Is_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_IncomingLabel_Union ensures that OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_IncomingLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel
// implements the OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_IncomingLabel_Union interface.
func (*OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_IncomingLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel) Is_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_IncomingLabel_Union() {}

// OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_IncomingLabel_Union_Uint32 is used when /openconfig-mpls/mpls/lsps/static-lsps/static-lsp/transit/config/incoming-label
// is to be set to a uint32 value.
type OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_IncomingLabel_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_IncomingLabel_Union ensures that OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_IncomingLabel_Union_Uint32
// implements the OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_IncomingLabel_Union interface.
func (*OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_IncomingLabel_Union_Uint32) Is_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_IncomingLabel_Union() {}

// To_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_IncomingLabel_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_IncomingLabel_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config) To_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_IncomingLabel_Union(i interface{}) (OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_IncomingLabel_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel:
		return &OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_IncomingLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel{v}, nil
	case uint32:
		return &OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_IncomingLabel_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_IncomingLabel_Union, unknown union type, got: %T, want any of [E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel, uint32]", i, i)
	}
}

// OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_PushLabel_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-mpls/mpls/lsps/static-lsps/static-lsp/transit/config/push-label within the YANG schema.
type OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_PushLabel_Union interface {
	Is_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_PushLabel_Union()
}

// OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_PushLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel is used when /openconfig-mpls/mpls/lsps/static-lsps/static-lsp/transit/config/push-label
// is to be set to a E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel value.
type OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_PushLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel struct {
	E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel
}

// Is_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_PushLabel_Union ensures that OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_PushLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel
// implements the OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_PushLabel_Union interface.
func (*OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_PushLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel) Is_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_PushLabel_Union() {}

// OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_PushLabel_Union_Uint32 is used when /openconfig-mpls/mpls/lsps/static-lsps/static-lsp/transit/config/push-label
// is to be set to a uint32 value.
type OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_PushLabel_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_PushLabel_Union ensures that OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_PushLabel_Union_Uint32
// implements the OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_PushLabel_Union interface.
func (*OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_PushLabel_Union_Uint32) Is_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_PushLabel_Union() {}

// To_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_PushLabel_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_PushLabel_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config) To_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_PushLabel_Union(i interface{}) (OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_PushLabel_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel:
		return &OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_PushLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel{v}, nil
	case uint32:
		return &OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_PushLabel_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_PushLabel_Union, unknown union type, got: %T, want any of [E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel, uint32]", i, i)
	}
}

// OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_IncomingLabel_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-mpls/mpls/lsps/static-lsps/static-lsp/transit/state/incoming-label within the YANG schema.
type OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_IncomingLabel_Union interface {
	Is_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_IncomingLabel_Union()
}

// OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_IncomingLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel is used when /openconfig-mpls/mpls/lsps/static-lsps/static-lsp/transit/state/incoming-label
// is to be set to a E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel value.
type OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_IncomingLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel struct {
	E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel
}

// Is_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_IncomingLabel_Union ensures that OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_IncomingLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel
// implements the OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_IncomingLabel_Union interface.
func (*OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_IncomingLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel) Is_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_IncomingLabel_Union() {}

// OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_IncomingLabel_Union_Uint32 is used when /openconfig-mpls/mpls/lsps/static-lsps/static-lsp/transit/state/incoming-label
// is to be set to a uint32 value.
type OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_IncomingLabel_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_IncomingLabel_Union ensures that OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_IncomingLabel_Union_Uint32
// implements the OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_IncomingLabel_Union interface.
func (*OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_IncomingLabel_Union_Uint32) Is_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_IncomingLabel_Union() {}

// To_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_IncomingLabel_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_IncomingLabel_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State) To_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_IncomingLabel_Union(i interface{}) (OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_IncomingLabel_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel:
		return &OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_IncomingLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel{v}, nil
	case uint32:
		return &OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_IncomingLabel_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_IncomingLabel_Union, unknown union type, got: %T, want any of [E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel, uint32]", i, i)
	}
}

// OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_PushLabel_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-mpls/mpls/lsps/static-lsps/static-lsp/transit/state/push-label within the YANG schema.
type OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_PushLabel_Union interface {
	Is_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_PushLabel_Union()
}

// OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_PushLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel is used when /openconfig-mpls/mpls/lsps/static-lsps/static-lsp/transit/state/push-label
// is to be set to a E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel value.
type OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_PushLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel struct {
	E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel
}

// Is_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_PushLabel_Union ensures that OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_PushLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel
// implements the OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_PushLabel_Union interface.
func (*OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_PushLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel) Is_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_PushLabel_Union() {}

// OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_PushLabel_Union_Uint32 is used when /openconfig-mpls/mpls/lsps/static-lsps/static-lsp/transit/state/push-label
// is to be set to a uint32 value.
type OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_PushLabel_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_PushLabel_Union ensures that OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_PushLabel_Union_Uint32
// implements the OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_PushLabel_Union interface.
func (*OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_PushLabel_Union_Uint32) Is_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_PushLabel_Union() {}

// To_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_PushLabel_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_PushLabel_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State) To_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_PushLabel_Union(i interface{}) (OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_PushLabel_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel:
		return &OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_PushLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel{v}, nil
	case uint32:
		return &OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_PushLabel_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_PushLabel_Union, unknown union type, got: %T, want any of [E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel, uint32]", i, i)
	}
}

// OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_InterfaceAttributes_Interface_BandwidthReservations_BandwidthReservation_State_Priority_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-mpls/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/bandwidth-reservations/bandwidth-reservation/priority within the YANG schema.
type OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_InterfaceAttributes_Interface_BandwidthReservations_BandwidthReservation_State_Priority_Union interface {
	Is_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_InterfaceAttributes_Interface_BandwidthReservations_BandwidthReservation_State_Priority_Union()
}

// OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_InterfaceAttributes_Interface_BandwidthReservations_BandwidthReservation_State_Priority_Union_E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_InterfaceAttributes_Interface_BandwidthReservations_BandwidthReservation_State_Priority is used when /openconfig-mpls/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/bandwidth-reservations/bandwidth-reservation/priority
// is to be set to a E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_InterfaceAttributes_Interface_BandwidthReservations_BandwidthReservation_State_Priority value.
type OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_InterfaceAttributes_Interface_BandwidthReservations_BandwidthReservation_State_Priority_Union_E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_InterfaceAttributes_Interface_BandwidthReservations_BandwidthReservation_State_Priority struct {
	E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_InterfaceAttributes_Interface_BandwidthReservations_BandwidthReservation_State_Priority E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_InterfaceAttributes_Interface_BandwidthReservations_BandwidthReservation_State_Priority
}

// Is_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_InterfaceAttributes_Interface_BandwidthReservations_BandwidthReservation_State_Priority_Union ensures that OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_InterfaceAttributes_Interface_BandwidthReservations_BandwidthReservation_State_Priority_Union_E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_InterfaceAttributes_Interface_BandwidthReservations_BandwidthReservation_State_Priority
// implements the OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_InterfaceAttributes_Interface_BandwidthReservations_BandwidthReservation_State_Priority_Union interface.
func (*OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_InterfaceAttributes_Interface_BandwidthReservations_BandwidthReservation_State_Priority_Union_E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_InterfaceAttributes_Interface_BandwidthReservations_BandwidthReservation_State_Priority) Is_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_InterfaceAttributes_Interface_BandwidthReservations_BandwidthReservation_State_Priority_Union() {}

// OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_InterfaceAttributes_Interface_BandwidthReservations_BandwidthReservation_State_Priority_Union_Uint8 is used when /openconfig-mpls/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/bandwidth-reservations/bandwidth-reservation/priority
// is to be set to a uint8 value.
type OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_InterfaceAttributes_Interface_BandwidthReservations_BandwidthReservation_State_Priority_Union_Uint8 struct {
	Uint8 uint8
}

// Is_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_InterfaceAttributes_Interface_BandwidthReservations_BandwidthReservation_State_Priority_Union ensures that OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_InterfaceAttributes_Interface_BandwidthReservations_BandwidthReservation_State_Priority_Union_Uint8
// implements the OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_InterfaceAttributes_Interface_BandwidthReservations_BandwidthReservation_State_Priority_Union interface.
func (*OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_InterfaceAttributes_Interface_BandwidthReservations_BandwidthReservation_State_Priority_Union_Uint8) Is_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_InterfaceAttributes_Interface_BandwidthReservations_BandwidthReservation_State_Priority_Union() {}

// To_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_InterfaceAttributes_Interface_BandwidthReservations_BandwidthReservation_State_Priority_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_InterfaceAttributes_Interface_BandwidthReservations_BandwidthReservation_State_Priority_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_InterfaceAttributes_Interface_BandwidthReservations_BandwidthReservation) To_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_InterfaceAttributes_Interface_BandwidthReservations_BandwidthReservation_State_Priority_Union(i interface{}) (OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_InterfaceAttributes_Interface_BandwidthReservations_BandwidthReservation_State_Priority_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_InterfaceAttributes_Interface_BandwidthReservations_BandwidthReservation_State_Priority:
		return &OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_InterfaceAttributes_Interface_BandwidthReservations_BandwidthReservation_State_Priority_Union_E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_InterfaceAttributes_Interface_BandwidthReservations_BandwidthReservation_State_Priority{v}, nil
	case uint8:
		return &OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_InterfaceAttributes_Interface_BandwidthReservations_BandwidthReservation_State_Priority_Union_Uint8{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_InterfaceAttributes_Interface_BandwidthReservations_BandwidthReservation_State_Priority_Union, unknown union type, got: %T, want any of [E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_InterfaceAttributes_Interface_BandwidthReservations_BandwidthReservation_State_Priority, uint8]", i, i)
	}
}

// OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_RecordRouteObjects_RecordRouteObject_State_ReportedLabel_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-mpls/mpls/signaling-protocols/rsvp-te/sessions/session/record-route-objects/record-route-object/state/reported-label within the YANG schema.
type OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_RecordRouteObjects_RecordRouteObject_State_ReportedLabel_Union interface {
	Is_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_RecordRouteObjects_RecordRouteObject_State_ReportedLabel_Union()
}

// OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_RecordRouteObjects_RecordRouteObject_State_ReportedLabel_Union_E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_RecordRouteObjects_RecordRouteObject_State_ReportedLabel is used when /openconfig-mpls/mpls/signaling-protocols/rsvp-te/sessions/session/record-route-objects/record-route-object/state/reported-label
// is to be set to a E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_RecordRouteObjects_RecordRouteObject_State_ReportedLabel value.
type OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_RecordRouteObjects_RecordRouteObject_State_ReportedLabel_Union_E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_RecordRouteObjects_RecordRouteObject_State_ReportedLabel struct {
	E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_RecordRouteObjects_RecordRouteObject_State_ReportedLabel E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_RecordRouteObjects_RecordRouteObject_State_ReportedLabel
}

// Is_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_RecordRouteObjects_RecordRouteObject_State_ReportedLabel_Union ensures that OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_RecordRouteObjects_RecordRouteObject_State_ReportedLabel_Union_E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_RecordRouteObjects_RecordRouteObject_State_ReportedLabel
// implements the OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_RecordRouteObjects_RecordRouteObject_State_ReportedLabel_Union interface.
func (*OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_RecordRouteObjects_RecordRouteObject_State_ReportedLabel_Union_E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_RecordRouteObjects_RecordRouteObject_State_ReportedLabel) Is_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_RecordRouteObjects_RecordRouteObject_State_ReportedLabel_Union() {}

// OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_RecordRouteObjects_RecordRouteObject_State_ReportedLabel_Union_Uint32 is used when /openconfig-mpls/mpls/signaling-protocols/rsvp-te/sessions/session/record-route-objects/record-route-object/state/reported-label
// is to be set to a uint32 value.
type OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_RecordRouteObjects_RecordRouteObject_State_ReportedLabel_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_RecordRouteObjects_RecordRouteObject_State_ReportedLabel_Union ensures that OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_RecordRouteObjects_RecordRouteObject_State_ReportedLabel_Union_Uint32
// implements the OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_RecordRouteObjects_RecordRouteObject_State_ReportedLabel_Union interface.
func (*OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_RecordRouteObjects_RecordRouteObject_State_ReportedLabel_Union_Uint32) Is_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_RecordRouteObjects_RecordRouteObject_State_ReportedLabel_Union() {}

// To_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_RecordRouteObjects_RecordRouteObject_State_ReportedLabel_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_RecordRouteObjects_RecordRouteObject_State_ReportedLabel_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_RecordRouteObjects_RecordRouteObject_State) To_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_RecordRouteObjects_RecordRouteObject_State_ReportedLabel_Union(i interface{}) (OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_RecordRouteObjects_RecordRouteObject_State_ReportedLabel_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_RecordRouteObjects_RecordRouteObject_State_ReportedLabel:
		return &OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_RecordRouteObjects_RecordRouteObject_State_ReportedLabel_Union_E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_RecordRouteObjects_RecordRouteObject_State_ReportedLabel{v}, nil
	case uint32:
		return &OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_RecordRouteObjects_RecordRouteObject_State_ReportedLabel_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_RecordRouteObjects_RecordRouteObject_State_ReportedLabel_Union, unknown union type, got: %T, want any of [E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_RecordRouteObjects_RecordRouteObject_State_ReportedLabel, uint32]", i, i)
	}
}

// OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelIn_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-mpls/mpls/signaling-protocols/rsvp-te/sessions/session/state/label-in within the YANG schema.
type OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelIn_Union interface {
	Is_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelIn_Union()
}

// OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelIn_Union_E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelIn is used when /openconfig-mpls/mpls/signaling-protocols/rsvp-te/sessions/session/state/label-in
// is to be set to a E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelIn value.
type OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelIn_Union_E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelIn struct {
	E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelIn E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelIn
}

// Is_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelIn_Union ensures that OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelIn_Union_E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelIn
// implements the OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelIn_Union interface.
func (*OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelIn_Union_E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelIn) Is_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelIn_Union() {}

// OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelIn_Union_Uint32 is used when /openconfig-mpls/mpls/signaling-protocols/rsvp-te/sessions/session/state/label-in
// is to be set to a uint32 value.
type OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelIn_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelIn_Union ensures that OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelIn_Union_Uint32
// implements the OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelIn_Union interface.
func (*OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelIn_Union_Uint32) Is_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelIn_Union() {}

// To_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelIn_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelIn_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State) To_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelIn_Union(i interface{}) (OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelIn_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelIn:
		return &OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelIn_Union_E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelIn{v}, nil
	case uint32:
		return &OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelIn_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelIn_Union, unknown union type, got: %T, want any of [E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelIn, uint32]", i, i)
	}
}

// OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelOut_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-mpls/mpls/signaling-protocols/rsvp-te/sessions/session/state/label-out within the YANG schema.
type OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelOut_Union interface {
	Is_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelOut_Union()
}

// OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelOut_Union_E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelOut is used when /openconfig-mpls/mpls/signaling-protocols/rsvp-te/sessions/session/state/label-out
// is to be set to a E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelOut value.
type OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelOut_Union_E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelOut struct {
	E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelOut E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelOut
}

// Is_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelOut_Union ensures that OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelOut_Union_E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelOut
// implements the OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelOut_Union interface.
func (*OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelOut_Union_E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelOut) Is_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelOut_Union() {}

// OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelOut_Union_Uint32 is used when /openconfig-mpls/mpls/signaling-protocols/rsvp-te/sessions/session/state/label-out
// is to be set to a uint32 value.
type OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelOut_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelOut_Union ensures that OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelOut_Union_Uint32
// implements the OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelOut_Union interface.
func (*OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelOut_Union_Uint32) Is_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelOut_Union() {}

// To_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelOut_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelOut_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State) To_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelOut_Union(i interface{}) (OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelOut_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelOut:
		return &OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelOut_Union_E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelOut{v}, nil
	case uint32:
		return &OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelOut_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelOut_Union, unknown union type, got: %T, want any of [E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelOut, uint32]", i, i)
	}
}

// OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_SenderTspec_PeakDataRate_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-mpls/mpls/signaling-protocols/rsvp-te/sessions/session/state/sender-tspec/peak-data-rate within the YANG schema.
type OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_SenderTspec_PeakDataRate_Union interface {
	Is_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_SenderTspec_PeakDataRate_Union()
}

// OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_SenderTspec_PeakDataRate_Union_Binary is used when /openconfig-mpls/mpls/signaling-protocols/rsvp-te/sessions/session/state/sender-tspec/peak-data-rate
// is to be set to a Binary value.
type OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_SenderTspec_PeakDataRate_Union_Binary struct {
	Binary Binary
}

// Is_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_SenderTspec_PeakDataRate_Union ensures that OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_SenderTspec_PeakDataRate_Union_Binary
// implements the OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_SenderTspec_PeakDataRate_Union interface.
func (*OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_SenderTspec_PeakDataRate_Union_Binary) Is_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_SenderTspec_PeakDataRate_Union() {}

// OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_SenderTspec_PeakDataRate_Union_E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_SenderTspec_PeakDataRate is used when /openconfig-mpls/mpls/signaling-protocols/rsvp-te/sessions/session/state/sender-tspec/peak-data-rate
// is to be set to a E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_SenderTspec_PeakDataRate value.
type OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_SenderTspec_PeakDataRate_Union_E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_SenderTspec_PeakDataRate struct {
	E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_SenderTspec_PeakDataRate E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_SenderTspec_PeakDataRate
}

// Is_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_SenderTspec_PeakDataRate_Union ensures that OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_SenderTspec_PeakDataRate_Union_E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_SenderTspec_PeakDataRate
// implements the OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_SenderTspec_PeakDataRate_Union interface.
func (*OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_SenderTspec_PeakDataRate_Union_E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_SenderTspec_PeakDataRate) Is_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_SenderTspec_PeakDataRate_Union() {}

// To_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_SenderTspec_PeakDataRate_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_SenderTspec_PeakDataRate_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_SenderTspec) To_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_SenderTspec_PeakDataRate_Union(i interface{}) (OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_SenderTspec_PeakDataRate_Union, error) {
	switch v := i.(type) {
	case Binary:
		return &OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_SenderTspec_PeakDataRate_Union_Binary{v}, nil
	case E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_SenderTspec_PeakDataRate:
		return &OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_SenderTspec_PeakDataRate_Union_E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_SenderTspec_PeakDataRate{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_SenderTspec_PeakDataRate_Union, unknown union type, got: %T, want any of [Binary, E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_SenderTspec_PeakDataRate]", i, i)
	}
}

// OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-mpls/mpls/signaling-protocols/segment-routing/aggregate-sid-counters/aggregate-sid-counter/mpls-label within the YANG schema.
type OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel_Union interface {
	Is_OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel_Union()
}

// OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel_Union_E_OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel is used when /openconfig-mpls/mpls/signaling-protocols/segment-routing/aggregate-sid-counters/aggregate-sid-counter/mpls-label
// is to be set to a E_OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel value.
type OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel_Union_E_OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel struct {
	E_OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel E_OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel
}

// Is_OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel_Union ensures that OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel_Union_E_OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel
// implements the OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel_Union interface.
func (*OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel_Union_E_OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel) Is_OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel_Union() {}

// OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel_Union_Uint32 is used when /openconfig-mpls/mpls/signaling-protocols/segment-routing/aggregate-sid-counters/aggregate-sid-counter/mpls-label
// is to be set to a uint32 value.
type OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel_Union ensures that OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel_Union_Uint32
// implements the OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel_Union interface.
func (*OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel_Union_Uint32) Is_OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel_Union() {}

// To_OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter) To_OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel_Union(i interface{}) (OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel:
		return &OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel_Union_E_OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel{v}, nil
	case uint32:
		return &OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel_Union, unknown union type, got: %T, want any of [E_OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel, uint32]", i, i)
	}
}

// OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_Interfaces_Interface_SidCounters_SidCounter_State_MplsLabel_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-mpls/mpls/signaling-protocols/segment-routing/interfaces/interface/sid-counters/sid-counter/mpls-label within the YANG schema.
type OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_Interfaces_Interface_SidCounters_SidCounter_State_MplsLabel_Union interface {
	Is_OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_Interfaces_Interface_SidCounters_SidCounter_State_MplsLabel_Union()
}

// OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_Interfaces_Interface_SidCounters_SidCounter_State_MplsLabel_Union_E_OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel is used when /openconfig-mpls/mpls/signaling-protocols/segment-routing/interfaces/interface/sid-counters/sid-counter/mpls-label
// is to be set to a E_OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel value.
type OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_Interfaces_Interface_SidCounters_SidCounter_State_MplsLabel_Union_E_OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel struct {
	E_OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel E_OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel
}

// Is_OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_Interfaces_Interface_SidCounters_SidCounter_State_MplsLabel_Union ensures that OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_Interfaces_Interface_SidCounters_SidCounter_State_MplsLabel_Union_E_OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel
// implements the OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_Interfaces_Interface_SidCounters_SidCounter_State_MplsLabel_Union interface.
func (*OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_Interfaces_Interface_SidCounters_SidCounter_State_MplsLabel_Union_E_OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel) Is_OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_Interfaces_Interface_SidCounters_SidCounter_State_MplsLabel_Union() {}

// OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_Interfaces_Interface_SidCounters_SidCounter_State_MplsLabel_Union_Uint32 is used when /openconfig-mpls/mpls/signaling-protocols/segment-routing/interfaces/interface/sid-counters/sid-counter/mpls-label
// is to be set to a uint32 value.
type OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_Interfaces_Interface_SidCounters_SidCounter_State_MplsLabel_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_Interfaces_Interface_SidCounters_SidCounter_State_MplsLabel_Union ensures that OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_Interfaces_Interface_SidCounters_SidCounter_State_MplsLabel_Union_Uint32
// implements the OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_Interfaces_Interface_SidCounters_SidCounter_State_MplsLabel_Union interface.
func (*OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_Interfaces_Interface_SidCounters_SidCounter_State_MplsLabel_Union_Uint32) Is_OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_Interfaces_Interface_SidCounters_SidCounter_State_MplsLabel_Union() {}

// To_OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_Interfaces_Interface_SidCounters_SidCounter_State_MplsLabel_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_Interfaces_Interface_SidCounters_SidCounter_State_MplsLabel_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_Interfaces_Interface_SidCounters_SidCounter) To_OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_Interfaces_Interface_SidCounters_SidCounter_State_MplsLabel_Union(i interface{}) (OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_Interfaces_Interface_SidCounters_SidCounter_State_MplsLabel_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel:
		return &OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_Interfaces_Interface_SidCounters_SidCounter_State_MplsLabel_Union_E_OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel{v}, nil
	case uint32:
		return &OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_Interfaces_Interface_SidCounters_SidCounter_State_MplsLabel_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_Interfaces_Interface_SidCounters_SidCounter_State_MplsLabel_Union, unknown union type, got: %T, want any of [E_OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel, uint32]", i, i)
	}
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PoppedMplsLabelStack_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-network-instance/network-instances/network-instance/afts/ethernet/mac-entry/next-hops/next-hop/state/popped-mpls-label-stack within the YANG schema.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PoppedMplsLabelStack_Union interface {
	Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PoppedMplsLabelStack_Union()
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PoppedMplsLabelStack_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PoppedMplsLabelStack is used when /openconfig-network-instance/network-instances/network-instance/afts/ethernet/mac-entry/next-hops/next-hop/state/popped-mpls-label-stack
// is to be set to a E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PoppedMplsLabelStack value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PoppedMplsLabelStack_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PoppedMplsLabelStack struct {
	E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PoppedMplsLabelStack E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PoppedMplsLabelStack
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PoppedMplsLabelStack_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PoppedMplsLabelStack_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PoppedMplsLabelStack
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PoppedMplsLabelStack_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PoppedMplsLabelStack_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PoppedMplsLabelStack) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PoppedMplsLabelStack_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PoppedMplsLabelStack_Union_Uint32 is used when /openconfig-network-instance/network-instances/network-instance/afts/ethernet/mac-entry/next-hops/next-hop/state/popped-mpls-label-stack
// is to be set to a uint32 value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PoppedMplsLabelStack_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PoppedMplsLabelStack_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PoppedMplsLabelStack_Union_Uint32
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PoppedMplsLabelStack_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PoppedMplsLabelStack_Union_Uint32) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PoppedMplsLabelStack_Union() {}

// To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PoppedMplsLabelStack_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PoppedMplsLabelStack_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State) To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PoppedMplsLabelStack_Union(i interface{}) (OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PoppedMplsLabelStack_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PoppedMplsLabelStack:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PoppedMplsLabelStack_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PoppedMplsLabelStack{v}, nil
	case uint32:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PoppedMplsLabelStack_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PoppedMplsLabelStack_Union, unknown union type, got: %T, want any of [E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PoppedMplsLabelStack, uint32]", i, i)
	}
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PushedMplsLabelStack_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-network-instance/network-instances/network-instance/afts/ethernet/mac-entry/next-hops/next-hop/state/pushed-mpls-label-stack within the YANG schema.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PushedMplsLabelStack_Union interface {
	Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PushedMplsLabelStack_Union()
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PushedMplsLabelStack_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PushedMplsLabelStack is used when /openconfig-network-instance/network-instances/network-instance/afts/ethernet/mac-entry/next-hops/next-hop/state/pushed-mpls-label-stack
// is to be set to a E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PushedMplsLabelStack value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PushedMplsLabelStack_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PushedMplsLabelStack struct {
	E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PushedMplsLabelStack E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PushedMplsLabelStack
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PushedMplsLabelStack_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PushedMplsLabelStack_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PushedMplsLabelStack
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PushedMplsLabelStack_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PushedMplsLabelStack_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PushedMplsLabelStack) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PushedMplsLabelStack_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PushedMplsLabelStack_Union_Uint32 is used when /openconfig-network-instance/network-instances/network-instance/afts/ethernet/mac-entry/next-hops/next-hop/state/pushed-mpls-label-stack
// is to be set to a uint32 value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PushedMplsLabelStack_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PushedMplsLabelStack_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PushedMplsLabelStack_Union_Uint32
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PushedMplsLabelStack_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PushedMplsLabelStack_Union_Uint32) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PushedMplsLabelStack_Union() {}

// To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PushedMplsLabelStack_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PushedMplsLabelStack_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State) To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PushedMplsLabelStack_Union(i interface{}) (OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PushedMplsLabelStack_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PushedMplsLabelStack:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PushedMplsLabelStack_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PushedMplsLabelStack{v}, nil
	case uint32:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PushedMplsLabelStack_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PushedMplsLabelStack_Union, unknown union type, got: %T, want any of [E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PushedMplsLabelStack, uint32]", i, i)
	}
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv4Unicast_Ipv4Entry_NextHops_NextHop_State_PoppedMplsLabelStack_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-network-instance/network-instances/network-instance/afts/ipv4-unicast/ipv4-entry/next-hops/next-hop/state/popped-mpls-label-stack within the YANG schema.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv4Unicast_Ipv4Entry_NextHops_NextHop_State_PoppedMplsLabelStack_Union interface {
	Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv4Unicast_Ipv4Entry_NextHops_NextHop_State_PoppedMplsLabelStack_Union()
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv4Unicast_Ipv4Entry_NextHops_NextHop_State_PoppedMplsLabelStack_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PoppedMplsLabelStack is used when /openconfig-network-instance/network-instances/network-instance/afts/ipv4-unicast/ipv4-entry/next-hops/next-hop/state/popped-mpls-label-stack
// is to be set to a E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PoppedMplsLabelStack value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv4Unicast_Ipv4Entry_NextHops_NextHop_State_PoppedMplsLabelStack_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PoppedMplsLabelStack struct {
	E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PoppedMplsLabelStack E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PoppedMplsLabelStack
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv4Unicast_Ipv4Entry_NextHops_NextHop_State_PoppedMplsLabelStack_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv4Unicast_Ipv4Entry_NextHops_NextHop_State_PoppedMplsLabelStack_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PoppedMplsLabelStack
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv4Unicast_Ipv4Entry_NextHops_NextHop_State_PoppedMplsLabelStack_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv4Unicast_Ipv4Entry_NextHops_NextHop_State_PoppedMplsLabelStack_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PoppedMplsLabelStack) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv4Unicast_Ipv4Entry_NextHops_NextHop_State_PoppedMplsLabelStack_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv4Unicast_Ipv4Entry_NextHops_NextHop_State_PoppedMplsLabelStack_Union_Uint32 is used when /openconfig-network-instance/network-instances/network-instance/afts/ipv4-unicast/ipv4-entry/next-hops/next-hop/state/popped-mpls-label-stack
// is to be set to a uint32 value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv4Unicast_Ipv4Entry_NextHops_NextHop_State_PoppedMplsLabelStack_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv4Unicast_Ipv4Entry_NextHops_NextHop_State_PoppedMplsLabelStack_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv4Unicast_Ipv4Entry_NextHops_NextHop_State_PoppedMplsLabelStack_Union_Uint32
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv4Unicast_Ipv4Entry_NextHops_NextHop_State_PoppedMplsLabelStack_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv4Unicast_Ipv4Entry_NextHops_NextHop_State_PoppedMplsLabelStack_Union_Uint32) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv4Unicast_Ipv4Entry_NextHops_NextHop_State_PoppedMplsLabelStack_Union() {}

// To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv4Unicast_Ipv4Entry_NextHops_NextHop_State_PoppedMplsLabelStack_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv4Unicast_Ipv4Entry_NextHops_NextHop_State_PoppedMplsLabelStack_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv4Unicast_Ipv4Entry_NextHops_NextHop_State) To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv4Unicast_Ipv4Entry_NextHops_NextHop_State_PoppedMplsLabelStack_Union(i interface{}) (OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv4Unicast_Ipv4Entry_NextHops_NextHop_State_PoppedMplsLabelStack_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PoppedMplsLabelStack:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv4Unicast_Ipv4Entry_NextHops_NextHop_State_PoppedMplsLabelStack_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PoppedMplsLabelStack{v}, nil
	case uint32:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv4Unicast_Ipv4Entry_NextHops_NextHop_State_PoppedMplsLabelStack_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv4Unicast_Ipv4Entry_NextHops_NextHop_State_PoppedMplsLabelStack_Union, unknown union type, got: %T, want any of [E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PoppedMplsLabelStack, uint32]", i, i)
	}
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv4Unicast_Ipv4Entry_NextHops_NextHop_State_PushedMplsLabelStack_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-network-instance/network-instances/network-instance/afts/ipv4-unicast/ipv4-entry/next-hops/next-hop/state/pushed-mpls-label-stack within the YANG schema.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv4Unicast_Ipv4Entry_NextHops_NextHop_State_PushedMplsLabelStack_Union interface {
	Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv4Unicast_Ipv4Entry_NextHops_NextHop_State_PushedMplsLabelStack_Union()
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv4Unicast_Ipv4Entry_NextHops_NextHop_State_PushedMplsLabelStack_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PushedMplsLabelStack is used when /openconfig-network-instance/network-instances/network-instance/afts/ipv4-unicast/ipv4-entry/next-hops/next-hop/state/pushed-mpls-label-stack
// is to be set to a E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PushedMplsLabelStack value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv4Unicast_Ipv4Entry_NextHops_NextHop_State_PushedMplsLabelStack_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PushedMplsLabelStack struct {
	E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PushedMplsLabelStack E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PushedMplsLabelStack
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv4Unicast_Ipv4Entry_NextHops_NextHop_State_PushedMplsLabelStack_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv4Unicast_Ipv4Entry_NextHops_NextHop_State_PushedMplsLabelStack_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PushedMplsLabelStack
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv4Unicast_Ipv4Entry_NextHops_NextHop_State_PushedMplsLabelStack_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv4Unicast_Ipv4Entry_NextHops_NextHop_State_PushedMplsLabelStack_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PushedMplsLabelStack) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv4Unicast_Ipv4Entry_NextHops_NextHop_State_PushedMplsLabelStack_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv4Unicast_Ipv4Entry_NextHops_NextHop_State_PushedMplsLabelStack_Union_Uint32 is used when /openconfig-network-instance/network-instances/network-instance/afts/ipv4-unicast/ipv4-entry/next-hops/next-hop/state/pushed-mpls-label-stack
// is to be set to a uint32 value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv4Unicast_Ipv4Entry_NextHops_NextHop_State_PushedMplsLabelStack_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv4Unicast_Ipv4Entry_NextHops_NextHop_State_PushedMplsLabelStack_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv4Unicast_Ipv4Entry_NextHops_NextHop_State_PushedMplsLabelStack_Union_Uint32
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv4Unicast_Ipv4Entry_NextHops_NextHop_State_PushedMplsLabelStack_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv4Unicast_Ipv4Entry_NextHops_NextHop_State_PushedMplsLabelStack_Union_Uint32) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv4Unicast_Ipv4Entry_NextHops_NextHop_State_PushedMplsLabelStack_Union() {}

// To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv4Unicast_Ipv4Entry_NextHops_NextHop_State_PushedMplsLabelStack_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv4Unicast_Ipv4Entry_NextHops_NextHop_State_PushedMplsLabelStack_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv4Unicast_Ipv4Entry_NextHops_NextHop_State) To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv4Unicast_Ipv4Entry_NextHops_NextHop_State_PushedMplsLabelStack_Union(i interface{}) (OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv4Unicast_Ipv4Entry_NextHops_NextHop_State_PushedMplsLabelStack_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PushedMplsLabelStack:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv4Unicast_Ipv4Entry_NextHops_NextHop_State_PushedMplsLabelStack_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PushedMplsLabelStack{v}, nil
	case uint32:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv4Unicast_Ipv4Entry_NextHops_NextHop_State_PushedMplsLabelStack_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv4Unicast_Ipv4Entry_NextHops_NextHop_State_PushedMplsLabelStack_Union, unknown union type, got: %T, want any of [E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PushedMplsLabelStack, uint32]", i, i)
	}
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv6Unicast_Ipv6Entry_NextHops_NextHop_State_PoppedMplsLabelStack_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-network-instance/network-instances/network-instance/afts/ipv6-unicast/ipv6-entry/next-hops/next-hop/state/popped-mpls-label-stack within the YANG schema.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv6Unicast_Ipv6Entry_NextHops_NextHop_State_PoppedMplsLabelStack_Union interface {
	Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv6Unicast_Ipv6Entry_NextHops_NextHop_State_PoppedMplsLabelStack_Union()
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv6Unicast_Ipv6Entry_NextHops_NextHop_State_PoppedMplsLabelStack_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PoppedMplsLabelStack is used when /openconfig-network-instance/network-instances/network-instance/afts/ipv6-unicast/ipv6-entry/next-hops/next-hop/state/popped-mpls-label-stack
// is to be set to a E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PoppedMplsLabelStack value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv6Unicast_Ipv6Entry_NextHops_NextHop_State_PoppedMplsLabelStack_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PoppedMplsLabelStack struct {
	E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PoppedMplsLabelStack E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PoppedMplsLabelStack
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv6Unicast_Ipv6Entry_NextHops_NextHop_State_PoppedMplsLabelStack_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv6Unicast_Ipv6Entry_NextHops_NextHop_State_PoppedMplsLabelStack_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PoppedMplsLabelStack
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv6Unicast_Ipv6Entry_NextHops_NextHop_State_PoppedMplsLabelStack_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv6Unicast_Ipv6Entry_NextHops_NextHop_State_PoppedMplsLabelStack_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PoppedMplsLabelStack) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv6Unicast_Ipv6Entry_NextHops_NextHop_State_PoppedMplsLabelStack_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv6Unicast_Ipv6Entry_NextHops_NextHop_State_PoppedMplsLabelStack_Union_Uint32 is used when /openconfig-network-instance/network-instances/network-instance/afts/ipv6-unicast/ipv6-entry/next-hops/next-hop/state/popped-mpls-label-stack
// is to be set to a uint32 value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv6Unicast_Ipv6Entry_NextHops_NextHop_State_PoppedMplsLabelStack_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv6Unicast_Ipv6Entry_NextHops_NextHop_State_PoppedMplsLabelStack_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv6Unicast_Ipv6Entry_NextHops_NextHop_State_PoppedMplsLabelStack_Union_Uint32
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv6Unicast_Ipv6Entry_NextHops_NextHop_State_PoppedMplsLabelStack_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv6Unicast_Ipv6Entry_NextHops_NextHop_State_PoppedMplsLabelStack_Union_Uint32) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv6Unicast_Ipv6Entry_NextHops_NextHop_State_PoppedMplsLabelStack_Union() {}

// To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv6Unicast_Ipv6Entry_NextHops_NextHop_State_PoppedMplsLabelStack_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv6Unicast_Ipv6Entry_NextHops_NextHop_State_PoppedMplsLabelStack_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv6Unicast_Ipv6Entry_NextHops_NextHop_State) To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv6Unicast_Ipv6Entry_NextHops_NextHop_State_PoppedMplsLabelStack_Union(i interface{}) (OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv6Unicast_Ipv6Entry_NextHops_NextHop_State_PoppedMplsLabelStack_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PoppedMplsLabelStack:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv6Unicast_Ipv6Entry_NextHops_NextHop_State_PoppedMplsLabelStack_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PoppedMplsLabelStack{v}, nil
	case uint32:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv6Unicast_Ipv6Entry_NextHops_NextHop_State_PoppedMplsLabelStack_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv6Unicast_Ipv6Entry_NextHops_NextHop_State_PoppedMplsLabelStack_Union, unknown union type, got: %T, want any of [E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PoppedMplsLabelStack, uint32]", i, i)
	}
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv6Unicast_Ipv6Entry_NextHops_NextHop_State_PushedMplsLabelStack_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-network-instance/network-instances/network-instance/afts/ipv6-unicast/ipv6-entry/next-hops/next-hop/state/pushed-mpls-label-stack within the YANG schema.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv6Unicast_Ipv6Entry_NextHops_NextHop_State_PushedMplsLabelStack_Union interface {
	Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv6Unicast_Ipv6Entry_NextHops_NextHop_State_PushedMplsLabelStack_Union()
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv6Unicast_Ipv6Entry_NextHops_NextHop_State_PushedMplsLabelStack_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PushedMplsLabelStack is used when /openconfig-network-instance/network-instances/network-instance/afts/ipv6-unicast/ipv6-entry/next-hops/next-hop/state/pushed-mpls-label-stack
// is to be set to a E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PushedMplsLabelStack value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv6Unicast_Ipv6Entry_NextHops_NextHop_State_PushedMplsLabelStack_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PushedMplsLabelStack struct {
	E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PushedMplsLabelStack E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PushedMplsLabelStack
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv6Unicast_Ipv6Entry_NextHops_NextHop_State_PushedMplsLabelStack_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv6Unicast_Ipv6Entry_NextHops_NextHop_State_PushedMplsLabelStack_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PushedMplsLabelStack
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv6Unicast_Ipv6Entry_NextHops_NextHop_State_PushedMplsLabelStack_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv6Unicast_Ipv6Entry_NextHops_NextHop_State_PushedMplsLabelStack_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PushedMplsLabelStack) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv6Unicast_Ipv6Entry_NextHops_NextHop_State_PushedMplsLabelStack_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv6Unicast_Ipv6Entry_NextHops_NextHop_State_PushedMplsLabelStack_Union_Uint32 is used when /openconfig-network-instance/network-instances/network-instance/afts/ipv6-unicast/ipv6-entry/next-hops/next-hop/state/pushed-mpls-label-stack
// is to be set to a uint32 value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv6Unicast_Ipv6Entry_NextHops_NextHop_State_PushedMplsLabelStack_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv6Unicast_Ipv6Entry_NextHops_NextHop_State_PushedMplsLabelStack_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv6Unicast_Ipv6Entry_NextHops_NextHop_State_PushedMplsLabelStack_Union_Uint32
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv6Unicast_Ipv6Entry_NextHops_NextHop_State_PushedMplsLabelStack_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv6Unicast_Ipv6Entry_NextHops_NextHop_State_PushedMplsLabelStack_Union_Uint32) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv6Unicast_Ipv6Entry_NextHops_NextHop_State_PushedMplsLabelStack_Union() {}

// To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv6Unicast_Ipv6Entry_NextHops_NextHop_State_PushedMplsLabelStack_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv6Unicast_Ipv6Entry_NextHops_NextHop_State_PushedMplsLabelStack_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv6Unicast_Ipv6Entry_NextHops_NextHop_State) To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv6Unicast_Ipv6Entry_NextHops_NextHop_State_PushedMplsLabelStack_Union(i interface{}) (OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv6Unicast_Ipv6Entry_NextHops_NextHop_State_PushedMplsLabelStack_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PushedMplsLabelStack:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv6Unicast_Ipv6Entry_NextHops_NextHop_State_PushedMplsLabelStack_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PushedMplsLabelStack{v}, nil
	case uint32:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv6Unicast_Ipv6Entry_NextHops_NextHop_State_PushedMplsLabelStack_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ipv6Unicast_Ipv6Entry_NextHops_NextHop_State_PushedMplsLabelStack_Union, unknown union type, got: %T, want any of [E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PushedMplsLabelStack, uint32]", i, i)
	}
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_Config_Label_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-network-instance/network-instances/network-instance/afts/mpls/label-entry/label within the YANG schema.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_Config_Label_Union interface {
	Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_Config_Label_Union()
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_Config_Label_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_Config_Label is used when /openconfig-network-instance/network-instances/network-instance/afts/mpls/label-entry/label
// is to be set to a E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_Config_Label value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_Config_Label_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_Config_Label struct {
	E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_Config_Label E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_Config_Label
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_Config_Label_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_Config_Label_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_Config_Label
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_Config_Label_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_Config_Label_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_Config_Label) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_Config_Label_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_Config_Label_Union_Uint32 is used when /openconfig-network-instance/network-instances/network-instance/afts/mpls/label-entry/label
// is to be set to a uint32 value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_Config_Label_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_Config_Label_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_Config_Label_Union_Uint32
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_Config_Label_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_Config_Label_Union_Uint32) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_Config_Label_Union() {}

// To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_Config_Label_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_Config_Label_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry) To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_Config_Label_Union(i interface{}) (OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_Config_Label_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_Config_Label:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_Config_Label_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_Config_Label{v}, nil
	case uint32:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_Config_Label_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_Config_Label_Union, unknown union type, got: %T, want any of [E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_Config_Label, uint32]", i, i)
	}
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_NextHops_NextHop_State_PoppedMplsLabelStack_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-network-instance/network-instances/network-instance/afts/mpls/label-entry/next-hops/next-hop/state/popped-mpls-label-stack within the YANG schema.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_NextHops_NextHop_State_PoppedMplsLabelStack_Union interface {
	Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_NextHops_NextHop_State_PoppedMplsLabelStack_Union()
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_NextHops_NextHop_State_PoppedMplsLabelStack_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PoppedMplsLabelStack is used when /openconfig-network-instance/network-instances/network-instance/afts/mpls/label-entry/next-hops/next-hop/state/popped-mpls-label-stack
// is to be set to a E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PoppedMplsLabelStack value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_NextHops_NextHop_State_PoppedMplsLabelStack_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PoppedMplsLabelStack struct {
	E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PoppedMplsLabelStack E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PoppedMplsLabelStack
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_NextHops_NextHop_State_PoppedMplsLabelStack_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_NextHops_NextHop_State_PoppedMplsLabelStack_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PoppedMplsLabelStack
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_NextHops_NextHop_State_PoppedMplsLabelStack_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_NextHops_NextHop_State_PoppedMplsLabelStack_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PoppedMplsLabelStack) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_NextHops_NextHop_State_PoppedMplsLabelStack_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_NextHops_NextHop_State_PoppedMplsLabelStack_Union_Uint32 is used when /openconfig-network-instance/network-instances/network-instance/afts/mpls/label-entry/next-hops/next-hop/state/popped-mpls-label-stack
// is to be set to a uint32 value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_NextHops_NextHop_State_PoppedMplsLabelStack_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_NextHops_NextHop_State_PoppedMplsLabelStack_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_NextHops_NextHop_State_PoppedMplsLabelStack_Union_Uint32
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_NextHops_NextHop_State_PoppedMplsLabelStack_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_NextHops_NextHop_State_PoppedMplsLabelStack_Union_Uint32) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_NextHops_NextHop_State_PoppedMplsLabelStack_Union() {}

// To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_NextHops_NextHop_State_PoppedMplsLabelStack_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_NextHops_NextHop_State_PoppedMplsLabelStack_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_NextHops_NextHop_State) To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_NextHops_NextHop_State_PoppedMplsLabelStack_Union(i interface{}) (OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_NextHops_NextHop_State_PoppedMplsLabelStack_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PoppedMplsLabelStack:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_NextHops_NextHop_State_PoppedMplsLabelStack_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PoppedMplsLabelStack{v}, nil
	case uint32:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_NextHops_NextHop_State_PoppedMplsLabelStack_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_NextHops_NextHop_State_PoppedMplsLabelStack_Union, unknown union type, got: %T, want any of [E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PoppedMplsLabelStack, uint32]", i, i)
	}
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_NextHops_NextHop_State_PushedMplsLabelStack_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-network-instance/network-instances/network-instance/afts/mpls/label-entry/next-hops/next-hop/state/pushed-mpls-label-stack within the YANG schema.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_NextHops_NextHop_State_PushedMplsLabelStack_Union interface {
	Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_NextHops_NextHop_State_PushedMplsLabelStack_Union()
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_NextHops_NextHop_State_PushedMplsLabelStack_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PushedMplsLabelStack is used when /openconfig-network-instance/network-instances/network-instance/afts/mpls/label-entry/next-hops/next-hop/state/pushed-mpls-label-stack
// is to be set to a E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PushedMplsLabelStack value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_NextHops_NextHop_State_PushedMplsLabelStack_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PushedMplsLabelStack struct {
	E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PushedMplsLabelStack E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PushedMplsLabelStack
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_NextHops_NextHop_State_PushedMplsLabelStack_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_NextHops_NextHop_State_PushedMplsLabelStack_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PushedMplsLabelStack
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_NextHops_NextHop_State_PushedMplsLabelStack_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_NextHops_NextHop_State_PushedMplsLabelStack_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PushedMplsLabelStack) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_NextHops_NextHop_State_PushedMplsLabelStack_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_NextHops_NextHop_State_PushedMplsLabelStack_Union_Uint32 is used when /openconfig-network-instance/network-instances/network-instance/afts/mpls/label-entry/next-hops/next-hop/state/pushed-mpls-label-stack
// is to be set to a uint32 value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_NextHops_NextHop_State_PushedMplsLabelStack_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_NextHops_NextHop_State_PushedMplsLabelStack_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_NextHops_NextHop_State_PushedMplsLabelStack_Union_Uint32
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_NextHops_NextHop_State_PushedMplsLabelStack_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_NextHops_NextHop_State_PushedMplsLabelStack_Union_Uint32) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_NextHops_NextHop_State_PushedMplsLabelStack_Union() {}

// To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_NextHops_NextHop_State_PushedMplsLabelStack_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_NextHops_NextHop_State_PushedMplsLabelStack_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_NextHops_NextHop_State) To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_NextHops_NextHop_State_PushedMplsLabelStack_Union(i interface{}) (OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_NextHops_NextHop_State_PushedMplsLabelStack_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PushedMplsLabelStack:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_NextHops_NextHop_State_PushedMplsLabelStack_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PushedMplsLabelStack{v}, nil
	case uint32:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_NextHops_NextHop_State_PushedMplsLabelStack_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_NextHops_NextHop_State_PushedMplsLabelStack_Union, unknown union type, got: %T, want any of [E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PushedMplsLabelStack, uint32]", i, i)
	}
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_State_Label_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-network-instance/network-instances/network-instance/afts/mpls/label-entry/state/label within the YANG schema.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_State_Label_Union interface {
	Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_State_Label_Union()
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_State_Label_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_Config_Label is used when /openconfig-network-instance/network-instances/network-instance/afts/mpls/label-entry/state/label
// is to be set to a E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_Config_Label value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_State_Label_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_Config_Label struct {
	E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_Config_Label E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_Config_Label
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_State_Label_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_State_Label_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_Config_Label
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_State_Label_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_State_Label_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_Config_Label) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_State_Label_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_State_Label_Union_Uint32 is used when /openconfig-network-instance/network-instances/network-instance/afts/mpls/label-entry/state/label
// is to be set to a uint32 value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_State_Label_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_State_Label_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_State_Label_Union_Uint32
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_State_Label_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_State_Label_Union_Uint32) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_State_Label_Union() {}

// To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_State_Label_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_State_Label_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_State) To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_State_Label_Union(i interface{}) (OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_State_Label_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_Config_Label:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_State_Label_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_Config_Label{v}, nil
	case uint32:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_State_Label_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_State_Label_Union, unknown union type, got: %T, want any of [E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Mpls_LabelEntry_Config_Label, uint32]", i, i)
	}
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_Config_IpProtocol_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-network-instance/network-instances/network-instance/afts/policy-forwarding/policy-forwarding-entry/config/ip-protocol within the YANG schema.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_Config_IpProtocol_Union interface {
	Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_Config_IpProtocol_Union()
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_Config_IpProtocol_Union_E_OpenconfigPacketMatchTypes_IP_PROTOCOL is used when /openconfig-network-instance/network-instances/network-instance/afts/policy-forwarding/policy-forwarding-entry/config/ip-protocol
// is to be set to a E_OpenconfigPacketMatchTypes_IP_PROTOCOL value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_Config_IpProtocol_Union_E_OpenconfigPacketMatchTypes_IP_PROTOCOL struct {
	E_OpenconfigPacketMatchTypes_IP_PROTOCOL E_OpenconfigPacketMatchTypes_IP_PROTOCOL
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_Config_IpProtocol_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_Config_IpProtocol_Union_E_OpenconfigPacketMatchTypes_IP_PROTOCOL
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_Config_IpProtocol_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_Config_IpProtocol_Union_E_OpenconfigPacketMatchTypes_IP_PROTOCOL) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_Config_IpProtocol_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_Config_IpProtocol_Union_Uint8 is used when /openconfig-network-instance/network-instances/network-instance/afts/policy-forwarding/policy-forwarding-entry/config/ip-protocol
// is to be set to a uint8 value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_Config_IpProtocol_Union_Uint8 struct {
	Uint8 uint8
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_Config_IpProtocol_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_Config_IpProtocol_Union_Uint8
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_Config_IpProtocol_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_Config_IpProtocol_Union_Uint8) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_Config_IpProtocol_Union() {}

// To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_Config_IpProtocol_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_Config_IpProtocol_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_Config) To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_Config_IpProtocol_Union(i interface{}) (OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_Config_IpProtocol_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigPacketMatchTypes_IP_PROTOCOL:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_Config_IpProtocol_Union_E_OpenconfigPacketMatchTypes_IP_PROTOCOL{v}, nil
	case uint8:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_Config_IpProtocol_Union_Uint8{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_Config_IpProtocol_Union, unknown union type, got: %T, want any of [E_OpenconfigPacketMatchTypes_IP_PROTOCOL, uint8]", i, i)
	}
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_Config_MplsLabel_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-network-instance/network-instances/network-instance/afts/policy-forwarding/policy-forwarding-entry/config/mpls-label within the YANG schema.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_Config_MplsLabel_Union interface {
	Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_Config_MplsLabel_Union()
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_Config_MplsLabel_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_Config_MplsLabel is used when /openconfig-network-instance/network-instances/network-instance/afts/policy-forwarding/policy-forwarding-entry/config/mpls-label
// is to be set to a E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_Config_MplsLabel value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_Config_MplsLabel_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_Config_MplsLabel struct {
	E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_Config_MplsLabel E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_Config_MplsLabel
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_Config_MplsLabel_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_Config_MplsLabel_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_Config_MplsLabel
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_Config_MplsLabel_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_Config_MplsLabel_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_Config_MplsLabel) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_Config_MplsLabel_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_Config_MplsLabel_Union_Uint32 is used when /openconfig-network-instance/network-instances/network-instance/afts/policy-forwarding/policy-forwarding-entry/config/mpls-label
// is to be set to a uint32 value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_Config_MplsLabel_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_Config_MplsLabel_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_Config_MplsLabel_Union_Uint32
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_Config_MplsLabel_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_Config_MplsLabel_Union_Uint32) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_Config_MplsLabel_Union() {}

// To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_Config_MplsLabel_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_Config_MplsLabel_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_Config) To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_Config_MplsLabel_Union(i interface{}) (OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_Config_MplsLabel_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_Config_MplsLabel:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_Config_MplsLabel_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_Config_MplsLabel{v}, nil
	case uint32:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_Config_MplsLabel_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_Config_MplsLabel_Union, unknown union type, got: %T, want any of [E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_Config_MplsLabel, uint32]", i, i)
	}
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_NextHops_NextHop_State_PoppedMplsLabelStack_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-network-instance/network-instances/network-instance/afts/policy-forwarding/policy-forwarding-entry/next-hops/next-hop/state/popped-mpls-label-stack within the YANG schema.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_NextHops_NextHop_State_PoppedMplsLabelStack_Union interface {
	Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_NextHops_NextHop_State_PoppedMplsLabelStack_Union()
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_NextHops_NextHop_State_PoppedMplsLabelStack_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PoppedMplsLabelStack is used when /openconfig-network-instance/network-instances/network-instance/afts/policy-forwarding/policy-forwarding-entry/next-hops/next-hop/state/popped-mpls-label-stack
// is to be set to a E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PoppedMplsLabelStack value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_NextHops_NextHop_State_PoppedMplsLabelStack_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PoppedMplsLabelStack struct {
	E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PoppedMplsLabelStack E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PoppedMplsLabelStack
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_NextHops_NextHop_State_PoppedMplsLabelStack_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_NextHops_NextHop_State_PoppedMplsLabelStack_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PoppedMplsLabelStack
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_NextHops_NextHop_State_PoppedMplsLabelStack_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_NextHops_NextHop_State_PoppedMplsLabelStack_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PoppedMplsLabelStack) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_NextHops_NextHop_State_PoppedMplsLabelStack_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_NextHops_NextHop_State_PoppedMplsLabelStack_Union_Uint32 is used when /openconfig-network-instance/network-instances/network-instance/afts/policy-forwarding/policy-forwarding-entry/next-hops/next-hop/state/popped-mpls-label-stack
// is to be set to a uint32 value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_NextHops_NextHop_State_PoppedMplsLabelStack_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_NextHops_NextHop_State_PoppedMplsLabelStack_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_NextHops_NextHop_State_PoppedMplsLabelStack_Union_Uint32
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_NextHops_NextHop_State_PoppedMplsLabelStack_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_NextHops_NextHop_State_PoppedMplsLabelStack_Union_Uint32) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_NextHops_NextHop_State_PoppedMplsLabelStack_Union() {}

// To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_NextHops_NextHop_State_PoppedMplsLabelStack_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_NextHops_NextHop_State_PoppedMplsLabelStack_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_NextHops_NextHop_State) To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_NextHops_NextHop_State_PoppedMplsLabelStack_Union(i interface{}) (OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_NextHops_NextHop_State_PoppedMplsLabelStack_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PoppedMplsLabelStack:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_NextHops_NextHop_State_PoppedMplsLabelStack_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PoppedMplsLabelStack{v}, nil
	case uint32:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_NextHops_NextHop_State_PoppedMplsLabelStack_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_NextHops_NextHop_State_PoppedMplsLabelStack_Union, unknown union type, got: %T, want any of [E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PoppedMplsLabelStack, uint32]", i, i)
	}
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_NextHops_NextHop_State_PushedMplsLabelStack_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-network-instance/network-instances/network-instance/afts/policy-forwarding/policy-forwarding-entry/next-hops/next-hop/state/pushed-mpls-label-stack within the YANG schema.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_NextHops_NextHop_State_PushedMplsLabelStack_Union interface {
	Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_NextHops_NextHop_State_PushedMplsLabelStack_Union()
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_NextHops_NextHop_State_PushedMplsLabelStack_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PushedMplsLabelStack is used when /openconfig-network-instance/network-instances/network-instance/afts/policy-forwarding/policy-forwarding-entry/next-hops/next-hop/state/pushed-mpls-label-stack
// is to be set to a E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PushedMplsLabelStack value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_NextHops_NextHop_State_PushedMplsLabelStack_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PushedMplsLabelStack struct {
	E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PushedMplsLabelStack E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PushedMplsLabelStack
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_NextHops_NextHop_State_PushedMplsLabelStack_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_NextHops_NextHop_State_PushedMplsLabelStack_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PushedMplsLabelStack
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_NextHops_NextHop_State_PushedMplsLabelStack_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_NextHops_NextHop_State_PushedMplsLabelStack_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PushedMplsLabelStack) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_NextHops_NextHop_State_PushedMplsLabelStack_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_NextHops_NextHop_State_PushedMplsLabelStack_Union_Uint32 is used when /openconfig-network-instance/network-instances/network-instance/afts/policy-forwarding/policy-forwarding-entry/next-hops/next-hop/state/pushed-mpls-label-stack
// is to be set to a uint32 value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_NextHops_NextHop_State_PushedMplsLabelStack_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_NextHops_NextHop_State_PushedMplsLabelStack_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_NextHops_NextHop_State_PushedMplsLabelStack_Union_Uint32
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_NextHops_NextHop_State_PushedMplsLabelStack_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_NextHops_NextHop_State_PushedMplsLabelStack_Union_Uint32) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_NextHops_NextHop_State_PushedMplsLabelStack_Union() {}

// To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_NextHops_NextHop_State_PushedMplsLabelStack_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_NextHops_NextHop_State_PushedMplsLabelStack_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_NextHops_NextHop_State) To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_NextHops_NextHop_State_PushedMplsLabelStack_Union(i interface{}) (OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_NextHops_NextHop_State_PushedMplsLabelStack_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PushedMplsLabelStack:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_NextHops_NextHop_State_PushedMplsLabelStack_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PushedMplsLabelStack{v}, nil
	case uint32:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_NextHops_NextHop_State_PushedMplsLabelStack_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_NextHops_NextHop_State_PushedMplsLabelStack_Union, unknown union type, got: %T, want any of [E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_Ethernet_MacEntry_NextHops_NextHop_State_PushedMplsLabelStack, uint32]", i, i)
	}
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_State_IpProtocol_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-network-instance/network-instances/network-instance/afts/policy-forwarding/policy-forwarding-entry/state/ip-protocol within the YANG schema.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_State_IpProtocol_Union interface {
	Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_State_IpProtocol_Union()
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_State_IpProtocol_Union_E_OpenconfigPacketMatchTypes_IP_PROTOCOL is used when /openconfig-network-instance/network-instances/network-instance/afts/policy-forwarding/policy-forwarding-entry/state/ip-protocol
// is to be set to a E_OpenconfigPacketMatchTypes_IP_PROTOCOL value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_State_IpProtocol_Union_E_OpenconfigPacketMatchTypes_IP_PROTOCOL struct {
	E_OpenconfigPacketMatchTypes_IP_PROTOCOL E_OpenconfigPacketMatchTypes_IP_PROTOCOL
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_State_IpProtocol_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_State_IpProtocol_Union_E_OpenconfigPacketMatchTypes_IP_PROTOCOL
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_State_IpProtocol_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_State_IpProtocol_Union_E_OpenconfigPacketMatchTypes_IP_PROTOCOL) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_State_IpProtocol_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_State_IpProtocol_Union_Uint8 is used when /openconfig-network-instance/network-instances/network-instance/afts/policy-forwarding/policy-forwarding-entry/state/ip-protocol
// is to be set to a uint8 value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_State_IpProtocol_Union_Uint8 struct {
	Uint8 uint8
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_State_IpProtocol_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_State_IpProtocol_Union_Uint8
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_State_IpProtocol_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_State_IpProtocol_Union_Uint8) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_State_IpProtocol_Union() {}

// To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_State_IpProtocol_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_State_IpProtocol_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_State) To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_State_IpProtocol_Union(i interface{}) (OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_State_IpProtocol_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigPacketMatchTypes_IP_PROTOCOL:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_State_IpProtocol_Union_E_OpenconfigPacketMatchTypes_IP_PROTOCOL{v}, nil
	case uint8:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_State_IpProtocol_Union_Uint8{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_State_IpProtocol_Union, unknown union type, got: %T, want any of [E_OpenconfigPacketMatchTypes_IP_PROTOCOL, uint8]", i, i)
	}
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_State_MplsLabel_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-network-instance/network-instances/network-instance/afts/policy-forwarding/policy-forwarding-entry/state/mpls-label within the YANG schema.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_State_MplsLabel_Union interface {
	Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_State_MplsLabel_Union()
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_State_MplsLabel_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_Config_MplsLabel is used when /openconfig-network-instance/network-instances/network-instance/afts/policy-forwarding/policy-forwarding-entry/state/mpls-label
// is to be set to a E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_Config_MplsLabel value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_State_MplsLabel_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_Config_MplsLabel struct {
	E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_Config_MplsLabel E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_Config_MplsLabel
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_State_MplsLabel_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_State_MplsLabel_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_Config_MplsLabel
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_State_MplsLabel_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_State_MplsLabel_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_Config_MplsLabel) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_State_MplsLabel_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_State_MplsLabel_Union_Uint32 is used when /openconfig-network-instance/network-instances/network-instance/afts/policy-forwarding/policy-forwarding-entry/state/mpls-label
// is to be set to a uint32 value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_State_MplsLabel_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_State_MplsLabel_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_State_MplsLabel_Union_Uint32
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_State_MplsLabel_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_State_MplsLabel_Union_Uint32) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_State_MplsLabel_Union() {}

// To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_State_MplsLabel_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_State_MplsLabel_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_State) To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_State_MplsLabel_Union(i interface{}) (OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_State_MplsLabel_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_Config_MplsLabel:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_State_MplsLabel_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_Config_MplsLabel{v}, nil
	case uint32:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_State_MplsLabel_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_State_MplsLabel_Union, unknown union type, got: %T, want any of [E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Afts_PolicyForwarding_PolicyForwardingEntry_Config_MplsLabel, uint32]", i, i)
	}
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-network-instance/network-instances/network-instance/mpls/global/reserved-label-blocks/reserved-label-block/config/lower-bound within the YANG schema.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound_Union interface {
	Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound_Union()
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound_Union_E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound is used when /openconfig-network-instance/network-instances/network-instance/mpls/global/reserved-label-blocks/reserved-label-block/config/lower-bound
// is to be set to a E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound_Union_E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound struct {
	E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound_Union_E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound_Union_E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound_Union_Uint32 is used when /openconfig-network-instance/network-instances/network-instance/mpls/global/reserved-label-blocks/reserved-label-block/config/lower-bound
// is to be set to a uint32 value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound_Union_Uint32
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound_Union_Uint32) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound_Union() {}

// To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config) To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound_Union(i interface{}) (OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound_Union_E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound{v}, nil
	case uint32:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound_Union, unknown union type, got: %T, want any of [E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound, uint32]", i, i)
	}
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-network-instance/network-instances/network-instance/mpls/global/reserved-label-blocks/reserved-label-block/config/upper-bound within the YANG schema.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound_Union interface {
	Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound_Union()
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound_Union_E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound is used when /openconfig-network-instance/network-instances/network-instance/mpls/global/reserved-label-blocks/reserved-label-block/config/upper-bound
// is to be set to a E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound_Union_E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound struct {
	E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound_Union_E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound_Union_E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound_Union_Uint32 is used when /openconfig-network-instance/network-instances/network-instance/mpls/global/reserved-label-blocks/reserved-label-block/config/upper-bound
// is to be set to a uint32 value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound_Union_Uint32
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound_Union_Uint32) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound_Union() {}

// To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config) To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound_Union(i interface{}) (OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound_Union_E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound{v}, nil
	case uint32:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound_Union, unknown union type, got: %T, want any of [E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound, uint32]", i, i)
	}
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_LowerBound_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-network-instance/network-instances/network-instance/mpls/global/reserved-label-blocks/reserved-label-block/state/lower-bound within the YANG schema.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_LowerBound_Union interface {
	Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_LowerBound_Union()
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_LowerBound_Union_E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound is used when /openconfig-network-instance/network-instances/network-instance/mpls/global/reserved-label-blocks/reserved-label-block/state/lower-bound
// is to be set to a E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_LowerBound_Union_E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound struct {
	E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_LowerBound_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_LowerBound_Union_E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_LowerBound_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_LowerBound_Union_E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_LowerBound_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_LowerBound_Union_Uint32 is used when /openconfig-network-instance/network-instances/network-instance/mpls/global/reserved-label-blocks/reserved-label-block/state/lower-bound
// is to be set to a uint32 value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_LowerBound_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_LowerBound_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_LowerBound_Union_Uint32
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_LowerBound_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_LowerBound_Union_Uint32) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_LowerBound_Union() {}

// To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_LowerBound_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_LowerBound_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State) To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_LowerBound_Union(i interface{}) (OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_LowerBound_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_LowerBound_Union_E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound{v}, nil
	case uint32:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_LowerBound_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_LowerBound_Union, unknown union type, got: %T, want any of [E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_LowerBound, uint32]", i, i)
	}
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_UpperBound_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-network-instance/network-instances/network-instance/mpls/global/reserved-label-blocks/reserved-label-block/state/upper-bound within the YANG schema.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_UpperBound_Union interface {
	Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_UpperBound_Union()
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_UpperBound_Union_E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound is used when /openconfig-network-instance/network-instances/network-instance/mpls/global/reserved-label-blocks/reserved-label-block/state/upper-bound
// is to be set to a E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_UpperBound_Union_E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound struct {
	E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_UpperBound_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_UpperBound_Union_E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_UpperBound_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_UpperBound_Union_E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_UpperBound_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_UpperBound_Union_Uint32 is used when /openconfig-network-instance/network-instances/network-instance/mpls/global/reserved-label-blocks/reserved-label-block/state/upper-bound
// is to be set to a uint32 value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_UpperBound_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_UpperBound_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_UpperBound_Union_Uint32
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_UpperBound_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_UpperBound_Union_Uint32) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_UpperBound_Union() {}

// To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_UpperBound_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_UpperBound_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State) To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_UpperBound_Union(i interface{}) (OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_UpperBound_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_UpperBound_Union_E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound{v}, nil
	case uint32:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_UpperBound_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_State_UpperBound_Union, unknown union type, got: %T, want any of [E_OpenconfigMpls_Mpls_Global_ReservedLabelBlocks_ReservedLabelBlock_Config_UpperBound, uint32]", i, i)
	}
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/egress/config/incoming-label within the YANG schema.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel_Union interface {
	Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel_Union()
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel is used when /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/egress/config/incoming-label
// is to be set to a E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel struct {
	E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel_Union_Uint32 is used when /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/egress/config/incoming-label
// is to be set to a uint32 value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel_Union_Uint32
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel_Union_Uint32) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel_Union() {}

// To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config) To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel_Union(i interface{}) (OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel{v}, nil
	case uint32:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel_Union, unknown union type, got: %T, want any of [E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel, uint32]", i, i)
	}
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/egress/config/push-label within the YANG schema.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel_Union interface {
	Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel_Union()
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel is used when /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/egress/config/push-label
// is to be set to a E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel struct {
	E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel_Union_Uint32 is used when /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/egress/config/push-label
// is to be set to a uint32 value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel_Union_Uint32
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel_Union_Uint32) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel_Union() {}

// To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config) To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel_Union(i interface{}) (OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel{v}, nil
	case uint32:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel_Union, unknown union type, got: %T, want any of [E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel, uint32]", i, i)
	}
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_IncomingLabel_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/egress/state/incoming-label within the YANG schema.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_IncomingLabel_Union interface {
	Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_IncomingLabel_Union()
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_IncomingLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel is used when /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/egress/state/incoming-label
// is to be set to a E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_IncomingLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel struct {
	E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_IncomingLabel_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_IncomingLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_IncomingLabel_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_IncomingLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_IncomingLabel_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_IncomingLabel_Union_Uint32 is used when /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/egress/state/incoming-label
// is to be set to a uint32 value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_IncomingLabel_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_IncomingLabel_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_IncomingLabel_Union_Uint32
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_IncomingLabel_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_IncomingLabel_Union_Uint32) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_IncomingLabel_Union() {}

// To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_IncomingLabel_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_IncomingLabel_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State) To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_IncomingLabel_Union(i interface{}) (OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_IncomingLabel_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_IncomingLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel{v}, nil
	case uint32:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_IncomingLabel_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_IncomingLabel_Union, unknown union type, got: %T, want any of [E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel, uint32]", i, i)
	}
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_PushLabel_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/egress/state/push-label within the YANG schema.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_PushLabel_Union interface {
	Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_PushLabel_Union()
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_PushLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel is used when /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/egress/state/push-label
// is to be set to a E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_PushLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel struct {
	E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_PushLabel_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_PushLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_PushLabel_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_PushLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_PushLabel_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_PushLabel_Union_Uint32 is used when /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/egress/state/push-label
// is to be set to a uint32 value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_PushLabel_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_PushLabel_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_PushLabel_Union_Uint32
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_PushLabel_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_PushLabel_Union_Uint32) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_PushLabel_Union() {}

// To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_PushLabel_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_PushLabel_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State) To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_PushLabel_Union(i interface{}) (OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_PushLabel_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_PushLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel{v}, nil
	case uint32:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_PushLabel_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Egress_State_PushLabel_Union, unknown union type, got: %T, want any of [E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel, uint32]", i, i)
	}
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_IncomingLabel_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/ingress/config/incoming-label within the YANG schema.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_IncomingLabel_Union interface {
	Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_IncomingLabel_Union()
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_IncomingLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel is used when /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/ingress/config/incoming-label
// is to be set to a E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_IncomingLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel struct {
	E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_IncomingLabel_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_IncomingLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_IncomingLabel_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_IncomingLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_IncomingLabel_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_IncomingLabel_Union_Uint32 is used when /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/ingress/config/incoming-label
// is to be set to a uint32 value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_IncomingLabel_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_IncomingLabel_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_IncomingLabel_Union_Uint32
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_IncomingLabel_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_IncomingLabel_Union_Uint32) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_IncomingLabel_Union() {}

// To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_IncomingLabel_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_IncomingLabel_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config) To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_IncomingLabel_Union(i interface{}) (OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_IncomingLabel_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_IncomingLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel{v}, nil
	case uint32:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_IncomingLabel_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_IncomingLabel_Union, unknown union type, got: %T, want any of [E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel, uint32]", i, i)
	}
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_PushLabel_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/ingress/config/push-label within the YANG schema.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_PushLabel_Union interface {
	Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_PushLabel_Union()
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_PushLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel is used when /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/ingress/config/push-label
// is to be set to a E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_PushLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel struct {
	E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_PushLabel_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_PushLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_PushLabel_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_PushLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_PushLabel_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_PushLabel_Union_Uint32 is used when /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/ingress/config/push-label
// is to be set to a uint32 value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_PushLabel_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_PushLabel_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_PushLabel_Union_Uint32
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_PushLabel_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_PushLabel_Union_Uint32) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_PushLabel_Union() {}

// To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_PushLabel_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_PushLabel_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config) To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_PushLabel_Union(i interface{}) (OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_PushLabel_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_PushLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel{v}, nil
	case uint32:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_PushLabel_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_Config_PushLabel_Union, unknown union type, got: %T, want any of [E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel, uint32]", i, i)
	}
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_IncomingLabel_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/ingress/state/incoming-label within the YANG schema.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_IncomingLabel_Union interface {
	Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_IncomingLabel_Union()
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_IncomingLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel is used when /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/ingress/state/incoming-label
// is to be set to a E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_IncomingLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel struct {
	E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_IncomingLabel_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_IncomingLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_IncomingLabel_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_IncomingLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_IncomingLabel_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_IncomingLabel_Union_Uint32 is used when /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/ingress/state/incoming-label
// is to be set to a uint32 value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_IncomingLabel_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_IncomingLabel_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_IncomingLabel_Union_Uint32
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_IncomingLabel_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_IncomingLabel_Union_Uint32) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_IncomingLabel_Union() {}

// To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_IncomingLabel_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_IncomingLabel_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State) To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_IncomingLabel_Union(i interface{}) (OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_IncomingLabel_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_IncomingLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel{v}, nil
	case uint32:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_IncomingLabel_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_IncomingLabel_Union, unknown union type, got: %T, want any of [E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel, uint32]", i, i)
	}
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_PushLabel_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/ingress/state/push-label within the YANG schema.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_PushLabel_Union interface {
	Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_PushLabel_Union()
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_PushLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel is used when /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/ingress/state/push-label
// is to be set to a E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_PushLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel struct {
	E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_PushLabel_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_PushLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_PushLabel_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_PushLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_PushLabel_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_PushLabel_Union_Uint32 is used when /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/ingress/state/push-label
// is to be set to a uint32 value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_PushLabel_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_PushLabel_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_PushLabel_Union_Uint32
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_PushLabel_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_PushLabel_Union_Uint32) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_PushLabel_Union() {}

// To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_PushLabel_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_PushLabel_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State) To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_PushLabel_Union(i interface{}) (OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_PushLabel_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_PushLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel{v}, nil
	case uint32:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_PushLabel_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Ingress_State_PushLabel_Union, unknown union type, got: %T, want any of [E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel, uint32]", i, i)
	}
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_IncomingLabel_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/transit/config/incoming-label within the YANG schema.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_IncomingLabel_Union interface {
	Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_IncomingLabel_Union()
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_IncomingLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel is used when /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/transit/config/incoming-label
// is to be set to a E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_IncomingLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel struct {
	E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_IncomingLabel_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_IncomingLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_IncomingLabel_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_IncomingLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_IncomingLabel_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_IncomingLabel_Union_Uint32 is used when /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/transit/config/incoming-label
// is to be set to a uint32 value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_IncomingLabel_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_IncomingLabel_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_IncomingLabel_Union_Uint32
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_IncomingLabel_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_IncomingLabel_Union_Uint32) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_IncomingLabel_Union() {}

// To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_IncomingLabel_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_IncomingLabel_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config) To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_IncomingLabel_Union(i interface{}) (OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_IncomingLabel_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_IncomingLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel{v}, nil
	case uint32:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_IncomingLabel_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_IncomingLabel_Union, unknown union type, got: %T, want any of [E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel, uint32]", i, i)
	}
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_PushLabel_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/transit/config/push-label within the YANG schema.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_PushLabel_Union interface {
	Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_PushLabel_Union()
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_PushLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel is used when /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/transit/config/push-label
// is to be set to a E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_PushLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel struct {
	E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_PushLabel_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_PushLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_PushLabel_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_PushLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_PushLabel_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_PushLabel_Union_Uint32 is used when /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/transit/config/push-label
// is to be set to a uint32 value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_PushLabel_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_PushLabel_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_PushLabel_Union_Uint32
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_PushLabel_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_PushLabel_Union_Uint32) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_PushLabel_Union() {}

// To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_PushLabel_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_PushLabel_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config) To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_PushLabel_Union(i interface{}) (OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_PushLabel_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_PushLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel{v}, nil
	case uint32:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_PushLabel_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_Config_PushLabel_Union, unknown union type, got: %T, want any of [E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel, uint32]", i, i)
	}
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_IncomingLabel_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/transit/state/incoming-label within the YANG schema.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_IncomingLabel_Union interface {
	Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_IncomingLabel_Union()
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_IncomingLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel is used when /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/transit/state/incoming-label
// is to be set to a E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_IncomingLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel struct {
	E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_IncomingLabel_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_IncomingLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_IncomingLabel_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_IncomingLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_IncomingLabel_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_IncomingLabel_Union_Uint32 is used when /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/transit/state/incoming-label
// is to be set to a uint32 value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_IncomingLabel_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_IncomingLabel_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_IncomingLabel_Union_Uint32
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_IncomingLabel_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_IncomingLabel_Union_Uint32) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_IncomingLabel_Union() {}

// To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_IncomingLabel_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_IncomingLabel_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State) To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_IncomingLabel_Union(i interface{}) (OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_IncomingLabel_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_IncomingLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel{v}, nil
	case uint32:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_IncomingLabel_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_IncomingLabel_Union, unknown union type, got: %T, want any of [E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_IncomingLabel, uint32]", i, i)
	}
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_PushLabel_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/transit/state/push-label within the YANG schema.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_PushLabel_Union interface {
	Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_PushLabel_Union()
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_PushLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel is used when /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/transit/state/push-label
// is to be set to a E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_PushLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel struct {
	E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_PushLabel_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_PushLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_PushLabel_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_PushLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_PushLabel_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_PushLabel_Union_Uint32 is used when /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/transit/state/push-label
// is to be set to a uint32 value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_PushLabel_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_PushLabel_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_PushLabel_Union_Uint32
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_PushLabel_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_PushLabel_Union_Uint32) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_PushLabel_Union() {}

// To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_PushLabel_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_PushLabel_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State) To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_PushLabel_Union(i interface{}) (OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_PushLabel_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_PushLabel_Union_E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel{v}, nil
	case uint32:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_PushLabel_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_Lsps_StaticLsps_StaticLsp_Transit_State_PushLabel_Union, unknown union type, got: %T, want any of [E_OpenconfigMpls_Mpls_Lsps_StaticLsps_StaticLsp_Egress_Config_PushLabel, uint32]", i, i)
	}
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfaceAttributes_Interface_BandwidthReservations_BandwidthReservation_State_Priority_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/bandwidth-reservations/bandwidth-reservation/priority within the YANG schema.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfaceAttributes_Interface_BandwidthReservations_BandwidthReservation_State_Priority_Union interface {
	Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfaceAttributes_Interface_BandwidthReservations_BandwidthReservation_State_Priority_Union()
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfaceAttributes_Interface_BandwidthReservations_BandwidthReservation_State_Priority_Union_E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_InterfaceAttributes_Interface_BandwidthReservations_BandwidthReservation_State_Priority is used when /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/bandwidth-reservations/bandwidth-reservation/priority
// is to be set to a E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_InterfaceAttributes_Interface_BandwidthReservations_BandwidthReservation_State_Priority value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfaceAttributes_Interface_BandwidthReservations_BandwidthReservation_State_Priority_Union_E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_InterfaceAttributes_Interface_BandwidthReservations_BandwidthReservation_State_Priority struct {
	E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_InterfaceAttributes_Interface_BandwidthReservations_BandwidthReservation_State_Priority E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_InterfaceAttributes_Interface_BandwidthReservations_BandwidthReservation_State_Priority
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfaceAttributes_Interface_BandwidthReservations_BandwidthReservation_State_Priority_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfaceAttributes_Interface_BandwidthReservations_BandwidthReservation_State_Priority_Union_E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_InterfaceAttributes_Interface_BandwidthReservations_BandwidthReservation_State_Priority
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfaceAttributes_Interface_BandwidthReservations_BandwidthReservation_State_Priority_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfaceAttributes_Interface_BandwidthReservations_BandwidthReservation_State_Priority_Union_E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_InterfaceAttributes_Interface_BandwidthReservations_BandwidthReservation_State_Priority) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfaceAttributes_Interface_BandwidthReservations_BandwidthReservation_State_Priority_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfaceAttributes_Interface_BandwidthReservations_BandwidthReservation_State_Priority_Union_Uint8 is used when /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/bandwidth-reservations/bandwidth-reservation/priority
// is to be set to a uint8 value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfaceAttributes_Interface_BandwidthReservations_BandwidthReservation_State_Priority_Union_Uint8 struct {
	Uint8 uint8
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfaceAttributes_Interface_BandwidthReservations_BandwidthReservation_State_Priority_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfaceAttributes_Interface_BandwidthReservations_BandwidthReservation_State_Priority_Union_Uint8
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfaceAttributes_Interface_BandwidthReservations_BandwidthReservation_State_Priority_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfaceAttributes_Interface_BandwidthReservations_BandwidthReservation_State_Priority_Union_Uint8) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfaceAttributes_Interface_BandwidthReservations_BandwidthReservation_State_Priority_Union() {}

// To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfaceAttributes_Interface_BandwidthReservations_BandwidthReservation_State_Priority_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfaceAttributes_Interface_BandwidthReservations_BandwidthReservation_State_Priority_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfaceAttributes_Interface_BandwidthReservations_BandwidthReservation) To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfaceAttributes_Interface_BandwidthReservations_BandwidthReservation_State_Priority_Union(i interface{}) (OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfaceAttributes_Interface_BandwidthReservations_BandwidthReservation_State_Priority_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_InterfaceAttributes_Interface_BandwidthReservations_BandwidthReservation_State_Priority:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfaceAttributes_Interface_BandwidthReservations_BandwidthReservation_State_Priority_Union_E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_InterfaceAttributes_Interface_BandwidthReservations_BandwidthReservation_State_Priority{v}, nil
	case uint8:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfaceAttributes_Interface_BandwidthReservations_BandwidthReservation_State_Priority_Union_Uint8{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfaceAttributes_Interface_BandwidthReservations_BandwidthReservation_State_Priority_Union, unknown union type, got: %T, want any of [E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_InterfaceAttributes_Interface_BandwidthReservations_BandwidthReservation_State_Priority, uint8]", i, i)
	}
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_RecordRouteObjects_RecordRouteObject_State_ReportedLabel_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/record-route-objects/record-route-object/state/reported-label within the YANG schema.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_RecordRouteObjects_RecordRouteObject_State_ReportedLabel_Union interface {
	Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_RecordRouteObjects_RecordRouteObject_State_ReportedLabel_Union()
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_RecordRouteObjects_RecordRouteObject_State_ReportedLabel_Union_E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_RecordRouteObjects_RecordRouteObject_State_ReportedLabel is used when /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/record-route-objects/record-route-object/state/reported-label
// is to be set to a E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_RecordRouteObjects_RecordRouteObject_State_ReportedLabel value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_RecordRouteObjects_RecordRouteObject_State_ReportedLabel_Union_E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_RecordRouteObjects_RecordRouteObject_State_ReportedLabel struct {
	E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_RecordRouteObjects_RecordRouteObject_State_ReportedLabel E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_RecordRouteObjects_RecordRouteObject_State_ReportedLabel
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_RecordRouteObjects_RecordRouteObject_State_ReportedLabel_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_RecordRouteObjects_RecordRouteObject_State_ReportedLabel_Union_E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_RecordRouteObjects_RecordRouteObject_State_ReportedLabel
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_RecordRouteObjects_RecordRouteObject_State_ReportedLabel_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_RecordRouteObjects_RecordRouteObject_State_ReportedLabel_Union_E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_RecordRouteObjects_RecordRouteObject_State_ReportedLabel) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_RecordRouteObjects_RecordRouteObject_State_ReportedLabel_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_RecordRouteObjects_RecordRouteObject_State_ReportedLabel_Union_Uint32 is used when /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/record-route-objects/record-route-object/state/reported-label
// is to be set to a uint32 value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_RecordRouteObjects_RecordRouteObject_State_ReportedLabel_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_RecordRouteObjects_RecordRouteObject_State_ReportedLabel_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_RecordRouteObjects_RecordRouteObject_State_ReportedLabel_Union_Uint32
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_RecordRouteObjects_RecordRouteObject_State_ReportedLabel_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_RecordRouteObjects_RecordRouteObject_State_ReportedLabel_Union_Uint32) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_RecordRouteObjects_RecordRouteObject_State_ReportedLabel_Union() {}

// To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_RecordRouteObjects_RecordRouteObject_State_ReportedLabel_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_RecordRouteObjects_RecordRouteObject_State_ReportedLabel_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_RecordRouteObjects_RecordRouteObject_State) To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_RecordRouteObjects_RecordRouteObject_State_ReportedLabel_Union(i interface{}) (OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_RecordRouteObjects_RecordRouteObject_State_ReportedLabel_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_RecordRouteObjects_RecordRouteObject_State_ReportedLabel:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_RecordRouteObjects_RecordRouteObject_State_ReportedLabel_Union_E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_RecordRouteObjects_RecordRouteObject_State_ReportedLabel{v}, nil
	case uint32:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_RecordRouteObjects_RecordRouteObject_State_ReportedLabel_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_RecordRouteObjects_RecordRouteObject_State_ReportedLabel_Union, unknown union type, got: %T, want any of [E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_RecordRouteObjects_RecordRouteObject_State_ReportedLabel, uint32]", i, i)
	}
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelIn_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/state/label-in within the YANG schema.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelIn_Union interface {
	Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelIn_Union()
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelIn_Union_E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelIn is used when /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/state/label-in
// is to be set to a E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelIn value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelIn_Union_E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelIn struct {
	E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelIn E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelIn
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelIn_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelIn_Union_E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelIn
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelIn_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelIn_Union_E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelIn) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelIn_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelIn_Union_Uint32 is used when /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/state/label-in
// is to be set to a uint32 value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelIn_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelIn_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelIn_Union_Uint32
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelIn_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelIn_Union_Uint32) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelIn_Union() {}

// To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelIn_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelIn_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State) To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelIn_Union(i interface{}) (OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelIn_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelIn:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelIn_Union_E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelIn{v}, nil
	case uint32:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelIn_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelIn_Union, unknown union type, got: %T, want any of [E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelIn, uint32]", i, i)
	}
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelOut_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/state/label-out within the YANG schema.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelOut_Union interface {
	Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelOut_Union()
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelOut_Union_E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelOut is used when /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/state/label-out
// is to be set to a E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelOut value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelOut_Union_E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelOut struct {
	E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelOut E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelOut
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelOut_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelOut_Union_E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelOut
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelOut_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelOut_Union_E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelOut) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelOut_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelOut_Union_Uint32 is used when /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/state/label-out
// is to be set to a uint32 value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelOut_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelOut_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelOut_Union_Uint32
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelOut_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelOut_Union_Uint32) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelOut_Union() {}

// To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelOut_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelOut_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State) To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelOut_Union(i interface{}) (OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelOut_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelOut:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelOut_Union_E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelOut{v}, nil
	case uint32:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelOut_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelOut_Union, unknown union type, got: %T, want any of [E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_LabelOut, uint32]", i, i)
	}
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_SenderTspec_PeakDataRate_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/state/sender-tspec/peak-data-rate within the YANG schema.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_SenderTspec_PeakDataRate_Union interface {
	Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_SenderTspec_PeakDataRate_Union()
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_SenderTspec_PeakDataRate_Union_Binary is used when /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/state/sender-tspec/peak-data-rate
// is to be set to a Binary value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_SenderTspec_PeakDataRate_Union_Binary struct {
	Binary Binary
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_SenderTspec_PeakDataRate_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_SenderTspec_PeakDataRate_Union_Binary
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_SenderTspec_PeakDataRate_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_SenderTspec_PeakDataRate_Union_Binary) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_SenderTspec_PeakDataRate_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_SenderTspec_PeakDataRate_Union_E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_SenderTspec_PeakDataRate is used when /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/state/sender-tspec/peak-data-rate
// is to be set to a E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_SenderTspec_PeakDataRate value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_SenderTspec_PeakDataRate_Union_E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_SenderTspec_PeakDataRate struct {
	E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_SenderTspec_PeakDataRate E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_SenderTspec_PeakDataRate
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_SenderTspec_PeakDataRate_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_SenderTspec_PeakDataRate_Union_E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_SenderTspec_PeakDataRate
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_SenderTspec_PeakDataRate_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_SenderTspec_PeakDataRate_Union_E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_SenderTspec_PeakDataRate) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_SenderTspec_PeakDataRate_Union() {}

// To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_SenderTspec_PeakDataRate_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_SenderTspec_PeakDataRate_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_SenderTspec) To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_SenderTspec_PeakDataRate_Union(i interface{}) (OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_SenderTspec_PeakDataRate_Union, error) {
	switch v := i.(type) {
	case Binary:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_SenderTspec_PeakDataRate_Union_Binary{v}, nil
	case E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_SenderTspec_PeakDataRate:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_SenderTspec_PeakDataRate_Union_E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_SenderTspec_PeakDataRate{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_SenderTspec_PeakDataRate_Union, unknown union type, got: %T, want any of [Binary, E_OpenconfigMpls_Mpls_SignalingProtocols_RsvpTe_Sessions_Session_State_SenderTspec_PeakDataRate]", i, i)
	}
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/segment-routing/aggregate-sid-counters/aggregate-sid-counter/mpls-label within the YANG schema.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel_Union interface {
	Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel_Union()
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel_Union_E_OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel is used when /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/segment-routing/aggregate-sid-counters/aggregate-sid-counter/mpls-label
// is to be set to a E_OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel_Union_E_OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel struct {
	E_OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel E_OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel_Union_E_OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel_Union_E_OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel_Union_Uint32 is used when /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/segment-routing/aggregate-sid-counters/aggregate-sid-counter/mpls-label
// is to be set to a uint32 value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel_Union_Uint32
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel_Union_Uint32) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel_Union() {}

// To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter) To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel_Union(i interface{}) (OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel_Union_E_OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel{v}, nil
	case uint32:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel_Union, unknown union type, got: %T, want any of [E_OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel, uint32]", i, i)
	}
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interfaces_Interface_SidCounters_SidCounter_State_MplsLabel_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/sid-counters/sid-counter/mpls-label within the YANG schema.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interfaces_Interface_SidCounters_SidCounter_State_MplsLabel_Union interface {
	Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interfaces_Interface_SidCounters_SidCounter_State_MplsLabel_Union()
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interfaces_Interface_SidCounters_SidCounter_State_MplsLabel_Union_E_OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel is used when /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/sid-counters/sid-counter/mpls-label
// is to be set to a E_OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interfaces_Interface_SidCounters_SidCounter_State_MplsLabel_Union_E_OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel struct {
	E_OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel E_OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interfaces_Interface_SidCounters_SidCounter_State_MplsLabel_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interfaces_Interface_SidCounters_SidCounter_State_MplsLabel_Union_E_OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interfaces_Interface_SidCounters_SidCounter_State_MplsLabel_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interfaces_Interface_SidCounters_SidCounter_State_MplsLabel_Union_E_OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interfaces_Interface_SidCounters_SidCounter_State_MplsLabel_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interfaces_Interface_SidCounters_SidCounter_State_MplsLabel_Union_Uint32 is used when /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/sid-counters/sid-counter/mpls-label
// is to be set to a uint32 value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interfaces_Interface_SidCounters_SidCounter_State_MplsLabel_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interfaces_Interface_SidCounters_SidCounter_State_MplsLabel_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interfaces_Interface_SidCounters_SidCounter_State_MplsLabel_Union_Uint32
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interfaces_Interface_SidCounters_SidCounter_State_MplsLabel_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interfaces_Interface_SidCounters_SidCounter_State_MplsLabel_Union_Uint32) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interfaces_Interface_SidCounters_SidCounter_State_MplsLabel_Union() {}

// To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interfaces_Interface_SidCounters_SidCounter_State_MplsLabel_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interfaces_Interface_SidCounters_SidCounter_State_MplsLabel_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interfaces_Interface_SidCounters_SidCounter) To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interfaces_Interface_SidCounters_SidCounter_State_MplsLabel_Union(i interface{}) (OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interfaces_Interface_SidCounters_SidCounter_State_MplsLabel_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interfaces_Interface_SidCounters_SidCounter_State_MplsLabel_Union_E_OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel{v}, nil
	case uint32:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interfaces_Interface_SidCounters_SidCounter_State_MplsLabel_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interfaces_Interface_SidCounters_SidCounter_State_MplsLabel_Union, unknown union type, got: %T, want any of [E_OpenconfigMpls_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounters_AggregateSidCounter_State_MplsLabel, uint32]", i, i)
	}
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv4_Config_Protocol_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv4/config/protocol within the YANG schema.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv4_Config_Protocol_Union interface {
	Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv4_Config_Protocol_Union()
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv4_Config_Protocol_Union_E_OpenconfigPacketMatchTypes_IP_PROTOCOL is used when /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv4/config/protocol
// is to be set to a E_OpenconfigPacketMatchTypes_IP_PROTOCOL value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv4_Config_Protocol_Union_E_OpenconfigPacketMatchTypes_IP_PROTOCOL struct {
	E_OpenconfigPacketMatchTypes_IP_PROTOCOL E_OpenconfigPacketMatchTypes_IP_PROTOCOL
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv4_Config_Protocol_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv4_Config_Protocol_Union_E_OpenconfigPacketMatchTypes_IP_PROTOCOL
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv4_Config_Protocol_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv4_Config_Protocol_Union_E_OpenconfigPacketMatchTypes_IP_PROTOCOL) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv4_Config_Protocol_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv4_Config_Protocol_Union_Uint8 is used when /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv4/config/protocol
// is to be set to a uint8 value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv4_Config_Protocol_Union_Uint8 struct {
	Uint8 uint8
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv4_Config_Protocol_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv4_Config_Protocol_Union_Uint8
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv4_Config_Protocol_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv4_Config_Protocol_Union_Uint8) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv4_Config_Protocol_Union() {}

// To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv4_Config_Protocol_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv4_Config_Protocol_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv4_Config) To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv4_Config_Protocol_Union(i interface{}) (OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv4_Config_Protocol_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigPacketMatchTypes_IP_PROTOCOL:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv4_Config_Protocol_Union_E_OpenconfigPacketMatchTypes_IP_PROTOCOL{v}, nil
	case uint8:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv4_Config_Protocol_Union_Uint8{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv4_Config_Protocol_Union, unknown union type, got: %T, want any of [E_OpenconfigPacketMatchTypes_IP_PROTOCOL, uint8]", i, i)
	}
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv4_State_Protocol_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv4/state/protocol within the YANG schema.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv4_State_Protocol_Union interface {
	Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv4_State_Protocol_Union()
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv4_State_Protocol_Union_E_OpenconfigPacketMatchTypes_IP_PROTOCOL is used when /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv4/state/protocol
// is to be set to a E_OpenconfigPacketMatchTypes_IP_PROTOCOL value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv4_State_Protocol_Union_E_OpenconfigPacketMatchTypes_IP_PROTOCOL struct {
	E_OpenconfigPacketMatchTypes_IP_PROTOCOL E_OpenconfigPacketMatchTypes_IP_PROTOCOL
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv4_State_Protocol_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv4_State_Protocol_Union_E_OpenconfigPacketMatchTypes_IP_PROTOCOL
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv4_State_Protocol_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv4_State_Protocol_Union_E_OpenconfigPacketMatchTypes_IP_PROTOCOL) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv4_State_Protocol_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv4_State_Protocol_Union_Uint8 is used when /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv4/state/protocol
// is to be set to a uint8 value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv4_State_Protocol_Union_Uint8 struct {
	Uint8 uint8
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv4_State_Protocol_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv4_State_Protocol_Union_Uint8
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv4_State_Protocol_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv4_State_Protocol_Union_Uint8) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv4_State_Protocol_Union() {}

// To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv4_State_Protocol_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv4_State_Protocol_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv4_State) To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv4_State_Protocol_Union(i interface{}) (OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv4_State_Protocol_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigPacketMatchTypes_IP_PROTOCOL:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv4_State_Protocol_Union_E_OpenconfigPacketMatchTypes_IP_PROTOCOL{v}, nil
	case uint8:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv4_State_Protocol_Union_Uint8{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv4_State_Protocol_Union, unknown union type, got: %T, want any of [E_OpenconfigPacketMatchTypes_IP_PROTOCOL, uint8]", i, i)
	}
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv6_Config_Protocol_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6/config/protocol within the YANG schema.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv6_Config_Protocol_Union interface {
	Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv6_Config_Protocol_Union()
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv6_Config_Protocol_Union_E_OpenconfigPacketMatchTypes_IP_PROTOCOL is used when /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6/config/protocol
// is to be set to a E_OpenconfigPacketMatchTypes_IP_PROTOCOL value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv6_Config_Protocol_Union_E_OpenconfigPacketMatchTypes_IP_PROTOCOL struct {
	E_OpenconfigPacketMatchTypes_IP_PROTOCOL E_OpenconfigPacketMatchTypes_IP_PROTOCOL
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv6_Config_Protocol_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv6_Config_Protocol_Union_E_OpenconfigPacketMatchTypes_IP_PROTOCOL
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv6_Config_Protocol_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv6_Config_Protocol_Union_E_OpenconfigPacketMatchTypes_IP_PROTOCOL) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv6_Config_Protocol_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv6_Config_Protocol_Union_Uint8 is used when /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6/config/protocol
// is to be set to a uint8 value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv6_Config_Protocol_Union_Uint8 struct {
	Uint8 uint8
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv6_Config_Protocol_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv6_Config_Protocol_Union_Uint8
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv6_Config_Protocol_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv6_Config_Protocol_Union_Uint8) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv6_Config_Protocol_Union() {}

// To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv6_Config_Protocol_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv6_Config_Protocol_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv6_Config) To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv6_Config_Protocol_Union(i interface{}) (OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv6_Config_Protocol_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigPacketMatchTypes_IP_PROTOCOL:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv6_Config_Protocol_Union_E_OpenconfigPacketMatchTypes_IP_PROTOCOL{v}, nil
	case uint8:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv6_Config_Protocol_Union_Uint8{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv6_Config_Protocol_Union, unknown union type, got: %T, want any of [E_OpenconfigPacketMatchTypes_IP_PROTOCOL, uint8]", i, i)
	}
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv6_State_Protocol_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6/state/protocol within the YANG schema.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv6_State_Protocol_Union interface {
	Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv6_State_Protocol_Union()
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv6_State_Protocol_Union_E_OpenconfigPacketMatchTypes_IP_PROTOCOL is used when /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6/state/protocol
// is to be set to a E_OpenconfigPacketMatchTypes_IP_PROTOCOL value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv6_State_Protocol_Union_E_OpenconfigPacketMatchTypes_IP_PROTOCOL struct {
	E_OpenconfigPacketMatchTypes_IP_PROTOCOL E_OpenconfigPacketMatchTypes_IP_PROTOCOL
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv6_State_Protocol_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv6_State_Protocol_Union_E_OpenconfigPacketMatchTypes_IP_PROTOCOL
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv6_State_Protocol_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv6_State_Protocol_Union_E_OpenconfigPacketMatchTypes_IP_PROTOCOL) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv6_State_Protocol_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv6_State_Protocol_Union_Uint8 is used when /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6/state/protocol
// is to be set to a uint8 value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv6_State_Protocol_Union_Uint8 struct {
	Uint8 uint8
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv6_State_Protocol_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv6_State_Protocol_Union_Uint8
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv6_State_Protocol_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv6_State_Protocol_Union_Uint8) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv6_State_Protocol_Union() {}

// To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv6_State_Protocol_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv6_State_Protocol_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv6_State) To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv6_State_Protocol_Union(i interface{}) (OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv6_State_Protocol_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigPacketMatchTypes_IP_PROTOCOL:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv6_State_Protocol_Union_E_OpenconfigPacketMatchTypes_IP_PROTOCOL{v}, nil
	case uint8:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv6_State_Protocol_Union_Uint8{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Ipv6_State_Protocol_Union, unknown union type, got: %T, want any of [E_OpenconfigPacketMatchTypes_IP_PROTOCOL, uint8]", i, i)
	}
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_L2_Config_Ethertype_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/l2/config/ethertype within the YANG schema.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_L2_Config_Ethertype_Union interface {
	Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_L2_Config_Ethertype_Union()
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_L2_Config_Ethertype_Union_E_OpenconfigPacketMatchTypes_ETHERTYPE is used when /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/l2/config/ethertype
// is to be set to a E_OpenconfigPacketMatchTypes_ETHERTYPE value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_L2_Config_Ethertype_Union_E_OpenconfigPacketMatchTypes_ETHERTYPE struct {
	E_OpenconfigPacketMatchTypes_ETHERTYPE E_OpenconfigPacketMatchTypes_ETHERTYPE
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_L2_Config_Ethertype_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_L2_Config_Ethertype_Union_E_OpenconfigPacketMatchTypes_ETHERTYPE
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_L2_Config_Ethertype_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_L2_Config_Ethertype_Union_E_OpenconfigPacketMatchTypes_ETHERTYPE) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_L2_Config_Ethertype_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_L2_Config_Ethertype_Union_Uint16 is used when /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/l2/config/ethertype
// is to be set to a uint16 value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_L2_Config_Ethertype_Union_Uint16 struct {
	Uint16 uint16
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_L2_Config_Ethertype_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_L2_Config_Ethertype_Union_Uint16
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_L2_Config_Ethertype_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_L2_Config_Ethertype_Union_Uint16) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_L2_Config_Ethertype_Union() {}

// To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_L2_Config_Ethertype_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_L2_Config_Ethertype_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_L2_Config) To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_L2_Config_Ethertype_Union(i interface{}) (OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_L2_Config_Ethertype_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigPacketMatchTypes_ETHERTYPE:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_L2_Config_Ethertype_Union_E_OpenconfigPacketMatchTypes_ETHERTYPE{v}, nil
	case uint16:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_L2_Config_Ethertype_Union_Uint16{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_L2_Config_Ethertype_Union, unknown union type, got: %T, want any of [E_OpenconfigPacketMatchTypes_ETHERTYPE, uint16]", i, i)
	}
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_L2_State_Ethertype_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/l2/state/ethertype within the YANG schema.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_L2_State_Ethertype_Union interface {
	Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_L2_State_Ethertype_Union()
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_L2_State_Ethertype_Union_E_OpenconfigPacketMatchTypes_ETHERTYPE is used when /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/l2/state/ethertype
// is to be set to a E_OpenconfigPacketMatchTypes_ETHERTYPE value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_L2_State_Ethertype_Union_E_OpenconfigPacketMatchTypes_ETHERTYPE struct {
	E_OpenconfigPacketMatchTypes_ETHERTYPE E_OpenconfigPacketMatchTypes_ETHERTYPE
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_L2_State_Ethertype_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_L2_State_Ethertype_Union_E_OpenconfigPacketMatchTypes_ETHERTYPE
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_L2_State_Ethertype_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_L2_State_Ethertype_Union_E_OpenconfigPacketMatchTypes_ETHERTYPE) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_L2_State_Ethertype_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_L2_State_Ethertype_Union_Uint16 is used when /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/l2/state/ethertype
// is to be set to a uint16 value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_L2_State_Ethertype_Union_Uint16 struct {
	Uint16 uint16
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_L2_State_Ethertype_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_L2_State_Ethertype_Union_Uint16
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_L2_State_Ethertype_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_L2_State_Ethertype_Union_Uint16) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_L2_State_Ethertype_Union() {}

// To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_L2_State_Ethertype_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_L2_State_Ethertype_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_L2_State) To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_L2_State_Ethertype_Union(i interface{}) (OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_L2_State_Ethertype_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigPacketMatchTypes_ETHERTYPE:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_L2_State_Ethertype_Union_E_OpenconfigPacketMatchTypes_ETHERTYPE{v}, nil
	case uint16:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_L2_State_Ethertype_Union_Uint16{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_L2_State_Ethertype_Union, unknown union type, got: %T, want any of [E_OpenconfigPacketMatchTypes_ETHERTYPE, uint16]", i, i)
	}
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_Config_DestinationPort_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/transport/config/destination-port within the YANG schema.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_Config_DestinationPort_Union interface {
	Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_Config_DestinationPort_Union()
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_Config_DestinationPort_Union_E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort is used when /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/transport/config/destination-port
// is to be set to a E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_Config_DestinationPort_Union_E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort struct {
	E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_Config_DestinationPort_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_Config_DestinationPort_Union_E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_Config_DestinationPort_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_Config_DestinationPort_Union_E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_Config_DestinationPort_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_Config_DestinationPort_Union_String is used when /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/transport/config/destination-port
// is to be set to a string value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_Config_DestinationPort_Union_String struct {
	String string
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_Config_DestinationPort_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_Config_DestinationPort_Union_String
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_Config_DestinationPort_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_Config_DestinationPort_Union_String) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_Config_DestinationPort_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_Config_DestinationPort_Union_Uint16 is used when /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/transport/config/destination-port
// is to be set to a uint16 value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_Config_DestinationPort_Union_Uint16 struct {
	Uint16 uint16
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_Config_DestinationPort_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_Config_DestinationPort_Union_Uint16
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_Config_DestinationPort_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_Config_DestinationPort_Union_Uint16) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_Config_DestinationPort_Union() {}

// To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_Config_DestinationPort_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_Config_DestinationPort_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_Config) To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_Config_DestinationPort_Union(i interface{}) (OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_Config_DestinationPort_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_Config_DestinationPort_Union_E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort{v}, nil
	case string:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_Config_DestinationPort_Union_String{v}, nil
	case uint16:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_Config_DestinationPort_Union_Uint16{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_Config_DestinationPort_Union, unknown union type, got: %T, want any of [E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort, string, uint16]", i, i)
	}
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_Config_SourcePort_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/transport/config/source-port within the YANG schema.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_Config_SourcePort_Union interface {
	Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_Config_SourcePort_Union()
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_Config_SourcePort_Union_E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort is used when /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/transport/config/source-port
// is to be set to a E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_Config_SourcePort_Union_E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort struct {
	E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_Config_SourcePort_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_Config_SourcePort_Union_E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_Config_SourcePort_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_Config_SourcePort_Union_E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_Config_SourcePort_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_Config_SourcePort_Union_String is used when /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/transport/config/source-port
// is to be set to a string value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_Config_SourcePort_Union_String struct {
	String string
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_Config_SourcePort_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_Config_SourcePort_Union_String
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_Config_SourcePort_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_Config_SourcePort_Union_String) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_Config_SourcePort_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_Config_SourcePort_Union_Uint16 is used when /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/transport/config/source-port
// is to be set to a uint16 value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_Config_SourcePort_Union_Uint16 struct {
	Uint16 uint16
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_Config_SourcePort_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_Config_SourcePort_Union_Uint16
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_Config_SourcePort_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_Config_SourcePort_Union_Uint16) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_Config_SourcePort_Union() {}

// To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_Config_SourcePort_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_Config_SourcePort_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_Config) To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_Config_SourcePort_Union(i interface{}) (OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_Config_SourcePort_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_Config_SourcePort_Union_E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort{v}, nil
	case string:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_Config_SourcePort_Union_String{v}, nil
	case uint16:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_Config_SourcePort_Union_Uint16{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_Config_SourcePort_Union, unknown union type, got: %T, want any of [E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort, string, uint16]", i, i)
	}
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_State_DestinationPort_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/transport/state/destination-port within the YANG schema.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_State_DestinationPort_Union interface {
	Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_State_DestinationPort_Union()
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_State_DestinationPort_Union_E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort is used when /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/transport/state/destination-port
// is to be set to a E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_State_DestinationPort_Union_E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort struct {
	E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_State_DestinationPort_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_State_DestinationPort_Union_E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_State_DestinationPort_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_State_DestinationPort_Union_E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_State_DestinationPort_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_State_DestinationPort_Union_String is used when /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/transport/state/destination-port
// is to be set to a string value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_State_DestinationPort_Union_String struct {
	String string
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_State_DestinationPort_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_State_DestinationPort_Union_String
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_State_DestinationPort_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_State_DestinationPort_Union_String) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_State_DestinationPort_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_State_DestinationPort_Union_Uint16 is used when /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/transport/state/destination-port
// is to be set to a uint16 value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_State_DestinationPort_Union_Uint16 struct {
	Uint16 uint16
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_State_DestinationPort_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_State_DestinationPort_Union_Uint16
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_State_DestinationPort_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_State_DestinationPort_Union_Uint16) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_State_DestinationPort_Union() {}

// To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_State_DestinationPort_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_State_DestinationPort_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_State) To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_State_DestinationPort_Union(i interface{}) (OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_State_DestinationPort_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_State_DestinationPort_Union_E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort{v}, nil
	case string:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_State_DestinationPort_Union_String{v}, nil
	case uint16:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_State_DestinationPort_Union_Uint16{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_State_DestinationPort_Union, unknown union type, got: %T, want any of [E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort, string, uint16]", i, i)
	}
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_State_SourcePort_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/transport/state/source-port within the YANG schema.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_State_SourcePort_Union interface {
	Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_State_SourcePort_Union()
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_State_SourcePort_Union_E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort is used when /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/transport/state/source-port
// is to be set to a E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_State_SourcePort_Union_E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort struct {
	E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_State_SourcePort_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_State_SourcePort_Union_E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_State_SourcePort_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_State_SourcePort_Union_E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_State_SourcePort_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_State_SourcePort_Union_String is used when /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/transport/state/source-port
// is to be set to a string value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_State_SourcePort_Union_String struct {
	String string
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_State_SourcePort_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_State_SourcePort_Union_String
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_State_SourcePort_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_State_SourcePort_Union_String) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_State_SourcePort_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_State_SourcePort_Union_Uint16 is used when /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/transport/state/source-port
// is to be set to a uint16 value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_State_SourcePort_Union_Uint16 struct {
	Uint16 uint16
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_State_SourcePort_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_State_SourcePort_Union_Uint16
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_State_SourcePort_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_State_SourcePort_Union_Uint16) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_State_SourcePort_Union() {}

// To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_State_SourcePort_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_State_SourcePort_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_State) To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_State_SourcePort_Union(i interface{}) (OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_State_SourcePort_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_State_SourcePort_Union_E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort{v}, nil
	case string:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_State_SourcePort_Union_String{v}, nil
	case uint16:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_State_SourcePort_Union_Uint16{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_PolicyForwarding_Policies_Policy_Rules_Rule_Transport_State_SourcePort_Union, unknown union type, got: %T, want any of [E_OpenconfigAcl_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort, string, uint16]", i, i)
	}
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_Neighbors_Neighbor_RouteReflector_Config_RouteReflectorClusterId_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/route-reflector/config/route-reflector-cluster-id within the YANG schema.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_Neighbors_Neighbor_RouteReflector_Config_RouteReflectorClusterId_Union interface {
	Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_Neighbors_Neighbor_RouteReflector_Config_RouteReflectorClusterId_Union()
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_Neighbors_Neighbor_RouteReflector_Config_RouteReflectorClusterId_Union_String is used when /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/route-reflector/config/route-reflector-cluster-id
// is to be set to a string value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_Neighbors_Neighbor_RouteReflector_Config_RouteReflectorClusterId_Union_String struct {
	String string
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_Neighbors_Neighbor_RouteReflector_Config_RouteReflectorClusterId_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_Neighbors_Neighbor_RouteReflector_Config_RouteReflectorClusterId_Union_String
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_Neighbors_Neighbor_RouteReflector_Config_RouteReflectorClusterId_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_Neighbors_Neighbor_RouteReflector_Config_RouteReflectorClusterId_Union_String) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_Neighbors_Neighbor_RouteReflector_Config_RouteReflectorClusterId_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_Neighbors_Neighbor_RouteReflector_Config_RouteReflectorClusterId_Union_Uint32 is used when /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/route-reflector/config/route-reflector-cluster-id
// is to be set to a uint32 value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_Neighbors_Neighbor_RouteReflector_Config_RouteReflectorClusterId_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_Neighbors_Neighbor_RouteReflector_Config_RouteReflectorClusterId_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_Neighbors_Neighbor_RouteReflector_Config_RouteReflectorClusterId_Union_Uint32
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_Neighbors_Neighbor_RouteReflector_Config_RouteReflectorClusterId_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_Neighbors_Neighbor_RouteReflector_Config_RouteReflectorClusterId_Union_Uint32) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_Neighbors_Neighbor_RouteReflector_Config_RouteReflectorClusterId_Union() {}

// To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_Neighbors_Neighbor_RouteReflector_Config_RouteReflectorClusterId_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_Neighbors_Neighbor_RouteReflector_Config_RouteReflectorClusterId_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_Neighbors_Neighbor_RouteReflector_Config) To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_Neighbors_Neighbor_RouteReflector_Config_RouteReflectorClusterId_Union(i interface{}) (OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_Neighbors_Neighbor_RouteReflector_Config_RouteReflectorClusterId_Union, error) {
	switch v := i.(type) {
	case string:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_Neighbors_Neighbor_RouteReflector_Config_RouteReflectorClusterId_Union_String{v}, nil
	case uint32:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_Neighbors_Neighbor_RouteReflector_Config_RouteReflectorClusterId_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_Neighbors_Neighbor_RouteReflector_Config_RouteReflectorClusterId_Union, unknown union type, got: %T, want any of [string, uint32]", i, i)
	}
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_Neighbors_Neighbor_RouteReflector_State_RouteReflectorClusterId_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/route-reflector/state/route-reflector-cluster-id within the YANG schema.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_Neighbors_Neighbor_RouteReflector_State_RouteReflectorClusterId_Union interface {
	Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_Neighbors_Neighbor_RouteReflector_State_RouteReflectorClusterId_Union()
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_Neighbors_Neighbor_RouteReflector_State_RouteReflectorClusterId_Union_String is used when /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/route-reflector/state/route-reflector-cluster-id
// is to be set to a string value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_Neighbors_Neighbor_RouteReflector_State_RouteReflectorClusterId_Union_String struct {
	String string
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_Neighbors_Neighbor_RouteReflector_State_RouteReflectorClusterId_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_Neighbors_Neighbor_RouteReflector_State_RouteReflectorClusterId_Union_String
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_Neighbors_Neighbor_RouteReflector_State_RouteReflectorClusterId_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_Neighbors_Neighbor_RouteReflector_State_RouteReflectorClusterId_Union_String) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_Neighbors_Neighbor_RouteReflector_State_RouteReflectorClusterId_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_Neighbors_Neighbor_RouteReflector_State_RouteReflectorClusterId_Union_Uint32 is used when /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/route-reflector/state/route-reflector-cluster-id
// is to be set to a uint32 value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_Neighbors_Neighbor_RouteReflector_State_RouteReflectorClusterId_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_Neighbors_Neighbor_RouteReflector_State_RouteReflectorClusterId_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_Neighbors_Neighbor_RouteReflector_State_RouteReflectorClusterId_Union_Uint32
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_Neighbors_Neighbor_RouteReflector_State_RouteReflectorClusterId_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_Neighbors_Neighbor_RouteReflector_State_RouteReflectorClusterId_Union_Uint32) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_Neighbors_Neighbor_RouteReflector_State_RouteReflectorClusterId_Union() {}

// To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_Neighbors_Neighbor_RouteReflector_State_RouteReflectorClusterId_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_Neighbors_Neighbor_RouteReflector_State_RouteReflectorClusterId_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_Neighbors_Neighbor_RouteReflector_State) To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_Neighbors_Neighbor_RouteReflector_State_RouteReflectorClusterId_Union(i interface{}) (OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_Neighbors_Neighbor_RouteReflector_State_RouteReflectorClusterId_Union, error) {
	switch v := i.(type) {
	case string:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_Neighbors_Neighbor_RouteReflector_State_RouteReflectorClusterId_Union_String{v}, nil
	case uint32:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_Neighbors_Neighbor_RouteReflector_State_RouteReflectorClusterId_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_Neighbors_Neighbor_RouteReflector_State_RouteReflectorClusterId_Union, unknown union type, got: %T, want any of [string, uint32]", i, i)
	}
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_PeerGroups_PeerGroup_RouteReflector_Config_RouteReflectorClusterId_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/route-reflector/config/route-reflector-cluster-id within the YANG schema.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_PeerGroups_PeerGroup_RouteReflector_Config_RouteReflectorClusterId_Union interface {
	Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_PeerGroups_PeerGroup_RouteReflector_Config_RouteReflectorClusterId_Union()
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_PeerGroups_PeerGroup_RouteReflector_Config_RouteReflectorClusterId_Union_String is used when /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/route-reflector/config/route-reflector-cluster-id
// is to be set to a string value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_PeerGroups_PeerGroup_RouteReflector_Config_RouteReflectorClusterId_Union_String struct {
	String string
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_PeerGroups_PeerGroup_RouteReflector_Config_RouteReflectorClusterId_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_PeerGroups_PeerGroup_RouteReflector_Config_RouteReflectorClusterId_Union_String
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_PeerGroups_PeerGroup_RouteReflector_Config_RouteReflectorClusterId_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_PeerGroups_PeerGroup_RouteReflector_Config_RouteReflectorClusterId_Union_String) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_PeerGroups_PeerGroup_RouteReflector_Config_RouteReflectorClusterId_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_PeerGroups_PeerGroup_RouteReflector_Config_RouteReflectorClusterId_Union_Uint32 is used when /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/route-reflector/config/route-reflector-cluster-id
// is to be set to a uint32 value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_PeerGroups_PeerGroup_RouteReflector_Config_RouteReflectorClusterId_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_PeerGroups_PeerGroup_RouteReflector_Config_RouteReflectorClusterId_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_PeerGroups_PeerGroup_RouteReflector_Config_RouteReflectorClusterId_Union_Uint32
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_PeerGroups_PeerGroup_RouteReflector_Config_RouteReflectorClusterId_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_PeerGroups_PeerGroup_RouteReflector_Config_RouteReflectorClusterId_Union_Uint32) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_PeerGroups_PeerGroup_RouteReflector_Config_RouteReflectorClusterId_Union() {}

// To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_PeerGroups_PeerGroup_RouteReflector_Config_RouteReflectorClusterId_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_PeerGroups_PeerGroup_RouteReflector_Config_RouteReflectorClusterId_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_PeerGroups_PeerGroup_RouteReflector_Config) To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_PeerGroups_PeerGroup_RouteReflector_Config_RouteReflectorClusterId_Union(i interface{}) (OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_PeerGroups_PeerGroup_RouteReflector_Config_RouteReflectorClusterId_Union, error) {
	switch v := i.(type) {
	case string:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_PeerGroups_PeerGroup_RouteReflector_Config_RouteReflectorClusterId_Union_String{v}, nil
	case uint32:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_PeerGroups_PeerGroup_RouteReflector_Config_RouteReflectorClusterId_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_PeerGroups_PeerGroup_RouteReflector_Config_RouteReflectorClusterId_Union, unknown union type, got: %T, want any of [string, uint32]", i, i)
	}
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_PeerGroups_PeerGroup_RouteReflector_State_RouteReflectorClusterId_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/route-reflector/state/route-reflector-cluster-id within the YANG schema.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_PeerGroups_PeerGroup_RouteReflector_State_RouteReflectorClusterId_Union interface {
	Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_PeerGroups_PeerGroup_RouteReflector_State_RouteReflectorClusterId_Union()
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_PeerGroups_PeerGroup_RouteReflector_State_RouteReflectorClusterId_Union_String is used when /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/route-reflector/state/route-reflector-cluster-id
// is to be set to a string value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_PeerGroups_PeerGroup_RouteReflector_State_RouteReflectorClusterId_Union_String struct {
	String string
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_PeerGroups_PeerGroup_RouteReflector_State_RouteReflectorClusterId_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_PeerGroups_PeerGroup_RouteReflector_State_RouteReflectorClusterId_Union_String
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_PeerGroups_PeerGroup_RouteReflector_State_RouteReflectorClusterId_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_PeerGroups_PeerGroup_RouteReflector_State_RouteReflectorClusterId_Union_String) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_PeerGroups_PeerGroup_RouteReflector_State_RouteReflectorClusterId_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_PeerGroups_PeerGroup_RouteReflector_State_RouteReflectorClusterId_Union_Uint32 is used when /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/route-reflector/state/route-reflector-cluster-id
// is to be set to a uint32 value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_PeerGroups_PeerGroup_RouteReflector_State_RouteReflectorClusterId_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_PeerGroups_PeerGroup_RouteReflector_State_RouteReflectorClusterId_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_PeerGroups_PeerGroup_RouteReflector_State_RouteReflectorClusterId_Union_Uint32
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_PeerGroups_PeerGroup_RouteReflector_State_RouteReflectorClusterId_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_PeerGroups_PeerGroup_RouteReflector_State_RouteReflectorClusterId_Union_Uint32) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_PeerGroups_PeerGroup_RouteReflector_State_RouteReflectorClusterId_Union() {}

// To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_PeerGroups_PeerGroup_RouteReflector_State_RouteReflectorClusterId_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_PeerGroups_PeerGroup_RouteReflector_State_RouteReflectorClusterId_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_PeerGroups_PeerGroup_RouteReflector_State) To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_PeerGroups_PeerGroup_RouteReflector_State_RouteReflectorClusterId_Union(i interface{}) (OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_PeerGroups_PeerGroup_RouteReflector_State_RouteReflectorClusterId_Union, error) {
	switch v := i.(type) {
	case string:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_PeerGroups_PeerGroup_RouteReflector_State_RouteReflectorClusterId_Union_String{v}, nil
	case uint32:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_PeerGroups_PeerGroup_RouteReflector_State_RouteReflectorClusterId_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Bgp_PeerGroups_PeerGroup_RouteReflector_State_RouteReflectorClusterId_Union, unknown union type, got: %T, want any of [string, uint32]", i, i)
	}
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_Config_SidId_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/sid-id within the YANG schema.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_Config_SidId_Union interface {
	Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_Config_SidId_Union()
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_Config_SidId_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_Config_SidId is used when /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/sid-id
// is to be set to a E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_Config_SidId value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_Config_SidId_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_Config_SidId struct {
	E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_Config_SidId E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_Config_SidId
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_Config_SidId_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_Config_SidId_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_Config_SidId
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_Config_SidId_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_Config_SidId_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_Config_SidId) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_Config_SidId_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_Config_SidId_Union_String is used when /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/sid-id
// is to be set to a string value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_Config_SidId_Union_String struct {
	String string
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_Config_SidId_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_Config_SidId_Union_String
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_Config_SidId_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_Config_SidId_Union_String) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_Config_SidId_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_Config_SidId_Union_Uint32 is used when /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/sid-id
// is to be set to a uint32 value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_Config_SidId_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_Config_SidId_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_Config_SidId_Union_Uint32
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_Config_SidId_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_Config_SidId_Union_Uint32) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_Config_SidId_Union() {}

// To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_Config_SidId_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_Config_SidId_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid) To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_Config_SidId_Union(i interface{}) (OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_Config_SidId_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_Config_SidId:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_Config_SidId_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_Config_SidId{v}, nil
	case string:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_Config_SidId_Union_String{v}, nil
	case uint32:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_Config_SidId_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_Config_SidId_Union, unknown union type, got: %T, want any of [E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_Config_SidId, string, uint32]", i, i)
	}
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State_AllocatedDynamicLocal_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/state/allocated-dynamic-local within the YANG schema.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State_AllocatedDynamicLocal_Union interface {
	Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State_AllocatedDynamicLocal_Union()
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State_AllocatedDynamicLocal_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State_AllocatedDynamicLocal is used when /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/state/allocated-dynamic-local
// is to be set to a E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State_AllocatedDynamicLocal value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State_AllocatedDynamicLocal_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State_AllocatedDynamicLocal struct {
	E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State_AllocatedDynamicLocal E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State_AllocatedDynamicLocal
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State_AllocatedDynamicLocal_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State_AllocatedDynamicLocal_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State_AllocatedDynamicLocal
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State_AllocatedDynamicLocal_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State_AllocatedDynamicLocal_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State_AllocatedDynamicLocal) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State_AllocatedDynamicLocal_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State_AllocatedDynamicLocal_Union_String is used when /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/state/allocated-dynamic-local
// is to be set to a string value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State_AllocatedDynamicLocal_Union_String struct {
	String string
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State_AllocatedDynamicLocal_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State_AllocatedDynamicLocal_Union_String
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State_AllocatedDynamicLocal_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State_AllocatedDynamicLocal_Union_String) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State_AllocatedDynamicLocal_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State_AllocatedDynamicLocal_Union_Uint32 is used when /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/state/allocated-dynamic-local
// is to be set to a uint32 value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State_AllocatedDynamicLocal_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State_AllocatedDynamicLocal_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State_AllocatedDynamicLocal_Union_Uint32
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State_AllocatedDynamicLocal_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State_AllocatedDynamicLocal_Union_Uint32) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State_AllocatedDynamicLocal_Union() {}

// To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State_AllocatedDynamicLocal_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State_AllocatedDynamicLocal_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State) To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State_AllocatedDynamicLocal_Union(i interface{}) (OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State_AllocatedDynamicLocal_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State_AllocatedDynamicLocal:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State_AllocatedDynamicLocal_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State_AllocatedDynamicLocal{v}, nil
	case string:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State_AllocatedDynamicLocal_Union_String{v}, nil
	case uint32:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State_AllocatedDynamicLocal_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State_AllocatedDynamicLocal_Union, unknown union type, got: %T, want any of [E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State_AllocatedDynamicLocal, string, uint32]", i, i)
	}
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State_SidId_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/state/sid-id within the YANG schema.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State_SidId_Union interface {
	Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State_SidId_Union()
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State_SidId_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_Config_SidId is used when /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/state/sid-id
// is to be set to a E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_Config_SidId value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State_SidId_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_Config_SidId struct {
	E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_Config_SidId E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_Config_SidId
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State_SidId_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State_SidId_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_Config_SidId
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State_SidId_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State_SidId_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_Config_SidId) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State_SidId_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State_SidId_Union_String is used when /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/state/sid-id
// is to be set to a string value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State_SidId_Union_String struct {
	String string
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State_SidId_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State_SidId_Union_String
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State_SidId_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State_SidId_Union_String) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State_SidId_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State_SidId_Union_Uint32 is used when /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/state/sid-id
// is to be set to a uint32 value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State_SidId_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State_SidId_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State_SidId_Union_Uint32
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State_SidId_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State_SidId_Union_Uint32) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State_SidId_Union() {}

// To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State_SidId_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State_SidId_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State) To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State_SidId_Union(i interface{}) (OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State_SidId_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_Config_SidId:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State_SidId_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_Config_SidId{v}, nil
	case string:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State_SidId_Union_String{v}, nil
	case uint32:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State_SidId_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_State_SidId_Union, unknown union type, got: %T, want any of [E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_AdjacencySids_AdjacencySid_Config_SidId, string, uint32]", i, i)
	}
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_Config_SidId_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid/config/sid-id within the YANG schema.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_Config_SidId_Union interface {
	Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_Config_SidId_Union()
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_Config_SidId_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_Config_SidId is used when /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid/config/sid-id
// is to be set to a E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_Config_SidId value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_Config_SidId_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_Config_SidId struct {
	E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_Config_SidId E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_Config_SidId
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_Config_SidId_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_Config_SidId_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_Config_SidId
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_Config_SidId_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_Config_SidId_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_Config_SidId) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_Config_SidId_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_Config_SidId_Union_String is used when /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid/config/sid-id
// is to be set to a string value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_Config_SidId_Union_String struct {
	String string
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_Config_SidId_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_Config_SidId_Union_String
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_Config_SidId_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_Config_SidId_Union_String) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_Config_SidId_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_Config_SidId_Union_Uint32 is used when /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid/config/sid-id
// is to be set to a uint32 value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_Config_SidId_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_Config_SidId_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_Config_SidId_Union_Uint32
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_Config_SidId_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_Config_SidId_Union_Uint32) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_Config_SidId_Union() {}

// To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_Config_SidId_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_Config_SidId_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_Config) To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_Config_SidId_Union(i interface{}) (OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_Config_SidId_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_Config_SidId:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_Config_SidId_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_Config_SidId{v}, nil
	case string:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_Config_SidId_Union_String{v}, nil
	case uint32:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_Config_SidId_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_Config_SidId_Union, unknown union type, got: %T, want any of [E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_Config_SidId, string, uint32]", i, i)
	}
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_State_SidId_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid/state/sid-id within the YANG schema.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_State_SidId_Union interface {
	Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_State_SidId_Union()
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_State_SidId_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_Config_SidId is used when /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid/state/sid-id
// is to be set to a E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_Config_SidId value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_State_SidId_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_Config_SidId struct {
	E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_Config_SidId E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_Config_SidId
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_State_SidId_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_State_SidId_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_Config_SidId
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_State_SidId_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_State_SidId_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_Config_SidId) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_State_SidId_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_State_SidId_Union_String is used when /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid/state/sid-id
// is to be set to a string value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_State_SidId_Union_String struct {
	String string
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_State_SidId_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_State_SidId_Union_String
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_State_SidId_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_State_SidId_Union_String) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_State_SidId_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_State_SidId_Union_Uint32 is used when /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid/state/sid-id
// is to be set to a uint32 value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_State_SidId_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_State_SidId_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_State_SidId_Union_Uint32
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_State_SidId_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_State_SidId_Union_Uint32) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_State_SidId_Union() {}

// To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_State_SidId_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_State_SidId_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_State) To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_State_SidId_Union(i interface{}) (OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_State_SidId_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_Config_SidId:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_State_SidId_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_Config_SidId{v}, nil
	case string:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_State_SidId_Union_String{v}, nil
	case uint32:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_State_SidId_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_State_SidId_Union, unknown union type, got: %T, want any of [E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Interfaces_Interface_Levels_Level_AfiSafi_Af_SegmentRouting_PrefixSids_PrefixSid_Config_SidId, string, uint32]", i, i)
	}
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Levels_Level_LinkStateDatabase_Lsp_Tlvs_Tlv_RouterCapabilities_Capability_Subtlvs_Subtlv_SegmentRoutingCapability_SrgbDescriptors_SrgbDescriptor_State_Label_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv/segment-routing-capability/srgb-descriptors/srgb-descriptor/state/label within the YANG schema.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Levels_Level_LinkStateDatabase_Lsp_Tlvs_Tlv_RouterCapabilities_Capability_Subtlvs_Subtlv_SegmentRoutingCapability_SrgbDescriptors_SrgbDescriptor_State_Label_Union interface {
	Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Levels_Level_LinkStateDatabase_Lsp_Tlvs_Tlv_RouterCapabilities_Capability_Subtlvs_Subtlv_SegmentRoutingCapability_SrgbDescriptors_SrgbDescriptor_State_Label_Union()
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Levels_Level_LinkStateDatabase_Lsp_Tlvs_Tlv_RouterCapabilities_Capability_Subtlvs_Subtlv_SegmentRoutingCapability_SrgbDescriptors_SrgbDescriptor_State_Label_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Levels_Level_LinkStateDatabase_Lsp_Tlvs_Tlv_RouterCapabilities_Capability_Subtlvs_Subtlv_SegmentRoutingCapability_SrgbDescriptors_SrgbDescriptor_State_Label is used when /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv/segment-routing-capability/srgb-descriptors/srgb-descriptor/state/label
// is to be set to a E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Levels_Level_LinkStateDatabase_Lsp_Tlvs_Tlv_RouterCapabilities_Capability_Subtlvs_Subtlv_SegmentRoutingCapability_SrgbDescriptors_SrgbDescriptor_State_Label value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Levels_Level_LinkStateDatabase_Lsp_Tlvs_Tlv_RouterCapabilities_Capability_Subtlvs_Subtlv_SegmentRoutingCapability_SrgbDescriptors_SrgbDescriptor_State_Label_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Levels_Level_LinkStateDatabase_Lsp_Tlvs_Tlv_RouterCapabilities_Capability_Subtlvs_Subtlv_SegmentRoutingCapability_SrgbDescriptors_SrgbDescriptor_State_Label struct {
	E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Levels_Level_LinkStateDatabase_Lsp_Tlvs_Tlv_RouterCapabilities_Capability_Subtlvs_Subtlv_SegmentRoutingCapability_SrgbDescriptors_SrgbDescriptor_State_Label E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Levels_Level_LinkStateDatabase_Lsp_Tlvs_Tlv_RouterCapabilities_Capability_Subtlvs_Subtlv_SegmentRoutingCapability_SrgbDescriptors_SrgbDescriptor_State_Label
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Levels_Level_LinkStateDatabase_Lsp_Tlvs_Tlv_RouterCapabilities_Capability_Subtlvs_Subtlv_SegmentRoutingCapability_SrgbDescriptors_SrgbDescriptor_State_Label_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Levels_Level_LinkStateDatabase_Lsp_Tlvs_Tlv_RouterCapabilities_Capability_Subtlvs_Subtlv_SegmentRoutingCapability_SrgbDescriptors_SrgbDescriptor_State_Label_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Levels_Level_LinkStateDatabase_Lsp_Tlvs_Tlv_RouterCapabilities_Capability_Subtlvs_Subtlv_SegmentRoutingCapability_SrgbDescriptors_SrgbDescriptor_State_Label
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Levels_Level_LinkStateDatabase_Lsp_Tlvs_Tlv_RouterCapabilities_Capability_Subtlvs_Subtlv_SegmentRoutingCapability_SrgbDescriptors_SrgbDescriptor_State_Label_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Levels_Level_LinkStateDatabase_Lsp_Tlvs_Tlv_RouterCapabilities_Capability_Subtlvs_Subtlv_SegmentRoutingCapability_SrgbDescriptors_SrgbDescriptor_State_Label_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Levels_Level_LinkStateDatabase_Lsp_Tlvs_Tlv_RouterCapabilities_Capability_Subtlvs_Subtlv_SegmentRoutingCapability_SrgbDescriptors_SrgbDescriptor_State_Label) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Levels_Level_LinkStateDatabase_Lsp_Tlvs_Tlv_RouterCapabilities_Capability_Subtlvs_Subtlv_SegmentRoutingCapability_SrgbDescriptors_SrgbDescriptor_State_Label_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Levels_Level_LinkStateDatabase_Lsp_Tlvs_Tlv_RouterCapabilities_Capability_Subtlvs_Subtlv_SegmentRoutingCapability_SrgbDescriptors_SrgbDescriptor_State_Label_Union_Uint32 is used when /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv/segment-routing-capability/srgb-descriptors/srgb-descriptor/state/label
// is to be set to a uint32 value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Levels_Level_LinkStateDatabase_Lsp_Tlvs_Tlv_RouterCapabilities_Capability_Subtlvs_Subtlv_SegmentRoutingCapability_SrgbDescriptors_SrgbDescriptor_State_Label_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Levels_Level_LinkStateDatabase_Lsp_Tlvs_Tlv_RouterCapabilities_Capability_Subtlvs_Subtlv_SegmentRoutingCapability_SrgbDescriptors_SrgbDescriptor_State_Label_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Levels_Level_LinkStateDatabase_Lsp_Tlvs_Tlv_RouterCapabilities_Capability_Subtlvs_Subtlv_SegmentRoutingCapability_SrgbDescriptors_SrgbDescriptor_State_Label_Union_Uint32
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Levels_Level_LinkStateDatabase_Lsp_Tlvs_Tlv_RouterCapabilities_Capability_Subtlvs_Subtlv_SegmentRoutingCapability_SrgbDescriptors_SrgbDescriptor_State_Label_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Levels_Level_LinkStateDatabase_Lsp_Tlvs_Tlv_RouterCapabilities_Capability_Subtlvs_Subtlv_SegmentRoutingCapability_SrgbDescriptors_SrgbDescriptor_State_Label_Union_Uint32) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Levels_Level_LinkStateDatabase_Lsp_Tlvs_Tlv_RouterCapabilities_Capability_Subtlvs_Subtlv_SegmentRoutingCapability_SrgbDescriptors_SrgbDescriptor_State_Label_Union() {}

// To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Levels_Level_LinkStateDatabase_Lsp_Tlvs_Tlv_RouterCapabilities_Capability_Subtlvs_Subtlv_SegmentRoutingCapability_SrgbDescriptors_SrgbDescriptor_State_Label_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Levels_Level_LinkStateDatabase_Lsp_Tlvs_Tlv_RouterCapabilities_Capability_Subtlvs_Subtlv_SegmentRoutingCapability_SrgbDescriptors_SrgbDescriptor_State_Label_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Levels_Level_LinkStateDatabase_Lsp_Tlvs_Tlv_RouterCapabilities_Capability_Subtlvs_Subtlv_SegmentRoutingCapability_SrgbDescriptors_SrgbDescriptor_State) To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Levels_Level_LinkStateDatabase_Lsp_Tlvs_Tlv_RouterCapabilities_Capability_Subtlvs_Subtlv_SegmentRoutingCapability_SrgbDescriptors_SrgbDescriptor_State_Label_Union(i interface{}) (OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Levels_Level_LinkStateDatabase_Lsp_Tlvs_Tlv_RouterCapabilities_Capability_Subtlvs_Subtlv_SegmentRoutingCapability_SrgbDescriptors_SrgbDescriptor_State_Label_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Levels_Level_LinkStateDatabase_Lsp_Tlvs_Tlv_RouterCapabilities_Capability_Subtlvs_Subtlv_SegmentRoutingCapability_SrgbDescriptors_SrgbDescriptor_State_Label:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Levels_Level_LinkStateDatabase_Lsp_Tlvs_Tlv_RouterCapabilities_Capability_Subtlvs_Subtlv_SegmentRoutingCapability_SrgbDescriptors_SrgbDescriptor_State_Label_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Levels_Level_LinkStateDatabase_Lsp_Tlvs_Tlv_RouterCapabilities_Capability_Subtlvs_Subtlv_SegmentRoutingCapability_SrgbDescriptors_SrgbDescriptor_State_Label{v}, nil
	case uint32:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Levels_Level_LinkStateDatabase_Lsp_Tlvs_Tlv_RouterCapabilities_Capability_Subtlvs_Subtlv_SegmentRoutingCapability_SrgbDescriptors_SrgbDescriptor_State_Label_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Levels_Level_LinkStateDatabase_Lsp_Tlvs_Tlv_RouterCapabilities_Capability_Subtlvs_Subtlv_SegmentRoutingCapability_SrgbDescriptors_SrgbDescriptor_State_Label_Union, unknown union type, got: %T, want any of [E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Isis_Levels_Level_LinkStateDatabase_Lsp_Tlvs_Tlv_RouterCapabilities_Capability_Subtlvs_Subtlv_SegmentRoutingCapability_SrgbDescriptors_SrgbDescriptor_State_Label, uint32]", i, i)
	}
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_LocalAggregates_Aggregate_Config_SetTag_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-network-instance/network-instances/network-instance/protocols/protocol/local-aggregates/aggregate/config/set-tag within the YANG schema.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_LocalAggregates_Aggregate_Config_SetTag_Union interface {
	Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_LocalAggregates_Aggregate_Config_SetTag_Union()
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_LocalAggregates_Aggregate_Config_SetTag_Union_String is used when /openconfig-network-instance/network-instances/network-instance/protocols/protocol/local-aggregates/aggregate/config/set-tag
// is to be set to a string value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_LocalAggregates_Aggregate_Config_SetTag_Union_String struct {
	String string
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_LocalAggregates_Aggregate_Config_SetTag_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_LocalAggregates_Aggregate_Config_SetTag_Union_String
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_LocalAggregates_Aggregate_Config_SetTag_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_LocalAggregates_Aggregate_Config_SetTag_Union_String) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_LocalAggregates_Aggregate_Config_SetTag_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_LocalAggregates_Aggregate_Config_SetTag_Union_Uint32 is used when /openconfig-network-instance/network-instances/network-instance/protocols/protocol/local-aggregates/aggregate/config/set-tag
// is to be set to a uint32 value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_LocalAggregates_Aggregate_Config_SetTag_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_LocalAggregates_Aggregate_Config_SetTag_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_LocalAggregates_Aggregate_Config_SetTag_Union_Uint32
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_LocalAggregates_Aggregate_Config_SetTag_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_LocalAggregates_Aggregate_Config_SetTag_Union_Uint32) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_LocalAggregates_Aggregate_Config_SetTag_Union() {}

// To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_LocalAggregates_Aggregate_Config_SetTag_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_LocalAggregates_Aggregate_Config_SetTag_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_LocalAggregates_Aggregate_Config) To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_LocalAggregates_Aggregate_Config_SetTag_Union(i interface{}) (OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_LocalAggregates_Aggregate_Config_SetTag_Union, error) {
	switch v := i.(type) {
	case string:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_LocalAggregates_Aggregate_Config_SetTag_Union_String{v}, nil
	case uint32:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_LocalAggregates_Aggregate_Config_SetTag_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_LocalAggregates_Aggregate_Config_SetTag_Union, unknown union type, got: %T, want any of [string, uint32]", i, i)
	}
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_LocalAggregates_Aggregate_State_SetTag_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-network-instance/network-instances/network-instance/protocols/protocol/local-aggregates/aggregate/state/set-tag within the YANG schema.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_LocalAggregates_Aggregate_State_SetTag_Union interface {
	Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_LocalAggregates_Aggregate_State_SetTag_Union()
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_LocalAggregates_Aggregate_State_SetTag_Union_String is used when /openconfig-network-instance/network-instances/network-instance/protocols/protocol/local-aggregates/aggregate/state/set-tag
// is to be set to a string value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_LocalAggregates_Aggregate_State_SetTag_Union_String struct {
	String string
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_LocalAggregates_Aggregate_State_SetTag_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_LocalAggregates_Aggregate_State_SetTag_Union_String
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_LocalAggregates_Aggregate_State_SetTag_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_LocalAggregates_Aggregate_State_SetTag_Union_String) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_LocalAggregates_Aggregate_State_SetTag_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_LocalAggregates_Aggregate_State_SetTag_Union_Uint32 is used when /openconfig-network-instance/network-instances/network-instance/protocols/protocol/local-aggregates/aggregate/state/set-tag
// is to be set to a uint32 value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_LocalAggregates_Aggregate_State_SetTag_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_LocalAggregates_Aggregate_State_SetTag_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_LocalAggregates_Aggregate_State_SetTag_Union_Uint32
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_LocalAggregates_Aggregate_State_SetTag_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_LocalAggregates_Aggregate_State_SetTag_Union_Uint32) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_LocalAggregates_Aggregate_State_SetTag_Union() {}

// To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_LocalAggregates_Aggregate_State_SetTag_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_LocalAggregates_Aggregate_State_SetTag_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_LocalAggregates_Aggregate_State) To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_LocalAggregates_Aggregate_State_SetTag_Union(i interface{}) (OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_LocalAggregates_Aggregate_State_SetTag_Union, error) {
	switch v := i.(type) {
	case string:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_LocalAggregates_Aggregate_State_SetTag_Union_String{v}, nil
	case uint32:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_LocalAggregates_Aggregate_State_SetTag_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_LocalAggregates_Aggregate_State_SetTag_Union, unknown union type, got: %T, want any of [string, uint32]", i, i)
	}
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Config_Identifier_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/identifier within the YANG schema.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Config_Identifier_Union interface {
	Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Config_Identifier_Union()
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Config_Identifier_Union_String is used when /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/identifier
// is to be set to a string value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Config_Identifier_Union_String struct {
	String string
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Config_Identifier_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Config_Identifier_Union_String
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Config_Identifier_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Config_Identifier_Union_String) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Config_Identifier_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Config_Identifier_Union_Uint32 is used when /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/identifier
// is to be set to a uint32 value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Config_Identifier_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Config_Identifier_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Config_Identifier_Union_Uint32
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Config_Identifier_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Config_Identifier_Union_Uint32) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Config_Identifier_Union() {}

// To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Config_Identifier_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Config_Identifier_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area) To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Config_Identifier_Union(i interface{}) (OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Config_Identifier_Union, error) {
	switch v := i.(type) {
	case string:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Config_Identifier_Union_String{v}, nil
	case uint32:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Config_Identifier_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Config_Identifier_Union, unknown union type, got: %T, want any of [string, uint32]", i, i)
	}
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_ExtendedLink_State_LinkData_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/state/link-data within the YANG schema.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_ExtendedLink_State_LinkData_Union interface {
	Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_ExtendedLink_State_LinkData_Union()
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_ExtendedLink_State_LinkData_Union_String is used when /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/state/link-data
// is to be set to a string value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_ExtendedLink_State_LinkData_Union_String struct {
	String string
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_ExtendedLink_State_LinkData_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_ExtendedLink_State_LinkData_Union_String
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_ExtendedLink_State_LinkData_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_ExtendedLink_State_LinkData_Union_String) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_ExtendedLink_State_LinkData_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_ExtendedLink_State_LinkData_Union_Uint32 is used when /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/state/link-data
// is to be set to a uint32 value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_ExtendedLink_State_LinkData_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_ExtendedLink_State_LinkData_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_ExtendedLink_State_LinkData_Union_Uint32
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_ExtendedLink_State_LinkData_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_ExtendedLink_State_LinkData_Union_Uint32) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_ExtendedLink_State_LinkData_Union() {}

// To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_ExtendedLink_State_LinkData_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_ExtendedLink_State_LinkData_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_ExtendedLink_State) To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_ExtendedLink_State_LinkData_Union(i interface{}) (OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_ExtendedLink_State_LinkData_Union, error) {
	switch v := i.(type) {
	case string:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_ExtendedLink_State_LinkData_Union_String{v}, nil
	case uint32:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_ExtendedLink_State_LinkData_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_ExtendedLink_State_LinkData_Union, unknown union type, got: %T, want any of [string, uint32]", i, i)
	}
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_RouterInformation_Tlvs_Tlv_SegmentRoutingSidLabelRange_Tlvs_Tlv_State_Type_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/state/type within the YANG schema.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_RouterInformation_Tlvs_Tlv_SegmentRoutingSidLabelRange_Tlvs_Tlv_State_Type_Union interface {
	Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_RouterInformation_Tlvs_Tlv_SegmentRoutingSidLabelRange_Tlvs_Tlv_State_Type_Union()
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_RouterInformation_Tlvs_Tlv_SegmentRoutingSidLabelRange_Tlvs_Tlv_State_Type_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_RouterInformation_Tlvs_Tlv_SegmentRoutingSidLabelRange_Tlvs_Tlv_State_Type is used when /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/state/type
// is to be set to a E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_RouterInformation_Tlvs_Tlv_SegmentRoutingSidLabelRange_Tlvs_Tlv_State_Type value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_RouterInformation_Tlvs_Tlv_SegmentRoutingSidLabelRange_Tlvs_Tlv_State_Type_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_RouterInformation_Tlvs_Tlv_SegmentRoutingSidLabelRange_Tlvs_Tlv_State_Type struct {
	E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_RouterInformation_Tlvs_Tlv_SegmentRoutingSidLabelRange_Tlvs_Tlv_State_Type E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_RouterInformation_Tlvs_Tlv_SegmentRoutingSidLabelRange_Tlvs_Tlv_State_Type
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_RouterInformation_Tlvs_Tlv_SegmentRoutingSidLabelRange_Tlvs_Tlv_State_Type_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_RouterInformation_Tlvs_Tlv_SegmentRoutingSidLabelRange_Tlvs_Tlv_State_Type_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_RouterInformation_Tlvs_Tlv_SegmentRoutingSidLabelRange_Tlvs_Tlv_State_Type
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_RouterInformation_Tlvs_Tlv_SegmentRoutingSidLabelRange_Tlvs_Tlv_State_Type_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_RouterInformation_Tlvs_Tlv_SegmentRoutingSidLabelRange_Tlvs_Tlv_State_Type_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_RouterInformation_Tlvs_Tlv_SegmentRoutingSidLabelRange_Tlvs_Tlv_State_Type) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_RouterInformation_Tlvs_Tlv_SegmentRoutingSidLabelRange_Tlvs_Tlv_State_Type_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_RouterInformation_Tlvs_Tlv_SegmentRoutingSidLabelRange_Tlvs_Tlv_State_Type_Union_E_OpenconfigOspfTypes_OSPF_RI_SR_SID_LABEL_TLV_TYPES is used when /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/state/type
// is to be set to a E_OpenconfigOspfTypes_OSPF_RI_SR_SID_LABEL_TLV_TYPES value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_RouterInformation_Tlvs_Tlv_SegmentRoutingSidLabelRange_Tlvs_Tlv_State_Type_Union_E_OpenconfigOspfTypes_OSPF_RI_SR_SID_LABEL_TLV_TYPES struct {
	E_OpenconfigOspfTypes_OSPF_RI_SR_SID_LABEL_TLV_TYPES E_OpenconfigOspfTypes_OSPF_RI_SR_SID_LABEL_TLV_TYPES
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_RouterInformation_Tlvs_Tlv_SegmentRoutingSidLabelRange_Tlvs_Tlv_State_Type_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_RouterInformation_Tlvs_Tlv_SegmentRoutingSidLabelRange_Tlvs_Tlv_State_Type_Union_E_OpenconfigOspfTypes_OSPF_RI_SR_SID_LABEL_TLV_TYPES
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_RouterInformation_Tlvs_Tlv_SegmentRoutingSidLabelRange_Tlvs_Tlv_State_Type_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_RouterInformation_Tlvs_Tlv_SegmentRoutingSidLabelRange_Tlvs_Tlv_State_Type_Union_E_OpenconfigOspfTypes_OSPF_RI_SR_SID_LABEL_TLV_TYPES) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_RouterInformation_Tlvs_Tlv_SegmentRoutingSidLabelRange_Tlvs_Tlv_State_Type_Union() {}

// To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_RouterInformation_Tlvs_Tlv_SegmentRoutingSidLabelRange_Tlvs_Tlv_State_Type_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_RouterInformation_Tlvs_Tlv_SegmentRoutingSidLabelRange_Tlvs_Tlv_State_Type_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_RouterInformation_Tlvs_Tlv_SegmentRoutingSidLabelRange_Tlvs_Tlv_State) To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_RouterInformation_Tlvs_Tlv_SegmentRoutingSidLabelRange_Tlvs_Tlv_State_Type_Union(i interface{}) (OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_RouterInformation_Tlvs_Tlv_SegmentRoutingSidLabelRange_Tlvs_Tlv_State_Type_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_RouterInformation_Tlvs_Tlv_SegmentRoutingSidLabelRange_Tlvs_Tlv_State_Type:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_RouterInformation_Tlvs_Tlv_SegmentRoutingSidLabelRange_Tlvs_Tlv_State_Type_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_RouterInformation_Tlvs_Tlv_SegmentRoutingSidLabelRange_Tlvs_Tlv_State_Type{v}, nil
	case E_OpenconfigOspfTypes_OSPF_RI_SR_SID_LABEL_TLV_TYPES:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_RouterInformation_Tlvs_Tlv_SegmentRoutingSidLabelRange_Tlvs_Tlv_State_Type_Union_E_OpenconfigOspfTypes_OSPF_RI_SR_SID_LABEL_TLV_TYPES{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_RouterInformation_Tlvs_Tlv_SegmentRoutingSidLabelRange_Tlvs_Tlv_State_Type_Union, unknown union type, got: %T, want any of [E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_RouterInformation_Tlvs_Tlv_SegmentRoutingSidLabelRange_Tlvs_Tlv_State_Type, E_OpenconfigOspfTypes_OSPF_RI_SR_SID_LABEL_TLV_TYPES]", i, i)
	}
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_RouterInformation_Tlvs_Tlv_State_Type_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/state/type within the YANG schema.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_RouterInformation_Tlvs_Tlv_State_Type_Union interface {
	Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_RouterInformation_Tlvs_Tlv_State_Type_Union()
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_RouterInformation_Tlvs_Tlv_State_Type_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_RouterInformation_Tlvs_Tlv_State_Type is used when /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/state/type
// is to be set to a E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_RouterInformation_Tlvs_Tlv_State_Type value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_RouterInformation_Tlvs_Tlv_State_Type_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_RouterInformation_Tlvs_Tlv_State_Type struct {
	E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_RouterInformation_Tlvs_Tlv_State_Type E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_RouterInformation_Tlvs_Tlv_State_Type
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_RouterInformation_Tlvs_Tlv_State_Type_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_RouterInformation_Tlvs_Tlv_State_Type_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_RouterInformation_Tlvs_Tlv_State_Type
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_RouterInformation_Tlvs_Tlv_State_Type_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_RouterInformation_Tlvs_Tlv_State_Type_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_RouterInformation_Tlvs_Tlv_State_Type) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_RouterInformation_Tlvs_Tlv_State_Type_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_RouterInformation_Tlvs_Tlv_State_Type_Union_E_OpenconfigOspfTypes_RI_LSA_TLV_TYPES is used when /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/state/type
// is to be set to a E_OpenconfigOspfTypes_RI_LSA_TLV_TYPES value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_RouterInformation_Tlvs_Tlv_State_Type_Union_E_OpenconfigOspfTypes_RI_LSA_TLV_TYPES struct {
	E_OpenconfigOspfTypes_RI_LSA_TLV_TYPES E_OpenconfigOspfTypes_RI_LSA_TLV_TYPES
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_RouterInformation_Tlvs_Tlv_State_Type_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_RouterInformation_Tlvs_Tlv_State_Type_Union_E_OpenconfigOspfTypes_RI_LSA_TLV_TYPES
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_RouterInformation_Tlvs_Tlv_State_Type_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_RouterInformation_Tlvs_Tlv_State_Type_Union_E_OpenconfigOspfTypes_RI_LSA_TLV_TYPES) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_RouterInformation_Tlvs_Tlv_State_Type_Union() {}

// To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_RouterInformation_Tlvs_Tlv_State_Type_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_RouterInformation_Tlvs_Tlv_State_Type_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_RouterInformation_Tlvs_Tlv_State) To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_RouterInformation_Tlvs_Tlv_State_Type_Union(i interface{}) (OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_RouterInformation_Tlvs_Tlv_State_Type_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_RouterInformation_Tlvs_Tlv_State_Type:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_RouterInformation_Tlvs_Tlv_State_Type_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_RouterInformation_Tlvs_Tlv_State_Type{v}, nil
	case E_OpenconfigOspfTypes_RI_LSA_TLV_TYPES:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_RouterInformation_Tlvs_Tlv_State_Type_Union_E_OpenconfigOspfTypes_RI_LSA_TLV_TYPES{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_RouterInformation_Tlvs_Tlv_State_Type_Union, unknown union type, got: %T, want any of [E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_RouterInformation_Tlvs_Tlv_State_Type, E_OpenconfigOspfTypes_RI_LSA_TLV_TYPES]", i, i)
	}
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_TrafficEngineering_Tlvs_Tlv_Link_SubTlvs_SubTlv_State_Type_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/type within the YANG schema.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_TrafficEngineering_Tlvs_Tlv_Link_SubTlvs_SubTlv_State_Type_Union interface {
	Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_TrafficEngineering_Tlvs_Tlv_Link_SubTlvs_SubTlv_State_Type_Union()
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_TrafficEngineering_Tlvs_Tlv_Link_SubTlvs_SubTlv_State_Type_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_TrafficEngineering_Tlvs_Tlv_Link_SubTlvs_SubTlv_State_Type is used when /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/type
// is to be set to a E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_TrafficEngineering_Tlvs_Tlv_Link_SubTlvs_SubTlv_State_Type value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_TrafficEngineering_Tlvs_Tlv_Link_SubTlvs_SubTlv_State_Type_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_TrafficEngineering_Tlvs_Tlv_Link_SubTlvs_SubTlv_State_Type struct {
	E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_TrafficEngineering_Tlvs_Tlv_Link_SubTlvs_SubTlv_State_Type E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_TrafficEngineering_Tlvs_Tlv_Link_SubTlvs_SubTlv_State_Type
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_TrafficEngineering_Tlvs_Tlv_Link_SubTlvs_SubTlv_State_Type_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_TrafficEngineering_Tlvs_Tlv_Link_SubTlvs_SubTlv_State_Type_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_TrafficEngineering_Tlvs_Tlv_Link_SubTlvs_SubTlv_State_Type
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_TrafficEngineering_Tlvs_Tlv_Link_SubTlvs_SubTlv_State_Type_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_TrafficEngineering_Tlvs_Tlv_Link_SubTlvs_SubTlv_State_Type_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_TrafficEngineering_Tlvs_Tlv_Link_SubTlvs_SubTlv_State_Type) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_TrafficEngineering_Tlvs_Tlv_Link_SubTlvs_SubTlv_State_Type_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_TrafficEngineering_Tlvs_Tlv_Link_SubTlvs_SubTlv_State_Type_Union_E_OpenconfigOspfTypes_OSPF_TE_LINK_TLV_TYPE is used when /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/type
// is to be set to a E_OpenconfigOspfTypes_OSPF_TE_LINK_TLV_TYPE value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_TrafficEngineering_Tlvs_Tlv_Link_SubTlvs_SubTlv_State_Type_Union_E_OpenconfigOspfTypes_OSPF_TE_LINK_TLV_TYPE struct {
	E_OpenconfigOspfTypes_OSPF_TE_LINK_TLV_TYPE E_OpenconfigOspfTypes_OSPF_TE_LINK_TLV_TYPE
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_TrafficEngineering_Tlvs_Tlv_Link_SubTlvs_SubTlv_State_Type_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_TrafficEngineering_Tlvs_Tlv_Link_SubTlvs_SubTlv_State_Type_Union_E_OpenconfigOspfTypes_OSPF_TE_LINK_TLV_TYPE
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_TrafficEngineering_Tlvs_Tlv_Link_SubTlvs_SubTlv_State_Type_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_TrafficEngineering_Tlvs_Tlv_Link_SubTlvs_SubTlv_State_Type_Union_E_OpenconfigOspfTypes_OSPF_TE_LINK_TLV_TYPE) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_TrafficEngineering_Tlvs_Tlv_Link_SubTlvs_SubTlv_State_Type_Union() {}

// To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_TrafficEngineering_Tlvs_Tlv_Link_SubTlvs_SubTlv_State_Type_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_TrafficEngineering_Tlvs_Tlv_Link_SubTlvs_SubTlv_State_Type_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_TrafficEngineering_Tlvs_Tlv_Link_SubTlvs_SubTlv_State) To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_TrafficEngineering_Tlvs_Tlv_Link_SubTlvs_SubTlv_State_Type_Union(i interface{}) (OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_TrafficEngineering_Tlvs_Tlv_Link_SubTlvs_SubTlv_State_Type_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_TrafficEngineering_Tlvs_Tlv_Link_SubTlvs_SubTlv_State_Type:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_TrafficEngineering_Tlvs_Tlv_Link_SubTlvs_SubTlv_State_Type_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_TrafficEngineering_Tlvs_Tlv_Link_SubTlvs_SubTlv_State_Type{v}, nil
	case E_OpenconfigOspfTypes_OSPF_TE_LINK_TLV_TYPE:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_TrafficEngineering_Tlvs_Tlv_Link_SubTlvs_SubTlv_State_Type_Union_E_OpenconfigOspfTypes_OSPF_TE_LINK_TLV_TYPE{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_TrafficEngineering_Tlvs_Tlv_Link_SubTlvs_SubTlv_State_Type_Union, unknown union type, got: %T, want any of [E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_TrafficEngineering_Tlvs_Tlv_Link_SubTlvs_SubTlv_State_Type, E_OpenconfigOspfTypes_OSPF_TE_LINK_TLV_TYPE]", i, i)
	}
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_TrafficEngineering_Tlvs_Tlv_NodeAttribute_SubTlvs_SubTlv_State_Type_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/state/type within the YANG schema.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_TrafficEngineering_Tlvs_Tlv_NodeAttribute_SubTlvs_SubTlv_State_Type_Union interface {
	Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_TrafficEngineering_Tlvs_Tlv_NodeAttribute_SubTlvs_SubTlv_State_Type_Union()
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_TrafficEngineering_Tlvs_Tlv_NodeAttribute_SubTlvs_SubTlv_State_Type_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_TrafficEngineering_Tlvs_Tlv_NodeAttribute_SubTlvs_SubTlv_State_Type is used when /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/state/type
// is to be set to a E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_TrafficEngineering_Tlvs_Tlv_NodeAttribute_SubTlvs_SubTlv_State_Type value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_TrafficEngineering_Tlvs_Tlv_NodeAttribute_SubTlvs_SubTlv_State_Type_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_TrafficEngineering_Tlvs_Tlv_NodeAttribute_SubTlvs_SubTlv_State_Type struct {
	E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_TrafficEngineering_Tlvs_Tlv_NodeAttribute_SubTlvs_SubTlv_State_Type E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_TrafficEngineering_Tlvs_Tlv_NodeAttribute_SubTlvs_SubTlv_State_Type
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_TrafficEngineering_Tlvs_Tlv_NodeAttribute_SubTlvs_SubTlv_State_Type_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_TrafficEngineering_Tlvs_Tlv_NodeAttribute_SubTlvs_SubTlv_State_Type_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_TrafficEngineering_Tlvs_Tlv_NodeAttribute_SubTlvs_SubTlv_State_Type
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_TrafficEngineering_Tlvs_Tlv_NodeAttribute_SubTlvs_SubTlv_State_Type_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_TrafficEngineering_Tlvs_Tlv_NodeAttribute_SubTlvs_SubTlv_State_Type_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_TrafficEngineering_Tlvs_Tlv_NodeAttribute_SubTlvs_SubTlv_State_Type) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_TrafficEngineering_Tlvs_Tlv_NodeAttribute_SubTlvs_SubTlv_State_Type_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_TrafficEngineering_Tlvs_Tlv_NodeAttribute_SubTlvs_SubTlv_State_Type_Union_E_OpenconfigOspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE is used when /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/state/type
// is to be set to a E_OpenconfigOspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_TrafficEngineering_Tlvs_Tlv_NodeAttribute_SubTlvs_SubTlv_State_Type_Union_E_OpenconfigOspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE struct {
	E_OpenconfigOspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE E_OpenconfigOspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_TrafficEngineering_Tlvs_Tlv_NodeAttribute_SubTlvs_SubTlv_State_Type_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_TrafficEngineering_Tlvs_Tlv_NodeAttribute_SubTlvs_SubTlv_State_Type_Union_E_OpenconfigOspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_TrafficEngineering_Tlvs_Tlv_NodeAttribute_SubTlvs_SubTlv_State_Type_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_TrafficEngineering_Tlvs_Tlv_NodeAttribute_SubTlvs_SubTlv_State_Type_Union_E_OpenconfigOspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_TrafficEngineering_Tlvs_Tlv_NodeAttribute_SubTlvs_SubTlv_State_Type_Union() {}

// To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_TrafficEngineering_Tlvs_Tlv_NodeAttribute_SubTlvs_SubTlv_State_Type_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_TrafficEngineering_Tlvs_Tlv_NodeAttribute_SubTlvs_SubTlv_State_Type_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_TrafficEngineering_Tlvs_Tlv_NodeAttribute_SubTlvs_SubTlv_State) To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_TrafficEngineering_Tlvs_Tlv_NodeAttribute_SubTlvs_SubTlv_State_Type_Union(i interface{}) (OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_TrafficEngineering_Tlvs_Tlv_NodeAttribute_SubTlvs_SubTlv_State_Type_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_TrafficEngineering_Tlvs_Tlv_NodeAttribute_SubTlvs_SubTlv_State_Type:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_TrafficEngineering_Tlvs_Tlv_NodeAttribute_SubTlvs_SubTlv_State_Type_Union_E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_TrafficEngineering_Tlvs_Tlv_NodeAttribute_SubTlvs_SubTlv_State_Type{v}, nil
	case E_OpenconfigOspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_TrafficEngineering_Tlvs_Tlv_NodeAttribute_SubTlvs_SubTlv_State_Type_Union_E_OpenconfigOspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_TrafficEngineering_Tlvs_Tlv_NodeAttribute_SubTlvs_SubTlv_State_Type_Union, unknown union type, got: %T, want any of [E_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_OpaqueLsa_TrafficEngineering_Tlvs_Tlv_NodeAttribute_SubTlvs_SubTlv_State_Type, E_OpenconfigOspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE]", i, i)
	}
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_RouterLsa_State_LinkData_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/link-data within the YANG schema.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_RouterLsa_State_LinkData_Union interface {
	Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_RouterLsa_State_LinkData_Union()
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_RouterLsa_State_LinkData_Union_String is used when /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/link-data
// is to be set to a string value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_RouterLsa_State_LinkData_Union_String struct {
	String string
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_RouterLsa_State_LinkData_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_RouterLsa_State_LinkData_Union_String
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_RouterLsa_State_LinkData_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_RouterLsa_State_LinkData_Union_String) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_RouterLsa_State_LinkData_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_RouterLsa_State_LinkData_Union_Uint32 is used when /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/link-data
// is to be set to a uint32 value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_RouterLsa_State_LinkData_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_RouterLsa_State_LinkData_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_RouterLsa_State_LinkData_Union_Uint32
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_RouterLsa_State_LinkData_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_RouterLsa_State_LinkData_Union_Uint32) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_RouterLsa_State_LinkData_Union() {}

// To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_RouterLsa_State_LinkData_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_RouterLsa_State_LinkData_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_RouterLsa_State) To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_RouterLsa_State_LinkData_Union(i interface{}) (OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_RouterLsa_State_LinkData_Union, error) {
	switch v := i.(type) {
	case string:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_RouterLsa_State_LinkData_Union_String{v}, nil
	case uint32:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_RouterLsa_State_LinkData_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_LsaTypes_LsaType_Lsas_Lsa_RouterLsa_State_LinkData_Union, unknown union type, got: %T, want any of [string, uint32]", i, i)
	}
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_State_Identifier_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/state/identifier within the YANG schema.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_State_Identifier_Union interface {
	Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_State_Identifier_Union()
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_State_Identifier_Union_String is used when /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/state/identifier
// is to be set to a string value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_State_Identifier_Union_String struct {
	String string
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_State_Identifier_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_State_Identifier_Union_String
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_State_Identifier_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_State_Identifier_Union_String) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_State_Identifier_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_State_Identifier_Union_Uint32 is used when /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/state/identifier
// is to be set to a uint32 value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_State_Identifier_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_State_Identifier_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_State_Identifier_Union_Uint32
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_State_Identifier_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_State_Identifier_Union_Uint32) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_State_Identifier_Union() {}

// To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_State_Identifier_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_State_Identifier_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_State) To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_State_Identifier_Union(i interface{}) (OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_State_Identifier_Union, error) {
	switch v := i.(type) {
	case string:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_State_Identifier_Union_String{v}, nil
	case uint32:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_State_Identifier_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_Lsdb_State_Identifier_Union, unknown union type, got: %T, want any of [string, uint32]", i, i)
	}
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_State_Identifier_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/state/identifier within the YANG schema.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_State_Identifier_Union interface {
	Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_State_Identifier_Union()
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_State_Identifier_Union_String is used when /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/state/identifier
// is to be set to a string value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_State_Identifier_Union_String struct {
	String string
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_State_Identifier_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_State_Identifier_Union_String
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_State_Identifier_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_State_Identifier_Union_String) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_State_Identifier_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_State_Identifier_Union_Uint32 is used when /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/state/identifier
// is to be set to a uint32 value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_State_Identifier_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_State_Identifier_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_State_Identifier_Union_Uint32
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_State_Identifier_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_State_Identifier_Union_Uint32) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_State_Identifier_Union() {}

// To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_State_Identifier_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_State_Identifier_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_State) To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_State_Identifier_Union(i interface{}) (OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_State_Identifier_Union, error) {
	switch v := i.(type) {
	case string:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_State_Identifier_Union_String{v}, nil
	case uint32:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_State_Identifier_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_Ospfv2_Areas_Area_State_Identifier_Union, unknown union type, got: %T, want any of [string, uint32]", i, i)
	}
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_Config_SetTag_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/config/set-tag within the YANG schema.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_Config_SetTag_Union interface {
	Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_Config_SetTag_Union()
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_Config_SetTag_Union_String is used when /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/config/set-tag
// is to be set to a string value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_Config_SetTag_Union_String struct {
	String string
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_Config_SetTag_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_Config_SetTag_Union_String
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_Config_SetTag_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_Config_SetTag_Union_String) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_Config_SetTag_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_Config_SetTag_Union_Uint32 is used when /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/config/set-tag
// is to be set to a uint32 value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_Config_SetTag_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_Config_SetTag_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_Config_SetTag_Union_Uint32
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_Config_SetTag_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_Config_SetTag_Union_Uint32) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_Config_SetTag_Union() {}

// To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_Config_SetTag_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_Config_SetTag_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_Config) To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_Config_SetTag_Union(i interface{}) (OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_Config_SetTag_Union, error) {
	switch v := i.(type) {
	case string:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_Config_SetTag_Union_String{v}, nil
	case uint32:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_Config_SetTag_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_Config_SetTag_Union, unknown union type, got: %T, want any of [string, uint32]", i, i)
	}
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_NextHops_NextHop_Config_NextHop_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/config/next-hop within the YANG schema.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_NextHops_NextHop_Config_NextHop_Union interface {
	Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_NextHops_NextHop_Config_NextHop_Union()
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_NextHops_NextHop_Config_NextHop_Union_E_OpenconfigLocalRouting_LOCAL_DEFINED_NEXT_HOP is used when /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/config/next-hop
// is to be set to a E_OpenconfigLocalRouting_LOCAL_DEFINED_NEXT_HOP value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_NextHops_NextHop_Config_NextHop_Union_E_OpenconfigLocalRouting_LOCAL_DEFINED_NEXT_HOP struct {
	E_OpenconfigLocalRouting_LOCAL_DEFINED_NEXT_HOP E_OpenconfigLocalRouting_LOCAL_DEFINED_NEXT_HOP
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_NextHops_NextHop_Config_NextHop_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_NextHops_NextHop_Config_NextHop_Union_E_OpenconfigLocalRouting_LOCAL_DEFINED_NEXT_HOP
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_NextHops_NextHop_Config_NextHop_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_NextHops_NextHop_Config_NextHop_Union_E_OpenconfigLocalRouting_LOCAL_DEFINED_NEXT_HOP) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_NextHops_NextHop_Config_NextHop_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_NextHops_NextHop_Config_NextHop_Union_String is used when /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/config/next-hop
// is to be set to a string value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_NextHops_NextHop_Config_NextHop_Union_String struct {
	String string
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_NextHops_NextHop_Config_NextHop_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_NextHops_NextHop_Config_NextHop_Union_String
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_NextHops_NextHop_Config_NextHop_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_NextHops_NextHop_Config_NextHop_Union_String) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_NextHops_NextHop_Config_NextHop_Union() {}

// To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_NextHops_NextHop_Config_NextHop_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_NextHops_NextHop_Config_NextHop_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_NextHops_NextHop_Config) To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_NextHops_NextHop_Config_NextHop_Union(i interface{}) (OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_NextHops_NextHop_Config_NextHop_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigLocalRouting_LOCAL_DEFINED_NEXT_HOP:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_NextHops_NextHop_Config_NextHop_Union_E_OpenconfigLocalRouting_LOCAL_DEFINED_NEXT_HOP{v}, nil
	case string:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_NextHops_NextHop_Config_NextHop_Union_String{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_NextHops_NextHop_Config_NextHop_Union, unknown union type, got: %T, want any of [E_OpenconfigLocalRouting_LOCAL_DEFINED_NEXT_HOP, string]", i, i)
	}
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_NextHops_NextHop_State_NextHop_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/state/next-hop within the YANG schema.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_NextHops_NextHop_State_NextHop_Union interface {
	Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_NextHops_NextHop_State_NextHop_Union()
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_NextHops_NextHop_State_NextHop_Union_E_OpenconfigLocalRouting_LOCAL_DEFINED_NEXT_HOP is used when /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/state/next-hop
// is to be set to a E_OpenconfigLocalRouting_LOCAL_DEFINED_NEXT_HOP value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_NextHops_NextHop_State_NextHop_Union_E_OpenconfigLocalRouting_LOCAL_DEFINED_NEXT_HOP struct {
	E_OpenconfigLocalRouting_LOCAL_DEFINED_NEXT_HOP E_OpenconfigLocalRouting_LOCAL_DEFINED_NEXT_HOP
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_NextHops_NextHop_State_NextHop_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_NextHops_NextHop_State_NextHop_Union_E_OpenconfigLocalRouting_LOCAL_DEFINED_NEXT_HOP
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_NextHops_NextHop_State_NextHop_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_NextHops_NextHop_State_NextHop_Union_E_OpenconfigLocalRouting_LOCAL_DEFINED_NEXT_HOP) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_NextHops_NextHop_State_NextHop_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_NextHops_NextHop_State_NextHop_Union_String is used when /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/state/next-hop
// is to be set to a string value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_NextHops_NextHop_State_NextHop_Union_String struct {
	String string
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_NextHops_NextHop_State_NextHop_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_NextHops_NextHop_State_NextHop_Union_String
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_NextHops_NextHop_State_NextHop_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_NextHops_NextHop_State_NextHop_Union_String) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_NextHops_NextHop_State_NextHop_Union() {}

// To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_NextHops_NextHop_State_NextHop_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_NextHops_NextHop_State_NextHop_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_NextHops_NextHop_State) To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_NextHops_NextHop_State_NextHop_Union(i interface{}) (OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_NextHops_NextHop_State_NextHop_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigLocalRouting_LOCAL_DEFINED_NEXT_HOP:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_NextHops_NextHop_State_NextHop_Union_E_OpenconfigLocalRouting_LOCAL_DEFINED_NEXT_HOP{v}, nil
	case string:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_NextHops_NextHop_State_NextHop_Union_String{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_NextHops_NextHop_State_NextHop_Union, unknown union type, got: %T, want any of [E_OpenconfigLocalRouting_LOCAL_DEFINED_NEXT_HOP, string]", i, i)
	}
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_State_SetTag_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/state/set-tag within the YANG schema.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_State_SetTag_Union interface {
	Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_State_SetTag_Union()
}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_State_SetTag_Union_String is used when /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/state/set-tag
// is to be set to a string value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_State_SetTag_Union_String struct {
	String string
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_State_SetTag_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_State_SetTag_Union_String
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_State_SetTag_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_State_SetTag_Union_String) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_State_SetTag_Union() {}

// OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_State_SetTag_Union_Uint32 is used when /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/state/set-tag
// is to be set to a uint32 value.
type OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_State_SetTag_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_State_SetTag_Union ensures that OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_State_SetTag_Union_Uint32
// implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_State_SetTag_Union interface.
func (*OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_State_SetTag_Union_Uint32) Is_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_State_SetTag_Union() {}

// To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_State_SetTag_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_State_SetTag_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_State) To_OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_State_SetTag_Union(i interface{}) (OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_State_SetTag_Union, error) {
	switch v := i.(type) {
	case string:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_State_SetTag_Union_String{v}, nil
	case uint32:
		return &OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_State_SetTag_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigNetworkInstance_NetworkInstances_NetworkInstance_Protocols_Protocol_StaticRoutes_Static_State_SetTag_Union, unknown union type, got: %T, want any of [string, uint32]", i, i)
	}
}

// OpenconfigPlatform_Components_Component_Properties_Property_Config_Value_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-platform/components/component/properties/property/config/value within the YANG schema.
type OpenconfigPlatform_Components_Component_Properties_Property_Config_Value_Union interface {
	Is_OpenconfigPlatform_Components_Component_Properties_Property_Config_Value_Union()
}

// OpenconfigPlatform_Components_Component_Properties_Property_Config_Value_Union_Bool is used when /openconfig-platform/components/component/properties/property/config/value
// is to be set to a bool value.
type OpenconfigPlatform_Components_Component_Properties_Property_Config_Value_Union_Bool struct {
	Bool bool
}

// Is_OpenconfigPlatform_Components_Component_Properties_Property_Config_Value_Union ensures that OpenconfigPlatform_Components_Component_Properties_Property_Config_Value_Union_Bool
// implements the OpenconfigPlatform_Components_Component_Properties_Property_Config_Value_Union interface.
func (*OpenconfigPlatform_Components_Component_Properties_Property_Config_Value_Union_Bool) Is_OpenconfigPlatform_Components_Component_Properties_Property_Config_Value_Union() {}

// OpenconfigPlatform_Components_Component_Properties_Property_Config_Value_Union_Float64 is used when /openconfig-platform/components/component/properties/property/config/value
// is to be set to a float64 value.
type OpenconfigPlatform_Components_Component_Properties_Property_Config_Value_Union_Float64 struct {
	Float64 float64
}

// Is_OpenconfigPlatform_Components_Component_Properties_Property_Config_Value_Union ensures that OpenconfigPlatform_Components_Component_Properties_Property_Config_Value_Union_Float64
// implements the OpenconfigPlatform_Components_Component_Properties_Property_Config_Value_Union interface.
func (*OpenconfigPlatform_Components_Component_Properties_Property_Config_Value_Union_Float64) Is_OpenconfigPlatform_Components_Component_Properties_Property_Config_Value_Union() {}

// OpenconfigPlatform_Components_Component_Properties_Property_Config_Value_Union_Int64 is used when /openconfig-platform/components/component/properties/property/config/value
// is to be set to a int64 value.
type OpenconfigPlatform_Components_Component_Properties_Property_Config_Value_Union_Int64 struct {
	Int64 int64
}

// Is_OpenconfigPlatform_Components_Component_Properties_Property_Config_Value_Union ensures that OpenconfigPlatform_Components_Component_Properties_Property_Config_Value_Union_Int64
// implements the OpenconfigPlatform_Components_Component_Properties_Property_Config_Value_Union interface.
func (*OpenconfigPlatform_Components_Component_Properties_Property_Config_Value_Union_Int64) Is_OpenconfigPlatform_Components_Component_Properties_Property_Config_Value_Union() {}

// OpenconfigPlatform_Components_Component_Properties_Property_Config_Value_Union_String is used when /openconfig-platform/components/component/properties/property/config/value
// is to be set to a string value.
type OpenconfigPlatform_Components_Component_Properties_Property_Config_Value_Union_String struct {
	String string
}

// Is_OpenconfigPlatform_Components_Component_Properties_Property_Config_Value_Union ensures that OpenconfigPlatform_Components_Component_Properties_Property_Config_Value_Union_String
// implements the OpenconfigPlatform_Components_Component_Properties_Property_Config_Value_Union interface.
func (*OpenconfigPlatform_Components_Component_Properties_Property_Config_Value_Union_String) Is_OpenconfigPlatform_Components_Component_Properties_Property_Config_Value_Union() {}

// OpenconfigPlatform_Components_Component_Properties_Property_Config_Value_Union_Uint64 is used when /openconfig-platform/components/component/properties/property/config/value
// is to be set to a uint64 value.
type OpenconfigPlatform_Components_Component_Properties_Property_Config_Value_Union_Uint64 struct {
	Uint64 uint64
}

// Is_OpenconfigPlatform_Components_Component_Properties_Property_Config_Value_Union ensures that OpenconfigPlatform_Components_Component_Properties_Property_Config_Value_Union_Uint64
// implements the OpenconfigPlatform_Components_Component_Properties_Property_Config_Value_Union interface.
func (*OpenconfigPlatform_Components_Component_Properties_Property_Config_Value_Union_Uint64) Is_OpenconfigPlatform_Components_Component_Properties_Property_Config_Value_Union() {}

// To_OpenconfigPlatform_Components_Component_Properties_Property_Config_Value_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigPlatform_Components_Component_Properties_Property_Config_Value_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigPlatform_Components_Component_Properties_Property_Config) To_OpenconfigPlatform_Components_Component_Properties_Property_Config_Value_Union(i interface{}) (OpenconfigPlatform_Components_Component_Properties_Property_Config_Value_Union, error) {
	switch v := i.(type) {
	case bool:
		return &OpenconfigPlatform_Components_Component_Properties_Property_Config_Value_Union_Bool{v}, nil
	case float64:
		return &OpenconfigPlatform_Components_Component_Properties_Property_Config_Value_Union_Float64{v}, nil
	case int64:
		return &OpenconfigPlatform_Components_Component_Properties_Property_Config_Value_Union_Int64{v}, nil
	case string:
		return &OpenconfigPlatform_Components_Component_Properties_Property_Config_Value_Union_String{v}, nil
	case uint64:
		return &OpenconfigPlatform_Components_Component_Properties_Property_Config_Value_Union_Uint64{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigPlatform_Components_Component_Properties_Property_Config_Value_Union, unknown union type, got: %T, want any of [bool, float64, int64, string, uint64]", i, i)
	}
}

// OpenconfigPlatform_Components_Component_Properties_Property_State_Value_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-platform/components/component/properties/property/state/value within the YANG schema.
type OpenconfigPlatform_Components_Component_Properties_Property_State_Value_Union interface {
	Is_OpenconfigPlatform_Components_Component_Properties_Property_State_Value_Union()
}

// OpenconfigPlatform_Components_Component_Properties_Property_State_Value_Union_Bool is used when /openconfig-platform/components/component/properties/property/state/value
// is to be set to a bool value.
type OpenconfigPlatform_Components_Component_Properties_Property_State_Value_Union_Bool struct {
	Bool bool
}

// Is_OpenconfigPlatform_Components_Component_Properties_Property_State_Value_Union ensures that OpenconfigPlatform_Components_Component_Properties_Property_State_Value_Union_Bool
// implements the OpenconfigPlatform_Components_Component_Properties_Property_State_Value_Union interface.
func (*OpenconfigPlatform_Components_Component_Properties_Property_State_Value_Union_Bool) Is_OpenconfigPlatform_Components_Component_Properties_Property_State_Value_Union() {}

// OpenconfigPlatform_Components_Component_Properties_Property_State_Value_Union_Float64 is used when /openconfig-platform/components/component/properties/property/state/value
// is to be set to a float64 value.
type OpenconfigPlatform_Components_Component_Properties_Property_State_Value_Union_Float64 struct {
	Float64 float64
}

// Is_OpenconfigPlatform_Components_Component_Properties_Property_State_Value_Union ensures that OpenconfigPlatform_Components_Component_Properties_Property_State_Value_Union_Float64
// implements the OpenconfigPlatform_Components_Component_Properties_Property_State_Value_Union interface.
func (*OpenconfigPlatform_Components_Component_Properties_Property_State_Value_Union_Float64) Is_OpenconfigPlatform_Components_Component_Properties_Property_State_Value_Union() {}

// OpenconfigPlatform_Components_Component_Properties_Property_State_Value_Union_Int64 is used when /openconfig-platform/components/component/properties/property/state/value
// is to be set to a int64 value.
type OpenconfigPlatform_Components_Component_Properties_Property_State_Value_Union_Int64 struct {
	Int64 int64
}

// Is_OpenconfigPlatform_Components_Component_Properties_Property_State_Value_Union ensures that OpenconfigPlatform_Components_Component_Properties_Property_State_Value_Union_Int64
// implements the OpenconfigPlatform_Components_Component_Properties_Property_State_Value_Union interface.
func (*OpenconfigPlatform_Components_Component_Properties_Property_State_Value_Union_Int64) Is_OpenconfigPlatform_Components_Component_Properties_Property_State_Value_Union() {}

// OpenconfigPlatform_Components_Component_Properties_Property_State_Value_Union_String is used when /openconfig-platform/components/component/properties/property/state/value
// is to be set to a string value.
type OpenconfigPlatform_Components_Component_Properties_Property_State_Value_Union_String struct {
	String string
}

// Is_OpenconfigPlatform_Components_Component_Properties_Property_State_Value_Union ensures that OpenconfigPlatform_Components_Component_Properties_Property_State_Value_Union_String
// implements the OpenconfigPlatform_Components_Component_Properties_Property_State_Value_Union interface.
func (*OpenconfigPlatform_Components_Component_Properties_Property_State_Value_Union_String) Is_OpenconfigPlatform_Components_Component_Properties_Property_State_Value_Union() {}

// OpenconfigPlatform_Components_Component_Properties_Property_State_Value_Union_Uint64 is used when /openconfig-platform/components/component/properties/property/state/value
// is to be set to a uint64 value.
type OpenconfigPlatform_Components_Component_Properties_Property_State_Value_Union_Uint64 struct {
	Uint64 uint64
}

// Is_OpenconfigPlatform_Components_Component_Properties_Property_State_Value_Union ensures that OpenconfigPlatform_Components_Component_Properties_Property_State_Value_Union_Uint64
// implements the OpenconfigPlatform_Components_Component_Properties_Property_State_Value_Union interface.
func (*OpenconfigPlatform_Components_Component_Properties_Property_State_Value_Union_Uint64) Is_OpenconfigPlatform_Components_Component_Properties_Property_State_Value_Union() {}

// To_OpenconfigPlatform_Components_Component_Properties_Property_State_Value_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigPlatform_Components_Component_Properties_Property_State_Value_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigPlatform_Components_Component_Properties_Property_State) To_OpenconfigPlatform_Components_Component_Properties_Property_State_Value_Union(i interface{}) (OpenconfigPlatform_Components_Component_Properties_Property_State_Value_Union, error) {
	switch v := i.(type) {
	case bool:
		return &OpenconfigPlatform_Components_Component_Properties_Property_State_Value_Union_Bool{v}, nil
	case float64:
		return &OpenconfigPlatform_Components_Component_Properties_Property_State_Value_Union_Float64{v}, nil
	case int64:
		return &OpenconfigPlatform_Components_Component_Properties_Property_State_Value_Union_Int64{v}, nil
	case string:
		return &OpenconfigPlatform_Components_Component_Properties_Property_State_Value_Union_String{v}, nil
	case uint64:
		return &OpenconfigPlatform_Components_Component_Properties_Property_State_Value_Union_Uint64{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigPlatform_Components_Component_Properties_Property_State_Value_Union, unknown union type, got: %T, want any of [bool, float64, int64, string, uint64]", i, i)
	}
}

// OpenconfigPlatform_Components_Component_State_Type_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-platform/components/component/state/type within the YANG schema.
type OpenconfigPlatform_Components_Component_State_Type_Union interface {
	Is_OpenconfigPlatform_Components_Component_State_Type_Union()
}

// OpenconfigPlatform_Components_Component_State_Type_Union_E_OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT is used when /openconfig-platform/components/component/state/type
// is to be set to a E_OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT value.
type OpenconfigPlatform_Components_Component_State_Type_Union_E_OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT struct {
	E_OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT E_OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT
}

// Is_OpenconfigPlatform_Components_Component_State_Type_Union ensures that OpenconfigPlatform_Components_Component_State_Type_Union_E_OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT
// implements the OpenconfigPlatform_Components_Component_State_Type_Union interface.
func (*OpenconfigPlatform_Components_Component_State_Type_Union_E_OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT) Is_OpenconfigPlatform_Components_Component_State_Type_Union() {}

// OpenconfigPlatform_Components_Component_State_Type_Union_E_OpenconfigPlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT is used when /openconfig-platform/components/component/state/type
// is to be set to a E_OpenconfigPlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT value.
type OpenconfigPlatform_Components_Component_State_Type_Union_E_OpenconfigPlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT struct {
	E_OpenconfigPlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT E_OpenconfigPlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT
}

// Is_OpenconfigPlatform_Components_Component_State_Type_Union ensures that OpenconfigPlatform_Components_Component_State_Type_Union_E_OpenconfigPlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT
// implements the OpenconfigPlatform_Components_Component_State_Type_Union interface.
func (*OpenconfigPlatform_Components_Component_State_Type_Union_E_OpenconfigPlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT) Is_OpenconfigPlatform_Components_Component_State_Type_Union() {}

// To_OpenconfigPlatform_Components_Component_State_Type_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigPlatform_Components_Component_State_Type_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigPlatform_Components_Component_State) To_OpenconfigPlatform_Components_Component_State_Type_Union(i interface{}) (OpenconfigPlatform_Components_Component_State_Type_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT:
		return &OpenconfigPlatform_Components_Component_State_Type_Union_E_OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT{v}, nil
	case E_OpenconfigPlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT:
		return &OpenconfigPlatform_Components_Component_State_Type_Union_E_OpenconfigPlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigPlatform_Components_Component_State_Type_Union, unknown union type, got: %T, want any of [E_OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT, E_OpenconfigPlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT]", i, i)
	}
}

// OpenconfigRoutingPolicy_RoutingPolicy_DefinedSets_TagSets_TagSet_Config_TagValue_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-routing-policy/routing-policy/defined-sets/tag-sets/tag-set/config/tag-value within the YANG schema.
type OpenconfigRoutingPolicy_RoutingPolicy_DefinedSets_TagSets_TagSet_Config_TagValue_Union interface {
	Is_OpenconfigRoutingPolicy_RoutingPolicy_DefinedSets_TagSets_TagSet_Config_TagValue_Union()
}

// OpenconfigRoutingPolicy_RoutingPolicy_DefinedSets_TagSets_TagSet_Config_TagValue_Union_String is used when /openconfig-routing-policy/routing-policy/defined-sets/tag-sets/tag-set/config/tag-value
// is to be set to a string value.
type OpenconfigRoutingPolicy_RoutingPolicy_DefinedSets_TagSets_TagSet_Config_TagValue_Union_String struct {
	String string
}

// Is_OpenconfigRoutingPolicy_RoutingPolicy_DefinedSets_TagSets_TagSet_Config_TagValue_Union ensures that OpenconfigRoutingPolicy_RoutingPolicy_DefinedSets_TagSets_TagSet_Config_TagValue_Union_String
// implements the OpenconfigRoutingPolicy_RoutingPolicy_DefinedSets_TagSets_TagSet_Config_TagValue_Union interface.
func (*OpenconfigRoutingPolicy_RoutingPolicy_DefinedSets_TagSets_TagSet_Config_TagValue_Union_String) Is_OpenconfigRoutingPolicy_RoutingPolicy_DefinedSets_TagSets_TagSet_Config_TagValue_Union() {}

// OpenconfigRoutingPolicy_RoutingPolicy_DefinedSets_TagSets_TagSet_Config_TagValue_Union_Uint32 is used when /openconfig-routing-policy/routing-policy/defined-sets/tag-sets/tag-set/config/tag-value
// is to be set to a uint32 value.
type OpenconfigRoutingPolicy_RoutingPolicy_DefinedSets_TagSets_TagSet_Config_TagValue_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigRoutingPolicy_RoutingPolicy_DefinedSets_TagSets_TagSet_Config_TagValue_Union ensures that OpenconfigRoutingPolicy_RoutingPolicy_DefinedSets_TagSets_TagSet_Config_TagValue_Union_Uint32
// implements the OpenconfigRoutingPolicy_RoutingPolicy_DefinedSets_TagSets_TagSet_Config_TagValue_Union interface.
func (*OpenconfigRoutingPolicy_RoutingPolicy_DefinedSets_TagSets_TagSet_Config_TagValue_Union_Uint32) Is_OpenconfigRoutingPolicy_RoutingPolicy_DefinedSets_TagSets_TagSet_Config_TagValue_Union() {}

// To_OpenconfigRoutingPolicy_RoutingPolicy_DefinedSets_TagSets_TagSet_Config_TagValue_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigRoutingPolicy_RoutingPolicy_DefinedSets_TagSets_TagSet_Config_TagValue_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigRoutingPolicy_RoutingPolicy_DefinedSets_TagSets_TagSet_Config) To_OpenconfigRoutingPolicy_RoutingPolicy_DefinedSets_TagSets_TagSet_Config_TagValue_Union(i interface{}) (OpenconfigRoutingPolicy_RoutingPolicy_DefinedSets_TagSets_TagSet_Config_TagValue_Union, error) {
	switch v := i.(type) {
	case string:
		return &OpenconfigRoutingPolicy_RoutingPolicy_DefinedSets_TagSets_TagSet_Config_TagValue_Union_String{v}, nil
	case uint32:
		return &OpenconfigRoutingPolicy_RoutingPolicy_DefinedSets_TagSets_TagSet_Config_TagValue_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigRoutingPolicy_RoutingPolicy_DefinedSets_TagSets_TagSet_Config_TagValue_Union, unknown union type, got: %T, want any of [string, uint32]", i, i)
	}
}

// OpenconfigRoutingPolicy_RoutingPolicy_DefinedSets_TagSets_TagSet_State_TagValue_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-routing-policy/routing-policy/defined-sets/tag-sets/tag-set/state/tag-value within the YANG schema.
type OpenconfigRoutingPolicy_RoutingPolicy_DefinedSets_TagSets_TagSet_State_TagValue_Union interface {
	Is_OpenconfigRoutingPolicy_RoutingPolicy_DefinedSets_TagSets_TagSet_State_TagValue_Union()
}

// OpenconfigRoutingPolicy_RoutingPolicy_DefinedSets_TagSets_TagSet_State_TagValue_Union_String is used when /openconfig-routing-policy/routing-policy/defined-sets/tag-sets/tag-set/state/tag-value
// is to be set to a string value.
type OpenconfigRoutingPolicy_RoutingPolicy_DefinedSets_TagSets_TagSet_State_TagValue_Union_String struct {
	String string
}

// Is_OpenconfigRoutingPolicy_RoutingPolicy_DefinedSets_TagSets_TagSet_State_TagValue_Union ensures that OpenconfigRoutingPolicy_RoutingPolicy_DefinedSets_TagSets_TagSet_State_TagValue_Union_String
// implements the OpenconfigRoutingPolicy_RoutingPolicy_DefinedSets_TagSets_TagSet_State_TagValue_Union interface.
func (*OpenconfigRoutingPolicy_RoutingPolicy_DefinedSets_TagSets_TagSet_State_TagValue_Union_String) Is_OpenconfigRoutingPolicy_RoutingPolicy_DefinedSets_TagSets_TagSet_State_TagValue_Union() {}

// OpenconfigRoutingPolicy_RoutingPolicy_DefinedSets_TagSets_TagSet_State_TagValue_Union_Uint32 is used when /openconfig-routing-policy/routing-policy/defined-sets/tag-sets/tag-set/state/tag-value
// is to be set to a uint32 value.
type OpenconfigRoutingPolicy_RoutingPolicy_DefinedSets_TagSets_TagSet_State_TagValue_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigRoutingPolicy_RoutingPolicy_DefinedSets_TagSets_TagSet_State_TagValue_Union ensures that OpenconfigRoutingPolicy_RoutingPolicy_DefinedSets_TagSets_TagSet_State_TagValue_Union_Uint32
// implements the OpenconfigRoutingPolicy_RoutingPolicy_DefinedSets_TagSets_TagSet_State_TagValue_Union interface.
func (*OpenconfigRoutingPolicy_RoutingPolicy_DefinedSets_TagSets_TagSet_State_TagValue_Union_Uint32) Is_OpenconfigRoutingPolicy_RoutingPolicy_DefinedSets_TagSets_TagSet_State_TagValue_Union() {}

// To_OpenconfigRoutingPolicy_RoutingPolicy_DefinedSets_TagSets_TagSet_State_TagValue_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigRoutingPolicy_RoutingPolicy_DefinedSets_TagSets_TagSet_State_TagValue_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigRoutingPolicy_RoutingPolicy_DefinedSets_TagSets_TagSet_State) To_OpenconfigRoutingPolicy_RoutingPolicy_DefinedSets_TagSets_TagSet_State_TagValue_Union(i interface{}) (OpenconfigRoutingPolicy_RoutingPolicy_DefinedSets_TagSets_TagSet_State_TagValue_Union, error) {
	switch v := i.(type) {
	case string:
		return &OpenconfigRoutingPolicy_RoutingPolicy_DefinedSets_TagSets_TagSet_State_TagValue_Union_String{v}, nil
	case uint32:
		return &OpenconfigRoutingPolicy_RoutingPolicy_DefinedSets_TagSets_TagSet_State_TagValue_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigRoutingPolicy_RoutingPolicy_DefinedSets_TagSets_TagSet_State_TagValue_Union, unknown union type, got: %T, want any of [string, uint32]", i, i)
	}
}

// OpenconfigSystem_System_Aaa_Accounting_Config_AccountingMethod_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-system/system/aaa/accounting/config/accounting-method within the YANG schema.
type OpenconfigSystem_System_Aaa_Accounting_Config_AccountingMethod_Union interface {
	Is_OpenconfigSystem_System_Aaa_Accounting_Config_AccountingMethod_Union()
}

// OpenconfigSystem_System_Aaa_Accounting_Config_AccountingMethod_Union_E_OpenconfigAaaTypes_AAA_METHOD_TYPE is used when /openconfig-system/system/aaa/accounting/config/accounting-method
// is to be set to a E_OpenconfigAaaTypes_AAA_METHOD_TYPE value.
type OpenconfigSystem_System_Aaa_Accounting_Config_AccountingMethod_Union_E_OpenconfigAaaTypes_AAA_METHOD_TYPE struct {
	E_OpenconfigAaaTypes_AAA_METHOD_TYPE E_OpenconfigAaaTypes_AAA_METHOD_TYPE
}

// Is_OpenconfigSystem_System_Aaa_Accounting_Config_AccountingMethod_Union ensures that OpenconfigSystem_System_Aaa_Accounting_Config_AccountingMethod_Union_E_OpenconfigAaaTypes_AAA_METHOD_TYPE
// implements the OpenconfigSystem_System_Aaa_Accounting_Config_AccountingMethod_Union interface.
func (*OpenconfigSystem_System_Aaa_Accounting_Config_AccountingMethod_Union_E_OpenconfigAaaTypes_AAA_METHOD_TYPE) Is_OpenconfigSystem_System_Aaa_Accounting_Config_AccountingMethod_Union() {}

// OpenconfigSystem_System_Aaa_Accounting_Config_AccountingMethod_Union_String is used when /openconfig-system/system/aaa/accounting/config/accounting-method
// is to be set to a string value.
type OpenconfigSystem_System_Aaa_Accounting_Config_AccountingMethod_Union_String struct {
	String string
}

// Is_OpenconfigSystem_System_Aaa_Accounting_Config_AccountingMethod_Union ensures that OpenconfigSystem_System_Aaa_Accounting_Config_AccountingMethod_Union_String
// implements the OpenconfigSystem_System_Aaa_Accounting_Config_AccountingMethod_Union interface.
func (*OpenconfigSystem_System_Aaa_Accounting_Config_AccountingMethod_Union_String) Is_OpenconfigSystem_System_Aaa_Accounting_Config_AccountingMethod_Union() {}

// To_OpenconfigSystem_System_Aaa_Accounting_Config_AccountingMethod_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigSystem_System_Aaa_Accounting_Config_AccountingMethod_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigSystem_System_Aaa_Accounting_Config) To_OpenconfigSystem_System_Aaa_Accounting_Config_AccountingMethod_Union(i interface{}) (OpenconfigSystem_System_Aaa_Accounting_Config_AccountingMethod_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigAaaTypes_AAA_METHOD_TYPE:
		return &OpenconfigSystem_System_Aaa_Accounting_Config_AccountingMethod_Union_E_OpenconfigAaaTypes_AAA_METHOD_TYPE{v}, nil
	case string:
		return &OpenconfigSystem_System_Aaa_Accounting_Config_AccountingMethod_Union_String{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigSystem_System_Aaa_Accounting_Config_AccountingMethod_Union, unknown union type, got: %T, want any of [E_OpenconfigAaaTypes_AAA_METHOD_TYPE, string]", i, i)
	}
}

// OpenconfigSystem_System_Aaa_Accounting_State_AccountingMethod_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-system/system/aaa/accounting/state/accounting-method within the YANG schema.
type OpenconfigSystem_System_Aaa_Accounting_State_AccountingMethod_Union interface {
	Is_OpenconfigSystem_System_Aaa_Accounting_State_AccountingMethod_Union()
}

// OpenconfigSystem_System_Aaa_Accounting_State_AccountingMethod_Union_E_OpenconfigAaaTypes_AAA_METHOD_TYPE is used when /openconfig-system/system/aaa/accounting/state/accounting-method
// is to be set to a E_OpenconfigAaaTypes_AAA_METHOD_TYPE value.
type OpenconfigSystem_System_Aaa_Accounting_State_AccountingMethod_Union_E_OpenconfigAaaTypes_AAA_METHOD_TYPE struct {
	E_OpenconfigAaaTypes_AAA_METHOD_TYPE E_OpenconfigAaaTypes_AAA_METHOD_TYPE
}

// Is_OpenconfigSystem_System_Aaa_Accounting_State_AccountingMethod_Union ensures that OpenconfigSystem_System_Aaa_Accounting_State_AccountingMethod_Union_E_OpenconfigAaaTypes_AAA_METHOD_TYPE
// implements the OpenconfigSystem_System_Aaa_Accounting_State_AccountingMethod_Union interface.
func (*OpenconfigSystem_System_Aaa_Accounting_State_AccountingMethod_Union_E_OpenconfigAaaTypes_AAA_METHOD_TYPE) Is_OpenconfigSystem_System_Aaa_Accounting_State_AccountingMethod_Union() {}

// OpenconfigSystem_System_Aaa_Accounting_State_AccountingMethod_Union_String is used when /openconfig-system/system/aaa/accounting/state/accounting-method
// is to be set to a string value.
type OpenconfigSystem_System_Aaa_Accounting_State_AccountingMethod_Union_String struct {
	String string
}

// Is_OpenconfigSystem_System_Aaa_Accounting_State_AccountingMethod_Union ensures that OpenconfigSystem_System_Aaa_Accounting_State_AccountingMethod_Union_String
// implements the OpenconfigSystem_System_Aaa_Accounting_State_AccountingMethod_Union interface.
func (*OpenconfigSystem_System_Aaa_Accounting_State_AccountingMethod_Union_String) Is_OpenconfigSystem_System_Aaa_Accounting_State_AccountingMethod_Union() {}

// To_OpenconfigSystem_System_Aaa_Accounting_State_AccountingMethod_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigSystem_System_Aaa_Accounting_State_AccountingMethod_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigSystem_System_Aaa_Accounting_State) To_OpenconfigSystem_System_Aaa_Accounting_State_AccountingMethod_Union(i interface{}) (OpenconfigSystem_System_Aaa_Accounting_State_AccountingMethod_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigAaaTypes_AAA_METHOD_TYPE:
		return &OpenconfigSystem_System_Aaa_Accounting_State_AccountingMethod_Union_E_OpenconfigAaaTypes_AAA_METHOD_TYPE{v}, nil
	case string:
		return &OpenconfigSystem_System_Aaa_Accounting_State_AccountingMethod_Union_String{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigSystem_System_Aaa_Accounting_State_AccountingMethod_Union, unknown union type, got: %T, want any of [E_OpenconfigAaaTypes_AAA_METHOD_TYPE, string]", i, i)
	}
}

// OpenconfigSystem_System_Aaa_Authentication_Config_AuthenticationMethod_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-system/system/aaa/authentication/config/authentication-method within the YANG schema.
type OpenconfigSystem_System_Aaa_Authentication_Config_AuthenticationMethod_Union interface {
	Is_OpenconfigSystem_System_Aaa_Authentication_Config_AuthenticationMethod_Union()
}

// OpenconfigSystem_System_Aaa_Authentication_Config_AuthenticationMethod_Union_E_OpenconfigAaaTypes_AAA_METHOD_TYPE is used when /openconfig-system/system/aaa/authentication/config/authentication-method
// is to be set to a E_OpenconfigAaaTypes_AAA_METHOD_TYPE value.
type OpenconfigSystem_System_Aaa_Authentication_Config_AuthenticationMethod_Union_E_OpenconfigAaaTypes_AAA_METHOD_TYPE struct {
	E_OpenconfigAaaTypes_AAA_METHOD_TYPE E_OpenconfigAaaTypes_AAA_METHOD_TYPE
}

// Is_OpenconfigSystem_System_Aaa_Authentication_Config_AuthenticationMethod_Union ensures that OpenconfigSystem_System_Aaa_Authentication_Config_AuthenticationMethod_Union_E_OpenconfigAaaTypes_AAA_METHOD_TYPE
// implements the OpenconfigSystem_System_Aaa_Authentication_Config_AuthenticationMethod_Union interface.
func (*OpenconfigSystem_System_Aaa_Authentication_Config_AuthenticationMethod_Union_E_OpenconfigAaaTypes_AAA_METHOD_TYPE) Is_OpenconfigSystem_System_Aaa_Authentication_Config_AuthenticationMethod_Union() {}

// OpenconfigSystem_System_Aaa_Authentication_Config_AuthenticationMethod_Union_String is used when /openconfig-system/system/aaa/authentication/config/authentication-method
// is to be set to a string value.
type OpenconfigSystem_System_Aaa_Authentication_Config_AuthenticationMethod_Union_String struct {
	String string
}

// Is_OpenconfigSystem_System_Aaa_Authentication_Config_AuthenticationMethod_Union ensures that OpenconfigSystem_System_Aaa_Authentication_Config_AuthenticationMethod_Union_String
// implements the OpenconfigSystem_System_Aaa_Authentication_Config_AuthenticationMethod_Union interface.
func (*OpenconfigSystem_System_Aaa_Authentication_Config_AuthenticationMethod_Union_String) Is_OpenconfigSystem_System_Aaa_Authentication_Config_AuthenticationMethod_Union() {}

// To_OpenconfigSystem_System_Aaa_Authentication_Config_AuthenticationMethod_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigSystem_System_Aaa_Authentication_Config_AuthenticationMethod_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigSystem_System_Aaa_Authentication_Config) To_OpenconfigSystem_System_Aaa_Authentication_Config_AuthenticationMethod_Union(i interface{}) (OpenconfigSystem_System_Aaa_Authentication_Config_AuthenticationMethod_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigAaaTypes_AAA_METHOD_TYPE:
		return &OpenconfigSystem_System_Aaa_Authentication_Config_AuthenticationMethod_Union_E_OpenconfigAaaTypes_AAA_METHOD_TYPE{v}, nil
	case string:
		return &OpenconfigSystem_System_Aaa_Authentication_Config_AuthenticationMethod_Union_String{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigSystem_System_Aaa_Authentication_Config_AuthenticationMethod_Union, unknown union type, got: %T, want any of [E_OpenconfigAaaTypes_AAA_METHOD_TYPE, string]", i, i)
	}
}

// OpenconfigSystem_System_Aaa_Authentication_State_AuthenticationMethod_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-system/system/aaa/authentication/state/authentication-method within the YANG schema.
type OpenconfigSystem_System_Aaa_Authentication_State_AuthenticationMethod_Union interface {
	Is_OpenconfigSystem_System_Aaa_Authentication_State_AuthenticationMethod_Union()
}

// OpenconfigSystem_System_Aaa_Authentication_State_AuthenticationMethod_Union_E_OpenconfigAaaTypes_AAA_METHOD_TYPE is used when /openconfig-system/system/aaa/authentication/state/authentication-method
// is to be set to a E_OpenconfigAaaTypes_AAA_METHOD_TYPE value.
type OpenconfigSystem_System_Aaa_Authentication_State_AuthenticationMethod_Union_E_OpenconfigAaaTypes_AAA_METHOD_TYPE struct {
	E_OpenconfigAaaTypes_AAA_METHOD_TYPE E_OpenconfigAaaTypes_AAA_METHOD_TYPE
}

// Is_OpenconfigSystem_System_Aaa_Authentication_State_AuthenticationMethod_Union ensures that OpenconfigSystem_System_Aaa_Authentication_State_AuthenticationMethod_Union_E_OpenconfigAaaTypes_AAA_METHOD_TYPE
// implements the OpenconfigSystem_System_Aaa_Authentication_State_AuthenticationMethod_Union interface.
func (*OpenconfigSystem_System_Aaa_Authentication_State_AuthenticationMethod_Union_E_OpenconfigAaaTypes_AAA_METHOD_TYPE) Is_OpenconfigSystem_System_Aaa_Authentication_State_AuthenticationMethod_Union() {}

// OpenconfigSystem_System_Aaa_Authentication_State_AuthenticationMethod_Union_String is used when /openconfig-system/system/aaa/authentication/state/authentication-method
// is to be set to a string value.
type OpenconfigSystem_System_Aaa_Authentication_State_AuthenticationMethod_Union_String struct {
	String string
}

// Is_OpenconfigSystem_System_Aaa_Authentication_State_AuthenticationMethod_Union ensures that OpenconfigSystem_System_Aaa_Authentication_State_AuthenticationMethod_Union_String
// implements the OpenconfigSystem_System_Aaa_Authentication_State_AuthenticationMethod_Union interface.
func (*OpenconfigSystem_System_Aaa_Authentication_State_AuthenticationMethod_Union_String) Is_OpenconfigSystem_System_Aaa_Authentication_State_AuthenticationMethod_Union() {}

// To_OpenconfigSystem_System_Aaa_Authentication_State_AuthenticationMethod_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigSystem_System_Aaa_Authentication_State_AuthenticationMethod_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigSystem_System_Aaa_Authentication_State) To_OpenconfigSystem_System_Aaa_Authentication_State_AuthenticationMethod_Union(i interface{}) (OpenconfigSystem_System_Aaa_Authentication_State_AuthenticationMethod_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigAaaTypes_AAA_METHOD_TYPE:
		return &OpenconfigSystem_System_Aaa_Authentication_State_AuthenticationMethod_Union_E_OpenconfigAaaTypes_AAA_METHOD_TYPE{v}, nil
	case string:
		return &OpenconfigSystem_System_Aaa_Authentication_State_AuthenticationMethod_Union_String{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigSystem_System_Aaa_Authentication_State_AuthenticationMethod_Union, unknown union type, got: %T, want any of [E_OpenconfigAaaTypes_AAA_METHOD_TYPE, string]", i, i)
	}
}

// OpenconfigSystem_System_Aaa_Authentication_Users_User_Config_Role_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-system/system/aaa/authentication/users/user/config/role within the YANG schema.
type OpenconfigSystem_System_Aaa_Authentication_Users_User_Config_Role_Union interface {
	Is_OpenconfigSystem_System_Aaa_Authentication_Users_User_Config_Role_Union()
}

// OpenconfigSystem_System_Aaa_Authentication_Users_User_Config_Role_Union_E_OpenconfigAaaTypes_SYSTEM_DEFINED_ROLES is used when /openconfig-system/system/aaa/authentication/users/user/config/role
// is to be set to a E_OpenconfigAaaTypes_SYSTEM_DEFINED_ROLES value.
type OpenconfigSystem_System_Aaa_Authentication_Users_User_Config_Role_Union_E_OpenconfigAaaTypes_SYSTEM_DEFINED_ROLES struct {
	E_OpenconfigAaaTypes_SYSTEM_DEFINED_ROLES E_OpenconfigAaaTypes_SYSTEM_DEFINED_ROLES
}

// Is_OpenconfigSystem_System_Aaa_Authentication_Users_User_Config_Role_Union ensures that OpenconfigSystem_System_Aaa_Authentication_Users_User_Config_Role_Union_E_OpenconfigAaaTypes_SYSTEM_DEFINED_ROLES
// implements the OpenconfigSystem_System_Aaa_Authentication_Users_User_Config_Role_Union interface.
func (*OpenconfigSystem_System_Aaa_Authentication_Users_User_Config_Role_Union_E_OpenconfigAaaTypes_SYSTEM_DEFINED_ROLES) Is_OpenconfigSystem_System_Aaa_Authentication_Users_User_Config_Role_Union() {}

// OpenconfigSystem_System_Aaa_Authentication_Users_User_Config_Role_Union_String is used when /openconfig-system/system/aaa/authentication/users/user/config/role
// is to be set to a string value.
type OpenconfigSystem_System_Aaa_Authentication_Users_User_Config_Role_Union_String struct {
	String string
}

// Is_OpenconfigSystem_System_Aaa_Authentication_Users_User_Config_Role_Union ensures that OpenconfigSystem_System_Aaa_Authentication_Users_User_Config_Role_Union_String
// implements the OpenconfigSystem_System_Aaa_Authentication_Users_User_Config_Role_Union interface.
func (*OpenconfigSystem_System_Aaa_Authentication_Users_User_Config_Role_Union_String) Is_OpenconfigSystem_System_Aaa_Authentication_Users_User_Config_Role_Union() {}

// To_OpenconfigSystem_System_Aaa_Authentication_Users_User_Config_Role_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigSystem_System_Aaa_Authentication_Users_User_Config_Role_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigSystem_System_Aaa_Authentication_Users_User_Config) To_OpenconfigSystem_System_Aaa_Authentication_Users_User_Config_Role_Union(i interface{}) (OpenconfigSystem_System_Aaa_Authentication_Users_User_Config_Role_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigAaaTypes_SYSTEM_DEFINED_ROLES:
		return &OpenconfigSystem_System_Aaa_Authentication_Users_User_Config_Role_Union_E_OpenconfigAaaTypes_SYSTEM_DEFINED_ROLES{v}, nil
	case string:
		return &OpenconfigSystem_System_Aaa_Authentication_Users_User_Config_Role_Union_String{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigSystem_System_Aaa_Authentication_Users_User_Config_Role_Union, unknown union type, got: %T, want any of [E_OpenconfigAaaTypes_SYSTEM_DEFINED_ROLES, string]", i, i)
	}
}

// OpenconfigSystem_System_Aaa_Authentication_Users_User_State_Role_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-system/system/aaa/authentication/users/user/state/role within the YANG schema.
type OpenconfigSystem_System_Aaa_Authentication_Users_User_State_Role_Union interface {
	Is_OpenconfigSystem_System_Aaa_Authentication_Users_User_State_Role_Union()
}

// OpenconfigSystem_System_Aaa_Authentication_Users_User_State_Role_Union_E_OpenconfigAaaTypes_SYSTEM_DEFINED_ROLES is used when /openconfig-system/system/aaa/authentication/users/user/state/role
// is to be set to a E_OpenconfigAaaTypes_SYSTEM_DEFINED_ROLES value.
type OpenconfigSystem_System_Aaa_Authentication_Users_User_State_Role_Union_E_OpenconfigAaaTypes_SYSTEM_DEFINED_ROLES struct {
	E_OpenconfigAaaTypes_SYSTEM_DEFINED_ROLES E_OpenconfigAaaTypes_SYSTEM_DEFINED_ROLES
}

// Is_OpenconfigSystem_System_Aaa_Authentication_Users_User_State_Role_Union ensures that OpenconfigSystem_System_Aaa_Authentication_Users_User_State_Role_Union_E_OpenconfigAaaTypes_SYSTEM_DEFINED_ROLES
// implements the OpenconfigSystem_System_Aaa_Authentication_Users_User_State_Role_Union interface.
func (*OpenconfigSystem_System_Aaa_Authentication_Users_User_State_Role_Union_E_OpenconfigAaaTypes_SYSTEM_DEFINED_ROLES) Is_OpenconfigSystem_System_Aaa_Authentication_Users_User_State_Role_Union() {}

// OpenconfigSystem_System_Aaa_Authentication_Users_User_State_Role_Union_String is used when /openconfig-system/system/aaa/authentication/users/user/state/role
// is to be set to a string value.
type OpenconfigSystem_System_Aaa_Authentication_Users_User_State_Role_Union_String struct {
	String string
}

// Is_OpenconfigSystem_System_Aaa_Authentication_Users_User_State_Role_Union ensures that OpenconfigSystem_System_Aaa_Authentication_Users_User_State_Role_Union_String
// implements the OpenconfigSystem_System_Aaa_Authentication_Users_User_State_Role_Union interface.
func (*OpenconfigSystem_System_Aaa_Authentication_Users_User_State_Role_Union_String) Is_OpenconfigSystem_System_Aaa_Authentication_Users_User_State_Role_Union() {}

// To_OpenconfigSystem_System_Aaa_Authentication_Users_User_State_Role_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigSystem_System_Aaa_Authentication_Users_User_State_Role_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigSystem_System_Aaa_Authentication_Users_User_State) To_OpenconfigSystem_System_Aaa_Authentication_Users_User_State_Role_Union(i interface{}) (OpenconfigSystem_System_Aaa_Authentication_Users_User_State_Role_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigAaaTypes_SYSTEM_DEFINED_ROLES:
		return &OpenconfigSystem_System_Aaa_Authentication_Users_User_State_Role_Union_E_OpenconfigAaaTypes_SYSTEM_DEFINED_ROLES{v}, nil
	case string:
		return &OpenconfigSystem_System_Aaa_Authentication_Users_User_State_Role_Union_String{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigSystem_System_Aaa_Authentication_Users_User_State_Role_Union, unknown union type, got: %T, want any of [E_OpenconfigAaaTypes_SYSTEM_DEFINED_ROLES, string]", i, i)
	}
}

// OpenconfigSystem_System_Aaa_Authorization_Config_AuthorizationMethod_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-system/system/aaa/authorization/config/authorization-method within the YANG schema.
type OpenconfigSystem_System_Aaa_Authorization_Config_AuthorizationMethod_Union interface {
	Is_OpenconfigSystem_System_Aaa_Authorization_Config_AuthorizationMethod_Union()
}

// OpenconfigSystem_System_Aaa_Authorization_Config_AuthorizationMethod_Union_E_OpenconfigAaaTypes_AAA_METHOD_TYPE is used when /openconfig-system/system/aaa/authorization/config/authorization-method
// is to be set to a E_OpenconfigAaaTypes_AAA_METHOD_TYPE value.
type OpenconfigSystem_System_Aaa_Authorization_Config_AuthorizationMethod_Union_E_OpenconfigAaaTypes_AAA_METHOD_TYPE struct {
	E_OpenconfigAaaTypes_AAA_METHOD_TYPE E_OpenconfigAaaTypes_AAA_METHOD_TYPE
}

// Is_OpenconfigSystem_System_Aaa_Authorization_Config_AuthorizationMethod_Union ensures that OpenconfigSystem_System_Aaa_Authorization_Config_AuthorizationMethod_Union_E_OpenconfigAaaTypes_AAA_METHOD_TYPE
// implements the OpenconfigSystem_System_Aaa_Authorization_Config_AuthorizationMethod_Union interface.
func (*OpenconfigSystem_System_Aaa_Authorization_Config_AuthorizationMethod_Union_E_OpenconfigAaaTypes_AAA_METHOD_TYPE) Is_OpenconfigSystem_System_Aaa_Authorization_Config_AuthorizationMethod_Union() {}

// OpenconfigSystem_System_Aaa_Authorization_Config_AuthorizationMethod_Union_String is used when /openconfig-system/system/aaa/authorization/config/authorization-method
// is to be set to a string value.
type OpenconfigSystem_System_Aaa_Authorization_Config_AuthorizationMethod_Union_String struct {
	String string
}

// Is_OpenconfigSystem_System_Aaa_Authorization_Config_AuthorizationMethod_Union ensures that OpenconfigSystem_System_Aaa_Authorization_Config_AuthorizationMethod_Union_String
// implements the OpenconfigSystem_System_Aaa_Authorization_Config_AuthorizationMethod_Union interface.
func (*OpenconfigSystem_System_Aaa_Authorization_Config_AuthorizationMethod_Union_String) Is_OpenconfigSystem_System_Aaa_Authorization_Config_AuthorizationMethod_Union() {}

// To_OpenconfigSystem_System_Aaa_Authorization_Config_AuthorizationMethod_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigSystem_System_Aaa_Authorization_Config_AuthorizationMethod_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigSystem_System_Aaa_Authorization_Config) To_OpenconfigSystem_System_Aaa_Authorization_Config_AuthorizationMethod_Union(i interface{}) (OpenconfigSystem_System_Aaa_Authorization_Config_AuthorizationMethod_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigAaaTypes_AAA_METHOD_TYPE:
		return &OpenconfigSystem_System_Aaa_Authorization_Config_AuthorizationMethod_Union_E_OpenconfigAaaTypes_AAA_METHOD_TYPE{v}, nil
	case string:
		return &OpenconfigSystem_System_Aaa_Authorization_Config_AuthorizationMethod_Union_String{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigSystem_System_Aaa_Authorization_Config_AuthorizationMethod_Union, unknown union type, got: %T, want any of [E_OpenconfigAaaTypes_AAA_METHOD_TYPE, string]", i, i)
	}
}

// OpenconfigSystem_System_Aaa_Authorization_State_AuthorizationMethod_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-system/system/aaa/authorization/state/authorization-method within the YANG schema.
type OpenconfigSystem_System_Aaa_Authorization_State_AuthorizationMethod_Union interface {
	Is_OpenconfigSystem_System_Aaa_Authorization_State_AuthorizationMethod_Union()
}

// OpenconfigSystem_System_Aaa_Authorization_State_AuthorizationMethod_Union_E_OpenconfigAaaTypes_AAA_METHOD_TYPE is used when /openconfig-system/system/aaa/authorization/state/authorization-method
// is to be set to a E_OpenconfigAaaTypes_AAA_METHOD_TYPE value.
type OpenconfigSystem_System_Aaa_Authorization_State_AuthorizationMethod_Union_E_OpenconfigAaaTypes_AAA_METHOD_TYPE struct {
	E_OpenconfigAaaTypes_AAA_METHOD_TYPE E_OpenconfigAaaTypes_AAA_METHOD_TYPE
}

// Is_OpenconfigSystem_System_Aaa_Authorization_State_AuthorizationMethod_Union ensures that OpenconfigSystem_System_Aaa_Authorization_State_AuthorizationMethod_Union_E_OpenconfigAaaTypes_AAA_METHOD_TYPE
// implements the OpenconfigSystem_System_Aaa_Authorization_State_AuthorizationMethod_Union interface.
func (*OpenconfigSystem_System_Aaa_Authorization_State_AuthorizationMethod_Union_E_OpenconfigAaaTypes_AAA_METHOD_TYPE) Is_OpenconfigSystem_System_Aaa_Authorization_State_AuthorizationMethod_Union() {}

// OpenconfigSystem_System_Aaa_Authorization_State_AuthorizationMethod_Union_String is used when /openconfig-system/system/aaa/authorization/state/authorization-method
// is to be set to a string value.
type OpenconfigSystem_System_Aaa_Authorization_State_AuthorizationMethod_Union_String struct {
	String string
}

// Is_OpenconfigSystem_System_Aaa_Authorization_State_AuthorizationMethod_Union ensures that OpenconfigSystem_System_Aaa_Authorization_State_AuthorizationMethod_Union_String
// implements the OpenconfigSystem_System_Aaa_Authorization_State_AuthorizationMethod_Union interface.
func (*OpenconfigSystem_System_Aaa_Authorization_State_AuthorizationMethod_Union_String) Is_OpenconfigSystem_System_Aaa_Authorization_State_AuthorizationMethod_Union() {}

// To_OpenconfigSystem_System_Aaa_Authorization_State_AuthorizationMethod_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigSystem_System_Aaa_Authorization_State_AuthorizationMethod_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigSystem_System_Aaa_Authorization_State) To_OpenconfigSystem_System_Aaa_Authorization_State_AuthorizationMethod_Union(i interface{}) (OpenconfigSystem_System_Aaa_Authorization_State_AuthorizationMethod_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigAaaTypes_AAA_METHOD_TYPE:
		return &OpenconfigSystem_System_Aaa_Authorization_State_AuthorizationMethod_Union_E_OpenconfigAaaTypes_AAA_METHOD_TYPE{v}, nil
	case string:
		return &OpenconfigSystem_System_Aaa_Authorization_State_AuthorizationMethod_Union_String{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigSystem_System_Aaa_Authorization_State_AuthorizationMethod_Union, unknown union type, got: %T, want any of [E_OpenconfigAaaTypes_AAA_METHOD_TYPE, string]", i, i)
	}
}

// OpenconfigSystem_System_Alarms_Alarm_State_TypeId_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-system/system/alarms/alarm/state/type-id within the YANG schema.
type OpenconfigSystem_System_Alarms_Alarm_State_TypeId_Union interface {
	Is_OpenconfigSystem_System_Alarms_Alarm_State_TypeId_Union()
}

// OpenconfigSystem_System_Alarms_Alarm_State_TypeId_Union_E_OpenconfigAlarmTypes_OPENCONFIG_ALARM_TYPE_ID is used when /openconfig-system/system/alarms/alarm/state/type-id
// is to be set to a E_OpenconfigAlarmTypes_OPENCONFIG_ALARM_TYPE_ID value.
type OpenconfigSystem_System_Alarms_Alarm_State_TypeId_Union_E_OpenconfigAlarmTypes_OPENCONFIG_ALARM_TYPE_ID struct {
	E_OpenconfigAlarmTypes_OPENCONFIG_ALARM_TYPE_ID E_OpenconfigAlarmTypes_OPENCONFIG_ALARM_TYPE_ID
}

// Is_OpenconfigSystem_System_Alarms_Alarm_State_TypeId_Union ensures that OpenconfigSystem_System_Alarms_Alarm_State_TypeId_Union_E_OpenconfigAlarmTypes_OPENCONFIG_ALARM_TYPE_ID
// implements the OpenconfigSystem_System_Alarms_Alarm_State_TypeId_Union interface.
func (*OpenconfigSystem_System_Alarms_Alarm_State_TypeId_Union_E_OpenconfigAlarmTypes_OPENCONFIG_ALARM_TYPE_ID) Is_OpenconfigSystem_System_Alarms_Alarm_State_TypeId_Union() {}

// OpenconfigSystem_System_Alarms_Alarm_State_TypeId_Union_String is used when /openconfig-system/system/alarms/alarm/state/type-id
// is to be set to a string value.
type OpenconfigSystem_System_Alarms_Alarm_State_TypeId_Union_String struct {
	String string
}

// Is_OpenconfigSystem_System_Alarms_Alarm_State_TypeId_Union ensures that OpenconfigSystem_System_Alarms_Alarm_State_TypeId_Union_String
// implements the OpenconfigSystem_System_Alarms_Alarm_State_TypeId_Union interface.
func (*OpenconfigSystem_System_Alarms_Alarm_State_TypeId_Union_String) Is_OpenconfigSystem_System_Alarms_Alarm_State_TypeId_Union() {}

// To_OpenconfigSystem_System_Alarms_Alarm_State_TypeId_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigSystem_System_Alarms_Alarm_State_TypeId_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigSystem_System_Alarms_Alarm_State) To_OpenconfigSystem_System_Alarms_Alarm_State_TypeId_Union(i interface{}) (OpenconfigSystem_System_Alarms_Alarm_State_TypeId_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigAlarmTypes_OPENCONFIG_ALARM_TYPE_ID:
		return &OpenconfigSystem_System_Alarms_Alarm_State_TypeId_Union_E_OpenconfigAlarmTypes_OPENCONFIG_ALARM_TYPE_ID{v}, nil
	case string:
		return &OpenconfigSystem_System_Alarms_Alarm_State_TypeId_Union_String{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigSystem_System_Alarms_Alarm_State_TypeId_Union, unknown union type, got: %T, want any of [E_OpenconfigAlarmTypes_OPENCONFIG_ALARM_TYPE_ID, string]", i, i)
	}
}

// OpenconfigSystem_System_Cpus_Cpu_State_Index_Union is an interface that is implemented by valid types for the union
// for the leaf /openconfig-system/system/cpus/cpu/index within the YANG schema.
type OpenconfigSystem_System_Cpus_Cpu_State_Index_Union interface {
	Is_OpenconfigSystem_System_Cpus_Cpu_State_Index_Union()
}

// OpenconfigSystem_System_Cpus_Cpu_State_Index_Union_E_OpenconfigSystem_System_Cpus_Cpu_State_Index is used when /openconfig-system/system/cpus/cpu/index
// is to be set to a E_OpenconfigSystem_System_Cpus_Cpu_State_Index value.
type OpenconfigSystem_System_Cpus_Cpu_State_Index_Union_E_OpenconfigSystem_System_Cpus_Cpu_State_Index struct {
	E_OpenconfigSystem_System_Cpus_Cpu_State_Index E_OpenconfigSystem_System_Cpus_Cpu_State_Index
}

// Is_OpenconfigSystem_System_Cpus_Cpu_State_Index_Union ensures that OpenconfigSystem_System_Cpus_Cpu_State_Index_Union_E_OpenconfigSystem_System_Cpus_Cpu_State_Index
// implements the OpenconfigSystem_System_Cpus_Cpu_State_Index_Union interface.
func (*OpenconfigSystem_System_Cpus_Cpu_State_Index_Union_E_OpenconfigSystem_System_Cpus_Cpu_State_Index) Is_OpenconfigSystem_System_Cpus_Cpu_State_Index_Union() {}

// OpenconfigSystem_System_Cpus_Cpu_State_Index_Union_Uint32 is used when /openconfig-system/system/cpus/cpu/index
// is to be set to a uint32 value.
type OpenconfigSystem_System_Cpus_Cpu_State_Index_Union_Uint32 struct {
	Uint32 uint32
}

// Is_OpenconfigSystem_System_Cpus_Cpu_State_Index_Union ensures that OpenconfigSystem_System_Cpus_Cpu_State_Index_Union_Uint32
// implements the OpenconfigSystem_System_Cpus_Cpu_State_Index_Union interface.
func (*OpenconfigSystem_System_Cpus_Cpu_State_Index_Union_Uint32) Is_OpenconfigSystem_System_Cpus_Cpu_State_Index_Union() {}

// To_OpenconfigSystem_System_Cpus_Cpu_State_Index_Union takes an input interface{} and attempts to convert it to a struct
// which implements the OpenconfigSystem_System_Cpus_Cpu_State_Index_Union union. It returns an error if the interface{} supplied
// cannot be converted to a type within the union.
func (t *OpenconfigSystem_System_Cpus_Cpu) To_OpenconfigSystem_System_Cpus_Cpu_State_Index_Union(i interface{}) (OpenconfigSystem_System_Cpus_Cpu_State_Index_Union, error) {
	switch v := i.(type) {
	case E_OpenconfigSystem_System_Cpus_Cpu_State_Index:
		return &OpenconfigSystem_System_Cpus_Cpu_State_Index_Union_E_OpenconfigSystem_System_Cpus_Cpu_State_Index{v}, nil
	case uint32:
		return &OpenconfigSystem_System_Cpus_Cpu_State_Index_Union_Uint32{v}, nil
	default:
		return nil, fmt.Errorf("cannot convert %v to OpenconfigSystem_System_Cpus_Cpu_State_Index_Union, unknown union type, got: %T, want any of [E_OpenconfigSystem_System_Cpus_Cpu_State_Index, uint32]", i, i)
	}
}
